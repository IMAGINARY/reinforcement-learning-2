{"version":3,"sources":["webpack://reinforcement-learning-2/./node_modules/events/events.js","webpack://reinforcement-learning-2/./node_modules/js-yaml/index.js","webpack://reinforcement-learning-2/./node_modules/js-yaml/lib/common.js","webpack://reinforcement-learning-2/./node_modules/js-yaml/lib/dumper.js","webpack://reinforcement-learning-2/./node_modules/js-yaml/lib/exception.js","webpack://reinforcement-learning-2/./node_modules/js-yaml/lib/loader.js","webpack://reinforcement-learning-2/./node_modules/js-yaml/lib/schema.js","webpack://reinforcement-learning-2/./node_modules/js-yaml/lib/schema/core.js","webpack://reinforcement-learning-2/./node_modules/js-yaml/lib/schema/default.js","webpack://reinforcement-learning-2/./node_modules/js-yaml/lib/schema/failsafe.js","webpack://reinforcement-learning-2/./node_modules/js-yaml/lib/schema/json.js","webpack://reinforcement-learning-2/./node_modules/js-yaml/lib/snippet.js","webpack://reinforcement-learning-2/./node_modules/js-yaml/lib/type.js","webpack://reinforcement-learning-2/./node_modules/js-yaml/lib/type/binary.js","webpack://reinforcement-learning-2/./node_modules/js-yaml/lib/type/bool.js","webpack://reinforcement-learning-2/./node_modules/js-yaml/lib/type/float.js","webpack://reinforcement-learning-2/./node_modules/js-yaml/lib/type/int.js","webpack://reinforcement-learning-2/./node_modules/js-yaml/lib/type/map.js","webpack://reinforcement-learning-2/./node_modules/js-yaml/lib/type/merge.js","webpack://reinforcement-learning-2/./node_modules/js-yaml/lib/type/null.js","webpack://reinforcement-learning-2/./node_modules/js-yaml/lib/type/omap.js","webpack://reinforcement-learning-2/./node_modules/js-yaml/lib/type/pairs.js","webpack://reinforcement-learning-2/./node_modules/js-yaml/lib/type/seq.js","webpack://reinforcement-learning-2/./node_modules/js-yaml/lib/type/set.js","webpack://reinforcement-learning-2/./node_modules/js-yaml/lib/type/str.js","webpack://reinforcement-learning-2/./node_modules/js-yaml/lib/type/timestamp.js","webpack://reinforcement-learning-2/./src/sass/default.scss?bcb6","webpack://reinforcement-learning-2/./src/sass/embed.scss?a00b","webpack://reinforcement-learning-2/./src/sass/exhibit.scss?364b","webpack://reinforcement-learning-2/./src/js/ai-training-view.js","webpack://reinforcement-learning-2/./src/js/cfg-loader/cfg-loader.js","webpack://reinforcement-learning-2/./src/js/cfg-loader/cfg-reader-fetch.js","webpack://reinforcement-learning-2/./src/js/editor/maze-browser.js","webpack://reinforcement-learning-2/./src/js/editor/maze-editor.js","webpack://reinforcement-learning-2/./src/js/editor/modal-export.js","webpack://reinforcement-learning-2/./src/js/editor/modal-import.js","webpack://reinforcement-learning-2/./src/js/editor/modal-load.js","webpack://reinforcement-learning-2/./src/js/editor/modal-save.js","webpack://reinforcement-learning-2/./src/js/editor/object-store.js","webpack://reinforcement-learning-2/./src/js/exhibit/exhibit-maze-editor-palette.js","webpack://reinforcement-learning-2/./src/js/exhibit/i18n.js","webpack://reinforcement-learning-2/./src/js/exhibit/interactive-explore-exploit.js","webpack://reinforcement-learning-2/./src/js/exhibit/interactive-rewards.js","webpack://reinforcement-learning-2/./src/js/grid.js","webpack://reinforcement-learning-2/./src/js/hold-button.js","webpack://reinforcement-learning-2/./src/js/jquery-plugins/jquery.pointerclick.js","webpack://reinforcement-learning-2/./src/js/keyboard-controller.js","webpack://reinforcement-learning-2/./src/js/lib/array-2d.js","webpack://reinforcement-learning-2/./src/js/lib/show-fatal-error.js","webpack://reinforcement-learning-2/./src/js/lib/shuffle.js","webpack://reinforcement-learning-2/./src/js/maze-view-policy-overlay.js","webpack://reinforcement-learning-2/./src/js/maze-view-qvalue-overlay.js","webpack://reinforcement-learning-2/./src/js/maze-view.js","webpack://reinforcement-learning-2/./src/js/maze.js","webpack://reinforcement-learning-2/./src/js/modal.js","webpack://reinforcement-learning-2/./src/js/qlearning-ai.js","webpack://reinforcement-learning-2/./src/js/reaction-controller.js","webpack://reinforcement-learning-2/./src/js/reward-bar.js","webpack://reinforcement-learning-2/./src/js/robot-view.js","webpack://reinforcement-learning-2/./src/js/robot.js","webpack://reinforcement-learning-2/webpack/bootstrap","webpack://reinforcement-learning-2/webpack/runtime/global","webpack://reinforcement-learning-2/webpack/runtime/make namespace object","webpack://reinforcement-learning-2/webpack/runtime/publicPath","webpack://reinforcement-learning-2/./src/js/main-embed.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB;;AAEnB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,sBAAsB;AACvC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,cAAc;AACd;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA,iCAAiC,QAAQ;AACzC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;AACP;AACA,sCAAsC,QAAQ;AAC9C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;;AAEA;AACA,QAAQ,yBAAyB;AACjC;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,6DAA6D,aAAa;AAC1E;AACA,6DAA6D,aAAa;AAC1E;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,oCAAoC,aAAa;AACjD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;;;;;;;;;;;AChfa;;;AAGb,aAAa,mBAAO,CAAC,0DAAc;AACnC,aAAa,mBAAO,CAAC,0DAAc;;;AAGnC;AACA;AACA;AACA;AACA;AACA;;;AAGA,iGAA0D;AAC1D,uGAA4D;AAC5D,kIAAqE;AACrE,sHAAiE;AACjE,sHAAiE;AACjE,+HAAoE;AACpE,mBAAmB;AACnB,sBAAsB;AACtB,mBAAmB;AACnB,oHAA+D;;AAE/D;AACA,oBAAoB;AACpB,aAAa,mBAAO,CAAC,oEAAmB;AACxC,aAAa,mBAAO,CAAC,kEAAkB;AACvC,aAAa,mBAAO,CAAC,8DAAgB;AACrC,aAAa,mBAAO,CAAC,gEAAiB;AACtC,aAAa,mBAAO,CAAC,kEAAkB;AACvC,aAAa,mBAAO,CAAC,8DAAgB;AACrC,aAAa,mBAAO,CAAC,0EAAsB;AAC3C,aAAa,mBAAO,CAAC,gEAAiB;AACtC,aAAa,mBAAO,CAAC,8DAAgB;AACrC,aAAa,mBAAO,CAAC,kEAAkB;AACvC,aAAa,mBAAO,CAAC,gEAAiB;AACtC,aAAa,mBAAO,CAAC,8DAAgB;AACrC,aAAa,mBAAO,CAAC,8DAAgB;AACrC;;AAEA;AACA,uBAAuB;AACvB,0BAA0B;AAC1B,uBAAuB;;;;;;;;;;;;AC9CV;;;AAGb;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA,+CAA+C,gBAAgB;AAC/D;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA,iBAAiB,eAAe;AAChC;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;;AAGA,wBAAwB;AACxB,uBAAuB;AACvB,sBAAsB;AACtB,qBAAqB;AACrB,6BAA6B;AAC7B,qBAAqB;;;;;;;;;;;;AC1DR;;AAEb;;AAEA,0BAA0B,mBAAO,CAAC,sDAAU;AAC5C,0BAA0B,mBAAO,CAAC,4DAAa;AAC/C,0BAA0B,mBAAO,CAAC,sEAAkB;;AAEpD;AACA;;AAEA;AACA,qCAAqC;AACrC,qCAAqC;AACrC,qCAAqC;AACrC,qCAAqC;AACrC,qCAAqC;AACrC,qCAAqC;AACrC,qCAAqC;AACrC,qCAAqC;AACrC,qCAAqC;AACrC,qCAAqC;AACrC,qCAAqC;AACrC,qCAAqC;AACrC,qCAAqC;AACrC,qCAAqC;AACrC,qCAAqC;AACrC,qCAAqC;AACrC,qCAAqC;AACrC,qCAAqC;AACrC,qCAAqC;AACrC,qCAAqC;AACrC,qCAAqC;AACrC,qCAAqC,KAAK;AAC1C,qCAAqC;AACrC,qCAAqC,KAAK;;AAE1C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA,uCAAuC,gBAAgB;AACvD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,sDAAsD,gBAAgB;AACtE;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,MAAM;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA,6BAA6B;AAC7B;AACA;;AAEA;AACA;AACA;AACA,eAAe,mBAAmB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,eAAe,mBAAmB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA,sBAAsB;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA,yBAAyB;AACzB;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,mBAAmB;AACpC;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,yCAAyC,gBAAgB;AACzD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,yCAAyC,gBAAgB;AACzD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA,+BAA+B;AAC/B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gDAAgD,gBAAgB;;AAEhE;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,eAAe;AACf;;AAEA;;AAEA;;AAEA;AACA,eAAe;AACf;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB,gBAAgB;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA,gDAAgD,gBAAgB;AAChE;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,eAAe;AACf;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,eAAe;AACf;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,6BAA6B,EAAE;AAC/B;;AAEA;AACA;;AAEA;;AAEA,2CAA2C,gBAAgB;AAC3D;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,oDAAoD,gBAAgB;AACpE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,+CAA+C,gBAAgB;AAC/D;AACA;AACA,OAAO;AACP;;AAEA,sDAAsD,gBAAgB;AACtE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA,iCAAiC,YAAY;AAC7C;;AAEA;;AAEA;AACA;;AAEA,mBAAmB;;;;;;;;;;;;ACp8BnB;AACA;AACa;;;AAGb;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;;;;;;;;;;;;ACtDa;;AAEb;;AAEA,0BAA0B,mBAAO,CAAC,sDAAU;AAC5C,0BAA0B,mBAAO,CAAC,4DAAa;AAC/C,0BAA0B,mBAAO,CAAC,wDAAW;AAC7C,0BAA0B,mBAAO,CAAC,sEAAkB;;;AAGpD;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,6CAA6C,EAAE;AAC/C;AACA,oDAAoD,EAAE,eAAe,EAAE,YAAY;;;AAGnF,sBAAsB,4CAA4C;;AAElE;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uBAAuB;AACvB,uBAAuB;AACvB;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,0BAA0B,UAAU;AACpC,0BAA0B,UAAU;AACpC,0BAA0B,UAAU;AACpC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uCAAuC;AACvC;AACA,eAAe,SAAS;AACxB;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;;AAEd;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAAmD,qBAAqB;AACxE;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,6CAA6C;AAC7C;;AAEA;;AAEA,+CAA+C,kBAAkB;AACjE;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,8CAA8C,kBAAkB;AAChE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,kDAAkD,kBAAkB;AACpE;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA,KAAK;AACL;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA,KAAK;AACL;AACA;AACA;;AAEA,KAAK;AACL;;AAEA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA,OAAO;AACP;AACA;;AAEA,OAAO;AACP;AACA;;AAEA,cAAc,eAAe;AAC7B;;AAEA;AACA;;AAEA,WAAW;AACX;AACA;AACA;;AAEA;;AAEA;;AAEA,OAAO;AACP;AACA;;AAEA;;AAEA,KAAK;AACL;AACA;AACA;;AAEA,KAAK;AACL;;AAEA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,sBAAsB;AACtB;AACA;AACA,GAAG,yBAAyB;AAC5B,sBAAsB,IAAI;AAC1B;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA,KAAK;AACL;AACA,4EAA4E;AAC5E,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;AACA,QAAQ,+CAA+C;AACvD;;AAEA;AACA,UAAU,+CAA+C;AACzD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP,6BAA6B;AAC7B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;;AAEA;AACA,OAAO;AACP,6BAA6B;AAC7B;AACA;;AAEA;AACA,OAAO;AACP;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB;;AAEvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,OAAO;AACP;AACA;AACA;;AAEA,OAAO;AACP,4DAA4D,sBAAsB;AAClF;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,SAAS;AACT,mEAAmE;;AAEnE,SAAS;AACT;AACA;AACA,sBAAsB;AACtB;;AAEA,OAAO;AACP,8DAA8D;;AAE9D,OAAO;AACP;AACA;AACA,oBAAoB;AACpB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;;AAEA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA,QAAQ,+CAA+C;AACvD;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA,GAAG;AACH;;AAEA,GAAG;AACH;;AAEA,GAAG;AACH;;AAEA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;;AAEA,kEAAkE,0BAA0B;AAC5F;;AAEA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA,yDAAyD,0BAA0B;AACnF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,6EAA6E;AAC7E;;AAEA,iDAAiD;AACjD;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,YAAY,+CAA+C;AAC3D;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,gDAAgD,gBAAgB;AAChE;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;AAGA,sBAAsB;AACtB,mBAAmB;;;;;;;;;;;;AC9rDN;;AAEb;;AAEA,oBAAoB,mBAAO,CAAC,4DAAa;AACzC,oBAAoB,mBAAO,CAAC,kDAAQ;;;AAGpC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;AACA;;;AAGA;AACA;AACA,kBAAkB;AAClB,oBAAoB;AACpB,mBAAmB;AACnB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA,4CAA4C,gBAAgB;AAC5D;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,GAAG;AACH;AACA;;AAEA,GAAG;AACH,sBAAsB,mEAAmE;AACzF;AACA;;AAEA,GAAG;AACH;AACA,gCAAgC,mCAAmC;AACnE;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;;;;;;;;;;;;ACxHA;AACA;AACA;AACA;AACA;;;AAGa;;;AAGb,+FAAkC;;;;;;;;;;;;ACVlC;AACA;AACA;AACA;AACA;;;AAGa;;;AAGb,iBAAiB,qFAAwB;AACzC;AACA,IAAI,mBAAO,CAAC,uEAAmB;AAC/B,IAAI,mBAAO,CAAC,+DAAe;AAC3B;AACA;AACA,IAAI,mBAAO,CAAC,iEAAgB;AAC5B,IAAI,mBAAO,CAAC,6DAAc;AAC1B,IAAI,mBAAO,CAAC,+DAAe;AAC3B,IAAI,mBAAO,CAAC,2DAAa;AACzB;AACA,CAAC;;;;;;;;;;;;ACrBD;AACA;;;AAGa;;;AAGb,aAAa,mBAAO,CAAC,uDAAW;;;AAGhC;AACA;AACA,IAAI,mBAAO,CAAC,2DAAa;AACzB,IAAI,mBAAO,CAAC,2DAAa;AACzB,IAAI,mBAAO,CAAC,2DAAa;AACzB;AACA,CAAC;;;;;;;;;;;;AChBD;AACA;AACA;AACA;AACA;AACA;;;AAGa;;;AAGb,iBAAiB,6FAA4B;AAC7C;AACA,IAAI,mBAAO,CAAC,6DAAc;AAC1B,IAAI,mBAAO,CAAC,6DAAc;AAC1B,IAAI,mBAAO,CAAC,2DAAa;AACzB,IAAI,mBAAO,CAAC,+DAAe;AAC3B;AACA,CAAC;;;;;;;;;;;;AClBY;;;AAGb,aAAa,mBAAO,CAAC,sDAAU;;;AAG/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,aAAa,0BAA0B;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,aAAa,yBAAyB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;;;;;;;;;;;ACpGa;;AAEb,oBAAoB,mBAAO,CAAC,4DAAa;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,+BAA+B;AAC/B;AACA;AACA,gEAAgE,aAAa;AAC7E,oEAAoE,aAAa;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACjEa;;AAEb;;;AAGA,WAAW,mBAAO,CAAC,mDAAS;;;AAG5B;AACA;;;AAGA;AACA;;AAEA;;AAEA;AACA,eAAe,WAAW;AAC1B;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,eAAe,WAAW;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,eAAe,WAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;AC5HY;;AAEb,WAAW,mBAAO,CAAC,mDAAS;;AAE5B;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,kCAAkC,EAAE;AACtE,kCAAkC,kCAAkC,EAAE;AACtE,kCAAkC,kCAAkC;AACpE,GAAG;AACH;AACA,CAAC;;;;;;;;;;;;AClCY;;AAEb,aAAa,mBAAO,CAAC,uDAAW;AAChC,aAAa,mBAAO,CAAC,mDAAS;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;AChGY;;AAEb,aAAa,mBAAO,CAAC,uDAAW;AAChC,aAAa,mBAAO,CAAC,mDAAS;;AAE9B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,YAAY,aAAa;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA,YAAY,aAAa;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA,YAAY,aAAa;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,QAAQ,aAAa;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,6EAA6E,EAAE;AAChH,iCAAiC,+EAA+E,EAAE;AAClH,iCAAiC,yBAAyB,EAAE;AAC5D;AACA,iCAAiC,4GAA4G;AAC7I,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;AC3JY;;AAEb,WAAW,mBAAO,CAAC,mDAAS;;AAE5B;AACA;AACA,8BAA8B,kCAAkC;AAChE,CAAC;;;;;;;;;;;;ACPY;;AAEb,WAAW,mBAAO,CAAC,mDAAS;;AAE5B;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;ACXY;;AAEb,WAAW,mBAAO,CAAC,mDAAS;;AAE5B;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,YAAY,KAAK;AAC7C,4BAA4B,eAAe,EAAE;AAC7C,4BAA4B,eAAe,EAAE;AAC7C,4BAA4B,eAAe,EAAE;AAC7C,4BAA4B,WAAW;AACvC,GAAG;AACH;AACA,CAAC;;;;;;;;;;;;AClCY;;AAEb,WAAW,mBAAO,CAAC,mDAAS;;AAE5B;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,yCAAyC,gBAAgB;AACzD;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;AC3CY;;AAEb,WAAW,mBAAO,CAAC,mDAAS;;AAE5B;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA,yCAAyC,gBAAgB;AACzD;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA,yCAAyC,gBAAgB;AACzD;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;ACpDY;;AAEb,WAAW,mBAAO,CAAC,mDAAS;;AAE5B;AACA;AACA,8BAA8B,kCAAkC;AAChE,CAAC;;;;;;;;;;;;ACPY;;AAEb,WAAW,mBAAO,CAAC,mDAAS;;AAE5B;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;AC5BY;;AAEb,WAAW,mBAAO,CAAC,mDAAS;;AAE5B;AACA;AACA,8BAA8B,kCAAkC;AAChE,CAAC;;;;;;;;;;;;ACPY;;AAEb,WAAW,mBAAO,CAAC,mDAAS;;AAE5B;AACA;AACA;AACA,oBAAoB;;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;;AAE5B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA,0BAA0B;AAC1B;;AAEA,kBAAkB;AAClB;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;ACvFD;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA,qBAAqB,mBAAO,CAAC,+CAAQ;AACrC,kBAAkB,mBAAO,CAAC,4CAAc;AACxC,yBAAyB,mBAAO,CAAC,8CAAe;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,+BAA+B,qDAAqD;AACpF;AACA;AACA,SAAS;AACT,+BAA+B,sDAAsD;AACrF;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,gBAAgB,4BAA4B;AAC5C;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;AACA,gBAAgB,4BAA4B;AAC5C;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;AACA,gBAAgB,4BAA4B;AAC5C;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA,qDAAqD,SAAS;AAC9D,OAAO;AACP;AACA;AACA;AACA,mCAAmC,SAAS;AAC5C;AACA,gCAAgC;AAChC;;AAEA;AACA;AACA,gCAAgC,WAAW;AAC3C,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,mCAAmC,GAAG;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,2DAA2D,GAAG;AAC9D;AACA;AACA;AACA;AACA,2DAA2D,GAAG;AAC9D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;AC5NA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,KAAK;;AAEL,4DAA4D;AAC5D;AACA;;AAEA;;;;;;;;;;;ACzBA;AACA,0BAA0B,oBAAoB;AAC9C;AACA;;AAEA;;;;;;;;;;;ACLA,aAAa,mBAAO,CAAC,oCAAY;;AAEjC;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;;;;;;;;;;;ACjEA,aAAa,mBAAO,CAAC,oCAAY;AACjC,iBAAiB,mBAAO,CAAC,8CAAiB;AAC1C,kBAAkB,mBAAO,CAAC,sDAAiB;AAC3C,kBAAkB,mBAAO,CAAC,sDAAiB;AAC3C,oBAAoB,mBAAO,CAAC,0DAAmB;AAC/C,oBAAoB,mBAAO,CAAC,0DAAmB;AAC/C,oBAAoB,mBAAO,CAAC,0DAAmB;;AAE/C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,0CAA0C,yBAAyB;AACnE,4CAA4C,yBAAyB;AACrE;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;AC7HA,cAAc,mBAAO,CAAC,sCAAa;;AAEnC;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;;;;;;;;;;;AC3BA,cAAc,mBAAO,CAAC,sCAAa;;AAEnC;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACzCA,cAAc,mBAAO,CAAC,sCAAa;AACnC,oBAAoB,mBAAO,CAAC,0DAAmB;;AAE/C;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;AC3CA,cAAc,mBAAO,CAAC,sCAAa;AACnC,oBAAoB,mBAAO,CAAC,0DAAmB;;AAE/C;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;AC3CA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,oBAAoB;AACrC;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU,EAAE;AACZ;AACA;AACA;;AAEA;AACA;AACA,UAAU,EAAE;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACrEA,qBAAqB,mBAAO,CAAC,+CAAQ;AACrC,yBAAyB,mBAAO,CAAC,+CAAgB;;AAEjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,4CAA4C,GAAG;AAC/C;AACA;AACA;AACA,2DAA2D,mBAAmB;AAC9E,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,kEAAkE,aAAa;AAC/E;AACA;;AAEA;;;;;;;;;;;AC5EA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACnCA,aAAa,mBAAO,CAAC,iCAAS;AAC9B,cAAc,mBAAO,CAAC,mFAA0C;AAChE,iBAAiB,mBAAO,CAAC,yFAA6C;AACtE,cAAc,mBAAO,CAAC,mCAAU;AAChC,oBAAoB,mBAAO,CAAC,iDAAiB;AAC7C,iBAAiB,mBAAO,CAAC,2CAAc;AACvC,uBAAuB,mBAAO,CAAC,yDAAqB;AACpD,kBAAkB,mBAAO,CAAC,6CAAe;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACjCA,aAAa,mBAAO,CAAC,iCAAS;AAC9B,cAAc,mBAAO,CAAC,mEAAkC;AACxD,iBAAiB,mBAAO,CAAC,yEAAqC;AAC9D,cAAc,mBAAO,CAAC,mCAAU;AAChC,oBAAoB,mBAAO,CAAC,iDAAiB;AAC7C,iBAAiB,mBAAO,CAAC,2CAAc;AACvC,uBAAuB,mBAAO,CAAC,yDAAqB;AACpD,kBAAkB,mBAAO,CAAC,6CAAe;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8BAA8B,WAAW;AACzC;AACA;;AAEA;;;;;;;;;;;AC9EA,qBAAqB,mBAAO,CAAC,+CAAQ;AACrC,gBAAgB,mBAAO,CAAC,mDAAmB;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,OAAO;AAC/B,cAAc;AACd;AACA;AACA,WAAW,uBAAuB;AAClC;AACA;;AAEA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe;AACf,eAAe;AACf,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA,8BAA8B,kBAAkB;AAChD;AACA;AACA;AACA,8BAA8B,kBAAkB;AAChD;AACA;AACA;AACA,8BAA8B,kBAAkB;AAChD;AACA;AACA;AACA,8BAA8B,kBAAkB;AAChD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACnLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,gCAAgC,eAAe;AAC/C,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;;;;;;;;;;;ACxEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,CAAC;;;;;;;;;;;ACpDD;AACA;AACA,sBAAsB,eAAe,EAAE;AACvC,uBAAuB,eAAe,EAAE;AACxC,oBAAoB,eAAe,EAAE;AACrC,sBAAsB,eAAe,EAAE;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,oBAAoB,OAAO;AAC3B,uBAAuB,IAAI;AAC3B,cAAc;AACd;AACA;AACA;AACA,mBAAmB,YAAY;AAC/B;AACA,qBAAqB,WAAW;AAChC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB;AACnB,oBAAoB;AACpB,mBAAmB;AACnB;AACA;AACA;AACA,mBAAmB,WAAW;AAC9B,qBAAqB,YAAY;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,mBAAmB,cAAc;AACjC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe;AACf,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,kBAAkB;AAClB;AACA;AACA,mBAAmB,gBAAgB;AACnC,qBAAqB,mBAAmB;AACxC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe;AACf,mBAAmB;AACnB;AACA;AACA,mBAAmB,cAAc;AACjC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe;AACf,cAAc;AACd;AACA;AACA;AACA,mBAAmB,cAAc;AACjC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe;AACf,eAAe;AACf,cAAc;AACd;AACA;AACA;AACA;AACA,eAAe;AACf,sBAAsB;AACtB;AACA;AACA,mBAAmB,cAAc;AACjC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA,yBAAyB;AACzB,0BAA0B;AAC1B,eAAe;AACf,eAAe;AACf;AACA;AACA;AACA,eAAe;AACf,sBAAsB;AACtB,0BAA0B;AAC1B,cAAc;AACd;AACA;AACA;AACA,mBAAmB,cAAc;AACjC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,cAAc;AACjC,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,UAAU;AAC7B;AACA,qBAAqB,UAAU;AAC/B;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;AC5MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;ACdA;AACA;AACA,oBAAoB,6BAA6B;AACjD;AACA,WAAW,QAAQ;AACnB;;AAEA,kBAAkB;;;;;;;;;;;ACPlB;AACA,iBAAiB,mBAAO,CAAC,6CAAgB;;AAEzC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW,gBAAgB;;AAE3B,mBAAmB,YAAY;AAC/B;AACA,qBAAqB,WAAW;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,WAAW,gBAAgB;;AAE3B,mBAAmB,YAAY;AAC/B;AACA,qBAAqB,WAAW;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,gBAAgB;AAC3B,qBAAqB;;AAErB,mBAAmB,YAAY;AAC/B;AACA,qBAAqB,WAAW;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,QAAQ;AACnB,WAAW,OAAO;;AAElB,mBAAmB,wBAAwB;AAC3C,qBAAqB,2BAA2B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACpLA;AACA,iBAAiB,mBAAO,CAAC,6CAAgB;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,WAAW,gBAAgB;AAC3B,qBAAqB;;AAErB;AACA,qDAAqD,YAAY,QAAQ;AACzE;AACA;AACA;;AAEA,mBAAmB,YAAY;AAC/B;AACA,qBAAqB,WAAW;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,QAAQ;AACnB,WAAW,OAAO;;AAElB,mBAAmB,uBAAuB;AAC1C,qBAAqB,0BAA0B;AAC/C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACzHA;AACA,qBAAqB,mBAAO,CAAC,+CAAQ;AACrC,qBAAqB,mBAAO,CAAC,8EAAsC;AACnE,kBAAkB,mBAAO,CAAC,4CAAc;AACxC,gBAAgB,mBAAO,CAAC,gDAAgB;;AAExC;AACA,wCAAwC,EAAE;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yCAAyC,YAAY,OAAO;AAC5D;AACA;AACA,WAAW;AACX,SAAS;AACT,kCAAkC,aAAa;AAC/C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,WAAW,QAAQ;AACnB;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA,uCAAuC,6BAA6B,EAAE;AACtE;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,UAAU;;AAErD;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS,OAAO;AAChB;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,yBAAyB;AACjE;AACA;;AAEA;AACA;AACA,gCAAgC,WAAW,mCAAmC,WAAW;AACzF;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;;;;AC7QA,qBAAqB,mBAAO,CAAC,+CAAQ;AACrC,aAAa,mBAAO,CAAC,mCAAW;AAChC,gBAAgB,mBAAO,CAAC,mDAAmB;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,WAAW,MAAM;AACjB;AACA;AACA,8BAA8B,aAAa,OAAO,aAAa;AAC/D;AACA;;AAEA;AACA,WAAW,aAAa;AACxB,WAAW,gBAAgB;AAC3B;AACA,4BAA4B,aAAa;AACzC;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,iCAAiC,aAAa;AAC9C;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;AC1IA;AACA;AACA,aAAa,OAAO;AACpB;AACA,aAAa,OAAO;AACpB;AACA,aAAa,OAAO;AACpB;AACA,aAAa,QAAQ;AACrB;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8BAA8B;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,aAAa;AAClD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;AC7DA,qBAAqB,mBAAO,CAAC,+CAAQ;AACrC,cAAc,mBAAO,CAAC,qCAAY;AAClC,OAAO,eAAe,GAAG,mBAAO,CAAC,8CAAe;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,WAAW,gBAAgB;AAC3B;;AAEA,mBAAmB,YAAY;AAC/B;AACA,qBAAqB,WAAW;AAChC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,WAAW,gBAAgB;AAC3B;AACA,mBAAmB,YAAY;AAC/B;AACA,qBAAqB,WAAW;AAChC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,qBAAqB;AACxC,qBAAqB,wBAAwB;AAC7C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,qBAAqB;AACxC,qBAAqB,wBAAwB;AAC7C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;ACrKA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,2CAA2C,KAAK;AAChD;AACA;AACA;AACA,kCAAkC,qBAAqB;AACvD,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;;;;;;;;;;;AChCA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8BAA8B,WAAW;AACzC;AACA;;AAEA;;;;;;;;;;;AC5DA;AACA,qBAAqB,mBAAO,CAAC,+CAAQ;;AAErC;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,8BAA8B,yBAAyB;AACvD;;AAEA;AACA,8BAA8B,qBAAqB;AACnD;;AAEA;AACA,8BAA8B,0BAA0B;AACxD;;AAEA;AACA,8BAA8B,gCAAgC;AAC9D;AACA,gCAAgC,+BAA+B;AAC/D;AACA;;AAEA;AACA,8BAA8B,gBAAgB;AAC9C;;AAEA;AACA,8BAA8B,0BAA0B;AACxD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,4BAA4B;AACjF;;AAEA;AACA,4BAA4B,4BAA4B;AACxD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;AC/JA,qBAAqB,mBAAO,CAAC,+CAAQ;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;;UC5HA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,EAAE;WACF;WACA;WACA,CAAC,I;;;;;WCPD;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;;WCNA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,kC;;;;;;;;;;ACfA,mBAAO,CAAC,qDAAsB;AAC9B,mBAAO,CAAC,qDAAsB;AAC9B,mBAAO,CAAC,iDAAoB;AAC5B,mBAAO,CAAC,4FAAsC;AAC9C,aAAa,mBAAO,CAAC,gDAAS;AAC9B,kBAAkB,mBAAO,CAAC,kEAAyB;AACnD,uBAAuB,mBAAO,CAAC,8EAA+B;AAC9D,aAAa,mBAAO,CAAC,gDAAgB;AACrC,uBAAuB,mBAAO,CAAC,gEAAwB;AACvD,aAAa,mBAAO,CAAC,gCAAQ;AAC7B,cAAc,mBAAO,CAAC,4DAA6B;AACnD,cAAc,mBAAO,CAAC,kCAAS;AAC/B,oBAAoB,mBAAO,CAAC,gDAAgB;AAC5C,yBAAyB,mBAAO,CAAC,8DAAuB;AACxD,iCAAiC,mBAAO,CAAC,8FAAuC;AAChF,mBAAmB,mBAAO,CAAC,4DAAsB;AACjD,8BAA8B,mBAAO,CAAC,wEAA4B;AAClE,8BAA8B,mBAAO,CAAC,wEAA4B;AAClE,uBAAuB,mBAAO,CAAC,wDAAoB;AACnD,kCAAkC,mBAAO,CAAC,8FAAuC;AACjF,2BAA2B,mBAAO,CAAC,8EAA+B;AAClE,2BAA2B,mBAAO,CAAC,8DAAuB;AAC1D,iBAAiB,mBAAO,CAAC,0CAAa;AACtC,iBAAiB,mBAAO,CAAC,sFAA0C;AACnE,kBAAkB,mBAAO,CAAC,4CAAc;AACxC,kBAAkB,mBAAO,CAAC,4CAAc;;AAExC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iCAAiC,gBAAgB;AACjD;;AAEA;AACA;AACA,oCAAoC,qBAAqB;AACzD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,GAAG;AACrC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,kCAAkC,GAAG;AACrC;AACA;AACA;AACA;AACA,kCAAkC,GAAG;AACrC;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA,kCAAkC,0CAA0C;AAC5E;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,0CAA0C;AAC/E;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,wBAAwB,kBAAkB;AAC1C;AACA,SAAS;;AAET;AACA,gDAAgD,kBAAkB;AAClE;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA,OAAO;;AAEP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,CAAC","file":"embed.8f764a1f7632d6c30586.js","sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","'use strict';\n\n\nvar loader = require('./lib/loader');\nvar dumper = require('./lib/dumper');\n\n\nfunction renamed(from, to) {\n  return function () {\n    throw new Error('Function yaml.' + from + ' is removed in js-yaml 4. ' +\n      'Use yaml.' + to + ' instead, which is now safe by default.');\n  };\n}\n\n\nmodule.exports.Type                = require('./lib/type');\nmodule.exports.Schema              = require('./lib/schema');\nmodule.exports.FAILSAFE_SCHEMA     = require('./lib/schema/failsafe');\nmodule.exports.JSON_SCHEMA         = require('./lib/schema/json');\nmodule.exports.CORE_SCHEMA         = require('./lib/schema/core');\nmodule.exports.DEFAULT_SCHEMA      = require('./lib/schema/default');\nmodule.exports.load                = loader.load;\nmodule.exports.loadAll             = loader.loadAll;\nmodule.exports.dump                = dumper.dump;\nmodule.exports.YAMLException       = require('./lib/exception');\n\n// Re-export all types in case user wants to create custom schema\nmodule.exports.types = {\n  binary:    require('./lib/type/binary'),\n  float:     require('./lib/type/float'),\n  map:       require('./lib/type/map'),\n  null:      require('./lib/type/null'),\n  pairs:     require('./lib/type/pairs'),\n  set:       require('./lib/type/set'),\n  timestamp: require('./lib/type/timestamp'),\n  bool:      require('./lib/type/bool'),\n  int:       require('./lib/type/int'),\n  merge:     require('./lib/type/merge'),\n  omap:      require('./lib/type/omap'),\n  seq:       require('./lib/type/seq'),\n  str:       require('./lib/type/str')\n};\n\n// Removed functions from JS-YAML 3.0.x\nmodule.exports.safeLoad            = renamed('safeLoad', 'load');\nmodule.exports.safeLoadAll         = renamed('safeLoadAll', 'loadAll');\nmodule.exports.safeDump            = renamed('safeDump', 'dump');\n","'use strict';\n\n\nfunction isNothing(subject) {\n  return (typeof subject === 'undefined') || (subject === null);\n}\n\n\nfunction isObject(subject) {\n  return (typeof subject === 'object') && (subject !== null);\n}\n\n\nfunction toArray(sequence) {\n  if (Array.isArray(sequence)) return sequence;\n  else if (isNothing(sequence)) return [];\n\n  return [ sequence ];\n}\n\n\nfunction extend(target, source) {\n  var index, length, key, sourceKeys;\n\n  if (source) {\n    sourceKeys = Object.keys(source);\n\n    for (index = 0, length = sourceKeys.length; index < length; index += 1) {\n      key = sourceKeys[index];\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\n\nfunction repeat(string, count) {\n  var result = '', cycle;\n\n  for (cycle = 0; cycle < count; cycle += 1) {\n    result += string;\n  }\n\n  return result;\n}\n\n\nfunction isNegativeZero(number) {\n  return (number === 0) && (Number.NEGATIVE_INFINITY === 1 / number);\n}\n\n\nmodule.exports.isNothing      = isNothing;\nmodule.exports.isObject       = isObject;\nmodule.exports.toArray        = toArray;\nmodule.exports.repeat         = repeat;\nmodule.exports.isNegativeZero = isNegativeZero;\nmodule.exports.extend         = extend;\n","'use strict';\n\n/*eslint-disable no-use-before-define*/\n\nvar common              = require('./common');\nvar YAMLException       = require('./exception');\nvar DEFAULT_SCHEMA      = require('./schema/default');\n\nvar _toString       = Object.prototype.toString;\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar CHAR_BOM                  = 0xFEFF;\nvar CHAR_TAB                  = 0x09; /* Tab */\nvar CHAR_LINE_FEED            = 0x0A; /* LF */\nvar CHAR_CARRIAGE_RETURN      = 0x0D; /* CR */\nvar CHAR_SPACE                = 0x20; /* Space */\nvar CHAR_EXCLAMATION          = 0x21; /* ! */\nvar CHAR_DOUBLE_QUOTE         = 0x22; /* \" */\nvar CHAR_SHARP                = 0x23; /* # */\nvar CHAR_PERCENT              = 0x25; /* % */\nvar CHAR_AMPERSAND            = 0x26; /* & */\nvar CHAR_SINGLE_QUOTE         = 0x27; /* ' */\nvar CHAR_ASTERISK             = 0x2A; /* * */\nvar CHAR_COMMA                = 0x2C; /* , */\nvar CHAR_MINUS                = 0x2D; /* - */\nvar CHAR_COLON                = 0x3A; /* : */\nvar CHAR_EQUALS               = 0x3D; /* = */\nvar CHAR_GREATER_THAN         = 0x3E; /* > */\nvar CHAR_QUESTION             = 0x3F; /* ? */\nvar CHAR_COMMERCIAL_AT        = 0x40; /* @ */\nvar CHAR_LEFT_SQUARE_BRACKET  = 0x5B; /* [ */\nvar CHAR_RIGHT_SQUARE_BRACKET = 0x5D; /* ] */\nvar CHAR_GRAVE_ACCENT         = 0x60; /* ` */\nvar CHAR_LEFT_CURLY_BRACKET   = 0x7B; /* { */\nvar CHAR_VERTICAL_LINE        = 0x7C; /* | */\nvar CHAR_RIGHT_CURLY_BRACKET  = 0x7D; /* } */\n\nvar ESCAPE_SEQUENCES = {};\n\nESCAPE_SEQUENCES[0x00]   = '\\\\0';\nESCAPE_SEQUENCES[0x07]   = '\\\\a';\nESCAPE_SEQUENCES[0x08]   = '\\\\b';\nESCAPE_SEQUENCES[0x09]   = '\\\\t';\nESCAPE_SEQUENCES[0x0A]   = '\\\\n';\nESCAPE_SEQUENCES[0x0B]   = '\\\\v';\nESCAPE_SEQUENCES[0x0C]   = '\\\\f';\nESCAPE_SEQUENCES[0x0D]   = '\\\\r';\nESCAPE_SEQUENCES[0x1B]   = '\\\\e';\nESCAPE_SEQUENCES[0x22]   = '\\\\\"';\nESCAPE_SEQUENCES[0x5C]   = '\\\\\\\\';\nESCAPE_SEQUENCES[0x85]   = '\\\\N';\nESCAPE_SEQUENCES[0xA0]   = '\\\\_';\nESCAPE_SEQUENCES[0x2028] = '\\\\L';\nESCAPE_SEQUENCES[0x2029] = '\\\\P';\n\nvar DEPRECATED_BOOLEANS_SYNTAX = [\n  'y', 'Y', 'yes', 'Yes', 'YES', 'on', 'On', 'ON',\n  'n', 'N', 'no', 'No', 'NO', 'off', 'Off', 'OFF'\n];\n\nvar DEPRECATED_BASE60_SYNTAX = /^[-+]?[0-9_]+(?::[0-9_]+)+(?:\\.[0-9_]*)?$/;\n\nfunction compileStyleMap(schema, map) {\n  var result, keys, index, length, tag, style, type;\n\n  if (map === null) return {};\n\n  result = {};\n  keys = Object.keys(map);\n\n  for (index = 0, length = keys.length; index < length; index += 1) {\n    tag = keys[index];\n    style = String(map[tag]);\n\n    if (tag.slice(0, 2) === '!!') {\n      tag = 'tag:yaml.org,2002:' + tag.slice(2);\n    }\n    type = schema.compiledTypeMap['fallback'][tag];\n\n    if (type && _hasOwnProperty.call(type.styleAliases, style)) {\n      style = type.styleAliases[style];\n    }\n\n    result[tag] = style;\n  }\n\n  return result;\n}\n\nfunction encodeHex(character) {\n  var string, handle, length;\n\n  string = character.toString(16).toUpperCase();\n\n  if (character <= 0xFF) {\n    handle = 'x';\n    length = 2;\n  } else if (character <= 0xFFFF) {\n    handle = 'u';\n    length = 4;\n  } else if (character <= 0xFFFFFFFF) {\n    handle = 'U';\n    length = 8;\n  } else {\n    throw new YAMLException('code point within a string may not be greater than 0xFFFFFFFF');\n  }\n\n  return '\\\\' + handle + common.repeat('0', length - string.length) + string;\n}\n\n\nvar QUOTING_TYPE_SINGLE = 1,\n    QUOTING_TYPE_DOUBLE = 2;\n\nfunction State(options) {\n  this.schema        = options['schema'] || DEFAULT_SCHEMA;\n  this.indent        = Math.max(1, (options['indent'] || 2));\n  this.noArrayIndent = options['noArrayIndent'] || false;\n  this.skipInvalid   = options['skipInvalid'] || false;\n  this.flowLevel     = (common.isNothing(options['flowLevel']) ? -1 : options['flowLevel']);\n  this.styleMap      = compileStyleMap(this.schema, options['styles'] || null);\n  this.sortKeys      = options['sortKeys'] || false;\n  this.lineWidth     = options['lineWidth'] || 80;\n  this.noRefs        = options['noRefs'] || false;\n  this.noCompatMode  = options['noCompatMode'] || false;\n  this.condenseFlow  = options['condenseFlow'] || false;\n  this.quotingType   = options['quotingType'] === '\"' ? QUOTING_TYPE_DOUBLE : QUOTING_TYPE_SINGLE;\n  this.forceQuotes   = options['forceQuotes'] || false;\n  this.replacer      = typeof options['replacer'] === 'function' ? options['replacer'] : null;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.explicitTypes = this.schema.compiledExplicit;\n\n  this.tag = null;\n  this.result = '';\n\n  this.duplicates = [];\n  this.usedDuplicates = null;\n}\n\n// Indents every line in a string. Empty lines (\\n only) are not indented.\nfunction indentString(string, spaces) {\n  var ind = common.repeat(' ', spaces),\n      position = 0,\n      next = -1,\n      result = '',\n      line,\n      length = string.length;\n\n  while (position < length) {\n    next = string.indexOf('\\n', position);\n    if (next === -1) {\n      line = string.slice(position);\n      position = length;\n    } else {\n      line = string.slice(position, next + 1);\n      position = next + 1;\n    }\n\n    if (line.length && line !== '\\n') result += ind;\n\n    result += line;\n  }\n\n  return result;\n}\n\nfunction generateNextLine(state, level) {\n  return '\\n' + common.repeat(' ', state.indent * level);\n}\n\nfunction testImplicitResolving(state, str) {\n  var index, length, type;\n\n  for (index = 0, length = state.implicitTypes.length; index < length; index += 1) {\n    type = state.implicitTypes[index];\n\n    if (type.resolve(str)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// [33] s-white ::= s-space | s-tab\nfunction isWhitespace(c) {\n  return c === CHAR_SPACE || c === CHAR_TAB;\n}\n\n// Returns true if the character can be printed without escaping.\n// From YAML 1.2: \"any allowed characters known to be non-printable\n// should also be escaped. [However,] This isn’t mandatory\"\n// Derived from nb-char - \\t - #x85 - #xA0 - #x2028 - #x2029.\nfunction isPrintable(c) {\n  return  (0x00020 <= c && c <= 0x00007E)\n      || ((0x000A1 <= c && c <= 0x00D7FF) && c !== 0x2028 && c !== 0x2029)\n      || ((0x0E000 <= c && c <= 0x00FFFD) && c !== CHAR_BOM)\n      ||  (0x10000 <= c && c <= 0x10FFFF);\n}\n\n// [34] ns-char ::= nb-char - s-white\n// [27] nb-char ::= c-printable - b-char - c-byte-order-mark\n// [26] b-char  ::= b-line-feed | b-carriage-return\n// Including s-white (for some reason, examples doesn't match specs in this aspect)\n// ns-char ::= c-printable - b-line-feed - b-carriage-return - c-byte-order-mark\nfunction isNsCharOrWhitespace(c) {\n  return isPrintable(c)\n    && c !== CHAR_BOM\n    // - b-char\n    && c !== CHAR_CARRIAGE_RETURN\n    && c !== CHAR_LINE_FEED;\n}\n\n// [127]  ns-plain-safe(c) ::= c = flow-out  ⇒ ns-plain-safe-out\n//                             c = flow-in   ⇒ ns-plain-safe-in\n//                             c = block-key ⇒ ns-plain-safe-out\n//                             c = flow-key  ⇒ ns-plain-safe-in\n// [128] ns-plain-safe-out ::= ns-char\n// [129]  ns-plain-safe-in ::= ns-char - c-flow-indicator\n// [130]  ns-plain-char(c) ::=  ( ns-plain-safe(c) - “:” - “#” )\n//                            | ( /* An ns-char preceding */ “#” )\n//                            | ( “:” /* Followed by an ns-plain-safe(c) */ )\nfunction isPlainSafe(c, prev, inblock) {\n  var cIsNsCharOrWhitespace = isNsCharOrWhitespace(c);\n  var cIsNsChar = cIsNsCharOrWhitespace && !isWhitespace(c);\n  return (\n    // ns-plain-safe\n    inblock ? // c = flow-in\n      cIsNsCharOrWhitespace\n      : cIsNsCharOrWhitespace\n        // - c-flow-indicator\n        && c !== CHAR_COMMA\n        && c !== CHAR_LEFT_SQUARE_BRACKET\n        && c !== CHAR_RIGHT_SQUARE_BRACKET\n        && c !== CHAR_LEFT_CURLY_BRACKET\n        && c !== CHAR_RIGHT_CURLY_BRACKET\n  )\n    // ns-plain-char\n    && c !== CHAR_SHARP // false on '#'\n    && !(prev === CHAR_COLON && !cIsNsChar) // false on ': '\n    || (isNsCharOrWhitespace(prev) && !isWhitespace(prev) && c === CHAR_SHARP) // change to true on '[^ ]#'\n    || (prev === CHAR_COLON && cIsNsChar); // change to true on ':[^ ]'\n}\n\n// Simplified test for values allowed as the first character in plain style.\nfunction isPlainSafeFirst(c) {\n  // Uses a subset of ns-char - c-indicator\n  // where ns-char = nb-char - s-white.\n  // No support of ( ( “?” | “:” | “-” ) /* Followed by an ns-plain-safe(c)) */ ) part\n  return isPrintable(c) && c !== CHAR_BOM\n    && !isWhitespace(c) // - s-white\n    // - (c-indicator ::=\n    // “-” | “?” | “:” | “,” | “[” | “]” | “{” | “}”\n    && c !== CHAR_MINUS\n    && c !== CHAR_QUESTION\n    && c !== CHAR_COLON\n    && c !== CHAR_COMMA\n    && c !== CHAR_LEFT_SQUARE_BRACKET\n    && c !== CHAR_RIGHT_SQUARE_BRACKET\n    && c !== CHAR_LEFT_CURLY_BRACKET\n    && c !== CHAR_RIGHT_CURLY_BRACKET\n    // | “#” | “&” | “*” | “!” | “|” | “=” | “>” | “'” | “\"”\n    && c !== CHAR_SHARP\n    && c !== CHAR_AMPERSAND\n    && c !== CHAR_ASTERISK\n    && c !== CHAR_EXCLAMATION\n    && c !== CHAR_VERTICAL_LINE\n    && c !== CHAR_EQUALS\n    && c !== CHAR_GREATER_THAN\n    && c !== CHAR_SINGLE_QUOTE\n    && c !== CHAR_DOUBLE_QUOTE\n    // | “%” | “@” | “`”)\n    && c !== CHAR_PERCENT\n    && c !== CHAR_COMMERCIAL_AT\n    && c !== CHAR_GRAVE_ACCENT;\n}\n\n// Simplified test for values allowed as the last character in plain style.\nfunction isPlainSafeLast(c) {\n  // just not whitespace or colon, it will be checked to be plain character later\n  return !isWhitespace(c) && c !== CHAR_COLON;\n}\n\n// Same as 'string'.codePointAt(pos), but works in older browsers.\nfunction codePointAt(string, pos) {\n  var first = string.charCodeAt(pos), second;\n  if (first >= 0xD800 && first <= 0xDBFF && pos + 1 < string.length) {\n    second = string.charCodeAt(pos + 1);\n    if (second >= 0xDC00 && second <= 0xDFFF) {\n      // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n      return (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n    }\n  }\n  return first;\n}\n\n// Determines whether block indentation indicator is required.\nfunction needIndentIndicator(string) {\n  var leadingSpaceRe = /^\\n* /;\n  return leadingSpaceRe.test(string);\n}\n\nvar STYLE_PLAIN   = 1,\n    STYLE_SINGLE  = 2,\n    STYLE_LITERAL = 3,\n    STYLE_FOLDED  = 4,\n    STYLE_DOUBLE  = 5;\n\n// Determines which scalar styles are possible and returns the preferred style.\n// lineWidth = -1 => no limit.\n// Pre-conditions: str.length > 0.\n// Post-conditions:\n//    STYLE_PLAIN or STYLE_SINGLE => no \\n are in the string.\n//    STYLE_LITERAL => no lines are suitable for folding (or lineWidth is -1).\n//    STYLE_FOLDED => a line > lineWidth and can be folded (and lineWidth != -1).\nfunction chooseScalarStyle(string, singleLineOnly, indentPerLevel, lineWidth,\n  testAmbiguousType, quotingType, forceQuotes, inblock) {\n\n  var i;\n  var char = 0;\n  var prevChar = null;\n  var hasLineBreak = false;\n  var hasFoldableLine = false; // only checked if shouldTrackWidth\n  var shouldTrackWidth = lineWidth !== -1;\n  var previousLineBreak = -1; // count the first line correctly\n  var plain = isPlainSafeFirst(codePointAt(string, 0))\n          && isPlainSafeLast(codePointAt(string, string.length - 1));\n\n  if (singleLineOnly || forceQuotes) {\n    // Case: no block styles.\n    // Check for disallowed characters to rule out plain and single.\n    for (i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n      char = codePointAt(string, i);\n      if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      plain = plain && isPlainSafe(char, prevChar, inblock);\n      prevChar = char;\n    }\n  } else {\n    // Case: block styles permitted.\n    for (i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n      char = codePointAt(string, i);\n      if (char === CHAR_LINE_FEED) {\n        hasLineBreak = true;\n        // Check if any line can be folded.\n        if (shouldTrackWidth) {\n          hasFoldableLine = hasFoldableLine ||\n            // Foldable line = too long, and not more-indented.\n            (i - previousLineBreak - 1 > lineWidth &&\n             string[previousLineBreak + 1] !== ' ');\n          previousLineBreak = i;\n        }\n      } else if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      plain = plain && isPlainSafe(char, prevChar, inblock);\n      prevChar = char;\n    }\n    // in case the end is missing a \\n\n    hasFoldableLine = hasFoldableLine || (shouldTrackWidth &&\n      (i - previousLineBreak - 1 > lineWidth &&\n       string[previousLineBreak + 1] !== ' '));\n  }\n  // Although every style can represent \\n without escaping, prefer block styles\n  // for multiline, since they're more readable and they don't add empty lines.\n  // Also prefer folding a super-long line.\n  if (!hasLineBreak && !hasFoldableLine) {\n    // Strings interpretable as another type have to be quoted;\n    // e.g. the string 'true' vs. the boolean true.\n    if (plain && !forceQuotes && !testAmbiguousType(string)) {\n      return STYLE_PLAIN;\n    }\n    return quotingType === QUOTING_TYPE_DOUBLE ? STYLE_DOUBLE : STYLE_SINGLE;\n  }\n  // Edge case: block indentation indicator can only have one digit.\n  if (indentPerLevel > 9 && needIndentIndicator(string)) {\n    return STYLE_DOUBLE;\n  }\n  // At this point we know block styles are valid.\n  // Prefer literal style unless we want to fold.\n  if (!forceQuotes) {\n    return hasFoldableLine ? STYLE_FOLDED : STYLE_LITERAL;\n  }\n  return quotingType === QUOTING_TYPE_DOUBLE ? STYLE_DOUBLE : STYLE_SINGLE;\n}\n\n// Note: line breaking/folding is implemented for only the folded style.\n// NB. We drop the last trailing newline (if any) of a returned block scalar\n//  since the dumper adds its own newline. This always works:\n//    • No ending newline => unaffected; already using strip \"-\" chomping.\n//    • Ending newline    => removed then restored.\n//  Importantly, this keeps the \"+\" chomp indicator from gaining an extra line.\nfunction writeScalar(state, string, level, iskey, inblock) {\n  state.dump = (function () {\n    if (string.length === 0) {\n      return state.quotingType === QUOTING_TYPE_DOUBLE ? '\"\"' : \"''\";\n    }\n    if (!state.noCompatMode) {\n      if (DEPRECATED_BOOLEANS_SYNTAX.indexOf(string) !== -1 || DEPRECATED_BASE60_SYNTAX.test(string)) {\n        return state.quotingType === QUOTING_TYPE_DOUBLE ? ('\"' + string + '\"') : (\"'\" + string + \"'\");\n      }\n    }\n\n    var indent = state.indent * Math.max(1, level); // no 0-indent scalars\n    // As indentation gets deeper, let the width decrease monotonically\n    // to the lower bound min(state.lineWidth, 40).\n    // Note that this implies\n    //  state.lineWidth ≤ 40 + state.indent: width is fixed at the lower bound.\n    //  state.lineWidth > 40 + state.indent: width decreases until the lower bound.\n    // This behaves better than a constant minimum width which disallows narrower options,\n    // or an indent threshold which causes the width to suddenly increase.\n    var lineWidth = state.lineWidth === -1\n      ? -1 : Math.max(Math.min(state.lineWidth, 40), state.lineWidth - indent);\n\n    // Without knowing if keys are implicit/explicit, assume implicit for safety.\n    var singleLineOnly = iskey\n      // No block styles in flow mode.\n      || (state.flowLevel > -1 && level >= state.flowLevel);\n    function testAmbiguity(string) {\n      return testImplicitResolving(state, string);\n    }\n\n    switch (chooseScalarStyle(string, singleLineOnly, state.indent, lineWidth,\n      testAmbiguity, state.quotingType, state.forceQuotes && !iskey, inblock)) {\n\n      case STYLE_PLAIN:\n        return string;\n      case STYLE_SINGLE:\n        return \"'\" + string.replace(/'/g, \"''\") + \"'\";\n      case STYLE_LITERAL:\n        return '|' + blockHeader(string, state.indent)\n          + dropEndingNewline(indentString(string, indent));\n      case STYLE_FOLDED:\n        return '>' + blockHeader(string, state.indent)\n          + dropEndingNewline(indentString(foldString(string, lineWidth), indent));\n      case STYLE_DOUBLE:\n        return '\"' + escapeString(string, lineWidth) + '\"';\n      default:\n        throw new YAMLException('impossible error: invalid scalar style');\n    }\n  }());\n}\n\n// Pre-conditions: string is valid for a block scalar, 1 <= indentPerLevel <= 9.\nfunction blockHeader(string, indentPerLevel) {\n  var indentIndicator = needIndentIndicator(string) ? String(indentPerLevel) : '';\n\n  // note the special case: the string '\\n' counts as a \"trailing\" empty line.\n  var clip =          string[string.length - 1] === '\\n';\n  var keep = clip && (string[string.length - 2] === '\\n' || string === '\\n');\n  var chomp = keep ? '+' : (clip ? '' : '-');\n\n  return indentIndicator + chomp + '\\n';\n}\n\n// (See the note for writeScalar.)\nfunction dropEndingNewline(string) {\n  return string[string.length - 1] === '\\n' ? string.slice(0, -1) : string;\n}\n\n// Note: a long line without a suitable break point will exceed the width limit.\n// Pre-conditions: every char in str isPrintable, str.length > 0, width > 0.\nfunction foldString(string, width) {\n  // In folded style, $k$ consecutive newlines output as $k+1$ newlines—\n  // unless they're before or after a more-indented line, or at the very\n  // beginning or end, in which case $k$ maps to $k$.\n  // Therefore, parse each chunk as newline(s) followed by a content line.\n  var lineRe = /(\\n+)([^\\n]*)/g;\n\n  // first line (possibly an empty line)\n  var result = (function () {\n    var nextLF = string.indexOf('\\n');\n    nextLF = nextLF !== -1 ? nextLF : string.length;\n    lineRe.lastIndex = nextLF;\n    return foldLine(string.slice(0, nextLF), width);\n  }());\n  // If we haven't reached the first content line yet, don't add an extra \\n.\n  var prevMoreIndented = string[0] === '\\n' || string[0] === ' ';\n  var moreIndented;\n\n  // rest of the lines\n  var match;\n  while ((match = lineRe.exec(string))) {\n    var prefix = match[1], line = match[2];\n    moreIndented = (line[0] === ' ');\n    result += prefix\n      + (!prevMoreIndented && !moreIndented && line !== ''\n        ? '\\n' : '')\n      + foldLine(line, width);\n    prevMoreIndented = moreIndented;\n  }\n\n  return result;\n}\n\n// Greedy line breaking.\n// Picks the longest line under the limit each time,\n// otherwise settles for the shortest line over the limit.\n// NB. More-indented lines *cannot* be folded, as that would add an extra \\n.\nfunction foldLine(line, width) {\n  if (line === '' || line[0] === ' ') return line;\n\n  // Since a more-indented line adds a \\n, breaks can't be followed by a space.\n  var breakRe = / [^ ]/g; // note: the match index will always be <= length-2.\n  var match;\n  // start is an inclusive index. end, curr, and next are exclusive.\n  var start = 0, end, curr = 0, next = 0;\n  var result = '';\n\n  // Invariants: 0 <= start <= length-1.\n  //   0 <= curr <= next <= max(0, length-2). curr - start <= width.\n  // Inside the loop:\n  //   A match implies length >= 2, so curr and next are <= length-2.\n  while ((match = breakRe.exec(line))) {\n    next = match.index;\n    // maintain invariant: curr - start <= width\n    if (next - start > width) {\n      end = (curr > start) ? curr : next; // derive end <= length-2\n      result += '\\n' + line.slice(start, end);\n      // skip the space that was output as \\n\n      start = end + 1;                    // derive start <= length-1\n    }\n    curr = next;\n  }\n\n  // By the invariants, start <= length-1, so there is something left over.\n  // It is either the whole string or a part starting from non-whitespace.\n  result += '\\n';\n  // Insert a break if the remainder is too long and there is a break available.\n  if (line.length - start > width && curr > start) {\n    result += line.slice(start, curr) + '\\n' + line.slice(curr + 1);\n  } else {\n    result += line.slice(start);\n  }\n\n  return result.slice(1); // drop extra \\n joiner\n}\n\n// Escapes a double-quoted string.\nfunction escapeString(string) {\n  var result = '';\n  var char = 0;\n  var escapeSeq;\n\n  for (var i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n    char = codePointAt(string, i);\n    escapeSeq = ESCAPE_SEQUENCES[char];\n\n    if (!escapeSeq && isPrintable(char)) {\n      result += string[i];\n      if (char >= 0x10000) result += string[i + 1];\n    } else {\n      result += escapeSeq || encodeHex(char);\n    }\n  }\n\n  return result;\n}\n\nfunction writeFlowSequence(state, level, object) {\n  var _result = '',\n      _tag    = state.tag,\n      index,\n      length,\n      value;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    value = object[index];\n\n    if (state.replacer) {\n      value = state.replacer.call(object, String(index), value);\n    }\n\n    // Write only valid elements, put null instead of invalid elements.\n    if (writeNode(state, level, value, false, false) ||\n        (typeof value === 'undefined' &&\n         writeNode(state, level, null, false, false))) {\n\n      if (_result !== '') _result += ',' + (!state.condenseFlow ? ' ' : '');\n      _result += state.dump;\n    }\n  }\n\n  state.tag = _tag;\n  state.dump = '[' + _result + ']';\n}\n\nfunction writeBlockSequence(state, level, object, compact) {\n  var _result = '',\n      _tag    = state.tag,\n      index,\n      length,\n      value;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    value = object[index];\n\n    if (state.replacer) {\n      value = state.replacer.call(object, String(index), value);\n    }\n\n    // Write only valid elements, put null instead of invalid elements.\n    if (writeNode(state, level + 1, value, true, true, false, true) ||\n        (typeof value === 'undefined' &&\n         writeNode(state, level + 1, null, true, true, false, true))) {\n\n      if (!compact || _result !== '') {\n        _result += generateNextLine(state, level);\n      }\n\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        _result += '-';\n      } else {\n        _result += '- ';\n      }\n\n      _result += state.dump;\n    }\n  }\n\n  state.tag = _tag;\n  state.dump = _result || '[]'; // Empty sequence if no valid values.\n}\n\nfunction writeFlowMapping(state, level, object) {\n  var _result       = '',\n      _tag          = state.tag,\n      objectKeyList = Object.keys(object),\n      index,\n      length,\n      objectKey,\n      objectValue,\n      pairBuffer;\n\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n\n    pairBuffer = '';\n    if (_result !== '') pairBuffer += ', ';\n\n    if (state.condenseFlow) pairBuffer += '\"';\n\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n\n    if (state.replacer) {\n      objectValue = state.replacer.call(object, objectKey, objectValue);\n    }\n\n    if (!writeNode(state, level, objectKey, false, false)) {\n      continue; // Skip this pair because of invalid key;\n    }\n\n    if (state.dump.length > 1024) pairBuffer += '? ';\n\n    pairBuffer += state.dump + (state.condenseFlow ? '\"' : '') + ':' + (state.condenseFlow ? '' : ' ');\n\n    if (!writeNode(state, level, objectValue, false, false)) {\n      continue; // Skip this pair because of invalid value.\n    }\n\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n\n  state.tag = _tag;\n  state.dump = '{' + _result + '}';\n}\n\nfunction writeBlockMapping(state, level, object, compact) {\n  var _result       = '',\n      _tag          = state.tag,\n      objectKeyList = Object.keys(object),\n      index,\n      length,\n      objectKey,\n      objectValue,\n      explicitPair,\n      pairBuffer;\n\n  // Allow sorting keys so that the output file is deterministic\n  if (state.sortKeys === true) {\n    // Default sorting\n    objectKeyList.sort();\n  } else if (typeof state.sortKeys === 'function') {\n    // Custom sort function\n    objectKeyList.sort(state.sortKeys);\n  } else if (state.sortKeys) {\n    // Something is wrong\n    throw new YAMLException('sortKeys must be a boolean or a function');\n  }\n\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n    pairBuffer = '';\n\n    if (!compact || _result !== '') {\n      pairBuffer += generateNextLine(state, level);\n    }\n\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n\n    if (state.replacer) {\n      objectValue = state.replacer.call(object, objectKey, objectValue);\n    }\n\n    if (!writeNode(state, level + 1, objectKey, true, true, true)) {\n      continue; // Skip this pair because of invalid key.\n    }\n\n    explicitPair = (state.tag !== null && state.tag !== '?') ||\n                   (state.dump && state.dump.length > 1024);\n\n    if (explicitPair) {\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        pairBuffer += '?';\n      } else {\n        pairBuffer += '? ';\n      }\n    }\n\n    pairBuffer += state.dump;\n\n    if (explicitPair) {\n      pairBuffer += generateNextLine(state, level);\n    }\n\n    if (!writeNode(state, level + 1, objectValue, true, explicitPair)) {\n      continue; // Skip this pair because of invalid value.\n    }\n\n    if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n      pairBuffer += ':';\n    } else {\n      pairBuffer += ': ';\n    }\n\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n\n  state.tag = _tag;\n  state.dump = _result || '{}'; // Empty mapping if no valid pairs.\n}\n\nfunction detectType(state, object, explicit) {\n  var _result, typeList, index, length, type, style;\n\n  typeList = explicit ? state.explicitTypes : state.implicitTypes;\n\n  for (index = 0, length = typeList.length; index < length; index += 1) {\n    type = typeList[index];\n\n    if ((type.instanceOf  || type.predicate) &&\n        (!type.instanceOf || ((typeof object === 'object') && (object instanceof type.instanceOf))) &&\n        (!type.predicate  || type.predicate(object))) {\n\n      if (explicit) {\n        if (type.multi && type.representName) {\n          state.tag = type.representName(object);\n        } else {\n          state.tag = type.tag;\n        }\n      } else {\n        state.tag = '?';\n      }\n\n      if (type.represent) {\n        style = state.styleMap[type.tag] || type.defaultStyle;\n\n        if (_toString.call(type.represent) === '[object Function]') {\n          _result = type.represent(object, style);\n        } else if (_hasOwnProperty.call(type.represent, style)) {\n          _result = type.represent[style](object, style);\n        } else {\n          throw new YAMLException('!<' + type.tag + '> tag resolver accepts not \"' + style + '\" style');\n        }\n\n        state.dump = _result;\n      }\n\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// Serializes `object` and writes it to global `result`.\n// Returns true on success, or false on invalid object.\n//\nfunction writeNode(state, level, object, block, compact, iskey, isblockseq) {\n  state.tag = null;\n  state.dump = object;\n\n  if (!detectType(state, object, false)) {\n    detectType(state, object, true);\n  }\n\n  var type = _toString.call(state.dump);\n  var inblock = block;\n  var tagStr;\n\n  if (block) {\n    block = (state.flowLevel < 0 || state.flowLevel > level);\n  }\n\n  var objectOrArray = type === '[object Object]' || type === '[object Array]',\n      duplicateIndex,\n      duplicate;\n\n  if (objectOrArray) {\n    duplicateIndex = state.duplicates.indexOf(object);\n    duplicate = duplicateIndex !== -1;\n  }\n\n  if ((state.tag !== null && state.tag !== '?') || duplicate || (state.indent !== 2 && level > 0)) {\n    compact = false;\n  }\n\n  if (duplicate && state.usedDuplicates[duplicateIndex]) {\n    state.dump = '*ref_' + duplicateIndex;\n  } else {\n    if (objectOrArray && duplicate && !state.usedDuplicates[duplicateIndex]) {\n      state.usedDuplicates[duplicateIndex] = true;\n    }\n    if (type === '[object Object]') {\n      if (block && (Object.keys(state.dump).length !== 0)) {\n        writeBlockMapping(state, level, state.dump, compact);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowMapping(state, level, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object Array]') {\n      if (block && (state.dump.length !== 0)) {\n        if (state.noArrayIndent && !isblockseq && level > 0) {\n          writeBlockSequence(state, level - 1, state.dump, compact);\n        } else {\n          writeBlockSequence(state, level, state.dump, compact);\n        }\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowSequence(state, level, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object String]') {\n      if (state.tag !== '?') {\n        writeScalar(state, state.dump, level, iskey, inblock);\n      }\n    } else if (type === '[object Undefined]') {\n      return false;\n    } else {\n      if (state.skipInvalid) return false;\n      throw new YAMLException('unacceptable kind of an object to dump ' + type);\n    }\n\n    if (state.tag !== null && state.tag !== '?') {\n      // Need to encode all characters except those allowed by the spec:\n      //\n      // [35] ns-dec-digit    ::=  [#x30-#x39] /* 0-9 */\n      // [36] ns-hex-digit    ::=  ns-dec-digit\n      //                         | [#x41-#x46] /* A-F */ | [#x61-#x66] /* a-f */\n      // [37] ns-ascii-letter ::=  [#x41-#x5A] /* A-Z */ | [#x61-#x7A] /* a-z */\n      // [38] ns-word-char    ::=  ns-dec-digit | ns-ascii-letter | “-”\n      // [39] ns-uri-char     ::=  “%” ns-hex-digit ns-hex-digit | ns-word-char | “#”\n      //                         | “;” | “/” | “?” | “:” | “@” | “&” | “=” | “+” | “$” | “,”\n      //                         | “_” | “.” | “!” | “~” | “*” | “'” | “(” | “)” | “[” | “]”\n      //\n      // Also need to encode '!' because it has special meaning (end of tag prefix).\n      //\n      tagStr = encodeURI(\n        state.tag[0] === '!' ? state.tag.slice(1) : state.tag\n      ).replace(/!/g, '%21');\n\n      if (state.tag[0] === '!') {\n        tagStr = '!' + tagStr;\n      } else if (tagStr.slice(0, 18) === 'tag:yaml.org,2002:') {\n        tagStr = '!!' + tagStr.slice(18);\n      } else {\n        tagStr = '!<' + tagStr + '>';\n      }\n\n      state.dump = tagStr + ' ' + state.dump;\n    }\n  }\n\n  return true;\n}\n\nfunction getDuplicateReferences(object, state) {\n  var objects = [],\n      duplicatesIndexes = [],\n      index,\n      length;\n\n  inspectNode(object, objects, duplicatesIndexes);\n\n  for (index = 0, length = duplicatesIndexes.length; index < length; index += 1) {\n    state.duplicates.push(objects[duplicatesIndexes[index]]);\n  }\n  state.usedDuplicates = new Array(length);\n}\n\nfunction inspectNode(object, objects, duplicatesIndexes) {\n  var objectKeyList,\n      index,\n      length;\n\n  if (object !== null && typeof object === 'object') {\n    index = objects.indexOf(object);\n    if (index !== -1) {\n      if (duplicatesIndexes.indexOf(index) === -1) {\n        duplicatesIndexes.push(index);\n      }\n    } else {\n      objects.push(object);\n\n      if (Array.isArray(object)) {\n        for (index = 0, length = object.length; index < length; index += 1) {\n          inspectNode(object[index], objects, duplicatesIndexes);\n        }\n      } else {\n        objectKeyList = Object.keys(object);\n\n        for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n          inspectNode(object[objectKeyList[index]], objects, duplicatesIndexes);\n        }\n      }\n    }\n  }\n}\n\nfunction dump(input, options) {\n  options = options || {};\n\n  var state = new State(options);\n\n  if (!state.noRefs) getDuplicateReferences(input, state);\n\n  var value = input;\n\n  if (state.replacer) {\n    value = state.replacer.call({ '': value }, '', value);\n  }\n\n  if (writeNode(state, 0, value, true, true)) return state.dump + '\\n';\n\n  return '';\n}\n\nmodule.exports.dump = dump;\n","// YAML error class. http://stackoverflow.com/questions/8458984\n//\n'use strict';\n\n\nfunction formatError(exception, compact) {\n  var where = '', message = exception.reason || '(unknown reason)';\n\n  if (!exception.mark) return message;\n\n  if (exception.mark.name) {\n    where += 'in \"' + exception.mark.name + '\" ';\n  }\n\n  where += '(' + (exception.mark.line + 1) + ':' + (exception.mark.column + 1) + ')';\n\n  if (!compact && exception.mark.snippet) {\n    where += '\\n\\n' + exception.mark.snippet;\n  }\n\n  return message + ' ' + where;\n}\n\n\nfunction YAMLException(reason, mark) {\n  // Super constructor\n  Error.call(this);\n\n  this.name = 'YAMLException';\n  this.reason = reason;\n  this.mark = mark;\n  this.message = formatError(this, false);\n\n  // Include stack trace in error object\n  if (Error.captureStackTrace) {\n    // Chrome and NodeJS\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    // FF, IE 10+ and Safari 6+. Fallback for others\n    this.stack = (new Error()).stack || '';\n  }\n}\n\n\n// Inherit from Error\nYAMLException.prototype = Object.create(Error.prototype);\nYAMLException.prototype.constructor = YAMLException;\n\n\nYAMLException.prototype.toString = function toString(compact) {\n  return this.name + ': ' + formatError(this, compact);\n};\n\n\nmodule.exports = YAMLException;\n","'use strict';\n\n/*eslint-disable max-len,no-use-before-define*/\n\nvar common              = require('./common');\nvar YAMLException       = require('./exception');\nvar makeSnippet         = require('./snippet');\nvar DEFAULT_SCHEMA      = require('./schema/default');\n\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\n\nvar CONTEXT_FLOW_IN   = 1;\nvar CONTEXT_FLOW_OUT  = 2;\nvar CONTEXT_BLOCK_IN  = 3;\nvar CONTEXT_BLOCK_OUT = 4;\n\n\nvar CHOMPING_CLIP  = 1;\nvar CHOMPING_STRIP = 2;\nvar CHOMPING_KEEP  = 3;\n\n\nvar PATTERN_NON_PRINTABLE         = /[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F-\\x84\\x86-\\x9F\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\nvar PATTERN_NON_ASCII_LINE_BREAKS = /[\\x85\\u2028\\u2029]/;\nvar PATTERN_FLOW_INDICATORS       = /[,\\[\\]\\{\\}]/;\nvar PATTERN_TAG_HANDLE            = /^(?:!|!!|![a-z\\-]+!)$/i;\nvar PATTERN_TAG_URI               = /^(?:!|[^,\\[\\]\\{\\}])(?:%[0-9a-f]{2}|[0-9a-z\\-#;\\/\\?:@&=\\+\\$,_\\.!~\\*'\\(\\)\\[\\]])*$/i;\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction is_EOL(c) {\n  return (c === 0x0A/* LF */) || (c === 0x0D/* CR */);\n}\n\nfunction is_WHITE_SPACE(c) {\n  return (c === 0x09/* Tab */) || (c === 0x20/* Space */);\n}\n\nfunction is_WS_OR_EOL(c) {\n  return (c === 0x09/* Tab */) ||\n         (c === 0x20/* Space */) ||\n         (c === 0x0A/* LF */) ||\n         (c === 0x0D/* CR */);\n}\n\nfunction is_FLOW_INDICATOR(c) {\n  return c === 0x2C/* , */ ||\n         c === 0x5B/* [ */ ||\n         c === 0x5D/* ] */ ||\n         c === 0x7B/* { */ ||\n         c === 0x7D/* } */;\n}\n\nfunction fromHexCode(c) {\n  var lc;\n\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  /*eslint-disable no-bitwise*/\n  lc = c | 0x20;\n\n  if ((0x61/* a */ <= lc) && (lc <= 0x66/* f */)) {\n    return lc - 0x61 + 10;\n  }\n\n  return -1;\n}\n\nfunction escapedHexLen(c) {\n  if (c === 0x78/* x */) { return 2; }\n  if (c === 0x75/* u */) { return 4; }\n  if (c === 0x55/* U */) { return 8; }\n  return 0;\n}\n\nfunction fromDecimalCode(c) {\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  return -1;\n}\n\nfunction simpleEscapeSequence(c) {\n  /* eslint-disable indent */\n  return (c === 0x30/* 0 */) ? '\\x00' :\n        (c === 0x61/* a */) ? '\\x07' :\n        (c === 0x62/* b */) ? '\\x08' :\n        (c === 0x74/* t */) ? '\\x09' :\n        (c === 0x09/* Tab */) ? '\\x09' :\n        (c === 0x6E/* n */) ? '\\x0A' :\n        (c === 0x76/* v */) ? '\\x0B' :\n        (c === 0x66/* f */) ? '\\x0C' :\n        (c === 0x72/* r */) ? '\\x0D' :\n        (c === 0x65/* e */) ? '\\x1B' :\n        (c === 0x20/* Space */) ? ' ' :\n        (c === 0x22/* \" */) ? '\\x22' :\n        (c === 0x2F/* / */) ? '/' :\n        (c === 0x5C/* \\ */) ? '\\x5C' :\n        (c === 0x4E/* N */) ? '\\x85' :\n        (c === 0x5F/* _ */) ? '\\xA0' :\n        (c === 0x4C/* L */) ? '\\u2028' :\n        (c === 0x50/* P */) ? '\\u2029' : '';\n}\n\nfunction charFromCodepoint(c) {\n  if (c <= 0xFFFF) {\n    return String.fromCharCode(c);\n  }\n  // Encode UTF-16 surrogate pair\n  // https://en.wikipedia.org/wiki/UTF-16#Code_points_U.2B010000_to_U.2B10FFFF\n  return String.fromCharCode(\n    ((c - 0x010000) >> 10) + 0xD800,\n    ((c - 0x010000) & 0x03FF) + 0xDC00\n  );\n}\n\nvar simpleEscapeCheck = new Array(256); // integer, for fast access\nvar simpleEscapeMap = new Array(256);\nfor (var i = 0; i < 256; i++) {\n  simpleEscapeCheck[i] = simpleEscapeSequence(i) ? 1 : 0;\n  simpleEscapeMap[i] = simpleEscapeSequence(i);\n}\n\n\nfunction State(input, options) {\n  this.input = input;\n\n  this.filename  = options['filename']  || null;\n  this.schema    = options['schema']    || DEFAULT_SCHEMA;\n  this.onWarning = options['onWarning'] || null;\n  // (Hidden) Remove? makes the loader to expect YAML 1.1 documents\n  // if such documents have no explicit %YAML directive\n  this.legacy    = options['legacy']    || false;\n\n  this.json      = options['json']      || false;\n  this.listener  = options['listener']  || null;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.typeMap       = this.schema.compiledTypeMap;\n\n  this.length     = input.length;\n  this.position   = 0;\n  this.line       = 0;\n  this.lineStart  = 0;\n  this.lineIndent = 0;\n\n  // position of first leading tab in the current line,\n  // used to make sure there are no tabs in the indentation\n  this.firstTabInLine = -1;\n\n  this.documents = [];\n\n  /*\n  this.version;\n  this.checkLineBreaks;\n  this.tagMap;\n  this.anchorMap;\n  this.tag;\n  this.anchor;\n  this.kind;\n  this.result;*/\n\n}\n\n\nfunction generateError(state, message) {\n  var mark = {\n    name:     state.filename,\n    buffer:   state.input.slice(0, -1), // omit trailing \\0\n    position: state.position,\n    line:     state.line,\n    column:   state.position - state.lineStart\n  };\n\n  mark.snippet = makeSnippet(mark);\n\n  return new YAMLException(message, mark);\n}\n\nfunction throwError(state, message) {\n  throw generateError(state, message);\n}\n\nfunction throwWarning(state, message) {\n  if (state.onWarning) {\n    state.onWarning.call(null, generateError(state, message));\n  }\n}\n\n\nvar directiveHandlers = {\n\n  YAML: function handleYamlDirective(state, name, args) {\n\n    var match, major, minor;\n\n    if (state.version !== null) {\n      throwError(state, 'duplication of %YAML directive');\n    }\n\n    if (args.length !== 1) {\n      throwError(state, 'YAML directive accepts exactly one argument');\n    }\n\n    match = /^([0-9]+)\\.([0-9]+)$/.exec(args[0]);\n\n    if (match === null) {\n      throwError(state, 'ill-formed argument of the YAML directive');\n    }\n\n    major = parseInt(match[1], 10);\n    minor = parseInt(match[2], 10);\n\n    if (major !== 1) {\n      throwError(state, 'unacceptable YAML version of the document');\n    }\n\n    state.version = args[0];\n    state.checkLineBreaks = (minor < 2);\n\n    if (minor !== 1 && minor !== 2) {\n      throwWarning(state, 'unsupported YAML version of the document');\n    }\n  },\n\n  TAG: function handleTagDirective(state, name, args) {\n\n    var handle, prefix;\n\n    if (args.length !== 2) {\n      throwError(state, 'TAG directive accepts exactly two arguments');\n    }\n\n    handle = args[0];\n    prefix = args[1];\n\n    if (!PATTERN_TAG_HANDLE.test(handle)) {\n      throwError(state, 'ill-formed tag handle (first argument) of the TAG directive');\n    }\n\n    if (_hasOwnProperty.call(state.tagMap, handle)) {\n      throwError(state, 'there is a previously declared suffix for \"' + handle + '\" tag handle');\n    }\n\n    if (!PATTERN_TAG_URI.test(prefix)) {\n      throwError(state, 'ill-formed tag prefix (second argument) of the TAG directive');\n    }\n\n    try {\n      prefix = decodeURIComponent(prefix);\n    } catch (err) {\n      throwError(state, 'tag prefix is malformed: ' + prefix);\n    }\n\n    state.tagMap[handle] = prefix;\n  }\n};\n\n\nfunction captureSegment(state, start, end, checkJson) {\n  var _position, _length, _character, _result;\n\n  if (start < end) {\n    _result = state.input.slice(start, end);\n\n    if (checkJson) {\n      for (_position = 0, _length = _result.length; _position < _length; _position += 1) {\n        _character = _result.charCodeAt(_position);\n        if (!(_character === 0x09 ||\n              (0x20 <= _character && _character <= 0x10FFFF))) {\n          throwError(state, 'expected valid JSON character');\n        }\n      }\n    } else if (PATTERN_NON_PRINTABLE.test(_result)) {\n      throwError(state, 'the stream contains non-printable characters');\n    }\n\n    state.result += _result;\n  }\n}\n\nfunction mergeMappings(state, destination, source, overridableKeys) {\n  var sourceKeys, key, index, quantity;\n\n  if (!common.isObject(source)) {\n    throwError(state, 'cannot merge mappings; the provided source object is unacceptable');\n  }\n\n  sourceKeys = Object.keys(source);\n\n  for (index = 0, quantity = sourceKeys.length; index < quantity; index += 1) {\n    key = sourceKeys[index];\n\n    if (!_hasOwnProperty.call(destination, key)) {\n      destination[key] = source[key];\n      overridableKeys[key] = true;\n    }\n  }\n}\n\nfunction storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode,\n  startLine, startLineStart, startPos) {\n\n  var index, quantity;\n\n  // The output is a plain object here, so keys can only be strings.\n  // We need to convert keyNode to a string, but doing so can hang the process\n  // (deeply nested arrays that explode exponentially using aliases).\n  if (Array.isArray(keyNode)) {\n    keyNode = Array.prototype.slice.call(keyNode);\n\n    for (index = 0, quantity = keyNode.length; index < quantity; index += 1) {\n      if (Array.isArray(keyNode[index])) {\n        throwError(state, 'nested arrays are not supported inside keys');\n      }\n\n      if (typeof keyNode === 'object' && _class(keyNode[index]) === '[object Object]') {\n        keyNode[index] = '[object Object]';\n      }\n    }\n  }\n\n  // Avoid code execution in load() via toString property\n  // (still use its own toString for arrays, timestamps,\n  // and whatever user schema extensions happen to have @@toStringTag)\n  if (typeof keyNode === 'object' && _class(keyNode) === '[object Object]') {\n    keyNode = '[object Object]';\n  }\n\n\n  keyNode = String(keyNode);\n\n  if (_result === null) {\n    _result = {};\n  }\n\n  if (keyTag === 'tag:yaml.org,2002:merge') {\n    if (Array.isArray(valueNode)) {\n      for (index = 0, quantity = valueNode.length; index < quantity; index += 1) {\n        mergeMappings(state, _result, valueNode[index], overridableKeys);\n      }\n    } else {\n      mergeMappings(state, _result, valueNode, overridableKeys);\n    }\n  } else {\n    if (!state.json &&\n        !_hasOwnProperty.call(overridableKeys, keyNode) &&\n        _hasOwnProperty.call(_result, keyNode)) {\n      state.line = startLine || state.line;\n      state.lineStart = startLineStart || state.lineStart;\n      state.position = startPos || state.position;\n      throwError(state, 'duplicated mapping key');\n    }\n\n    // used for this specific key only because Object.defineProperty is slow\n    if (keyNode === '__proto__') {\n      Object.defineProperty(_result, keyNode, {\n        configurable: true,\n        enumerable: true,\n        writable: true,\n        value: valueNode\n      });\n    } else {\n      _result[keyNode] = valueNode;\n    }\n    delete overridableKeys[keyNode];\n  }\n\n  return _result;\n}\n\nfunction readLineBreak(state) {\n  var ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x0A/* LF */) {\n    state.position++;\n  } else if (ch === 0x0D/* CR */) {\n    state.position++;\n    if (state.input.charCodeAt(state.position) === 0x0A/* LF */) {\n      state.position++;\n    }\n  } else {\n    throwError(state, 'a line break is expected');\n  }\n\n  state.line += 1;\n  state.lineStart = state.position;\n  state.firstTabInLine = -1;\n}\n\nfunction skipSeparationSpace(state, allowComments, checkIndent) {\n  var lineBreaks = 0,\n      ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    while (is_WHITE_SPACE(ch)) {\n      if (ch === 0x09/* Tab */ && state.firstTabInLine === -1) {\n        state.firstTabInLine = state.position;\n      }\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (allowComments && ch === 0x23/* # */) {\n      do {\n        ch = state.input.charCodeAt(++state.position);\n      } while (ch !== 0x0A/* LF */ && ch !== 0x0D/* CR */ && ch !== 0);\n    }\n\n    if (is_EOL(ch)) {\n      readLineBreak(state);\n\n      ch = state.input.charCodeAt(state.position);\n      lineBreaks++;\n      state.lineIndent = 0;\n\n      while (ch === 0x20/* Space */) {\n        state.lineIndent++;\n        ch = state.input.charCodeAt(++state.position);\n      }\n    } else {\n      break;\n    }\n  }\n\n  if (checkIndent !== -1 && lineBreaks !== 0 && state.lineIndent < checkIndent) {\n    throwWarning(state, 'deficient indentation');\n  }\n\n  return lineBreaks;\n}\n\nfunction testDocumentSeparator(state) {\n  var _position = state.position,\n      ch;\n\n  ch = state.input.charCodeAt(_position);\n\n  // Condition state.position === state.lineStart is tested\n  // in parent on each call, for efficiency. No needs to test here again.\n  if ((ch === 0x2D/* - */ || ch === 0x2E/* . */) &&\n      ch === state.input.charCodeAt(_position + 1) &&\n      ch === state.input.charCodeAt(_position + 2)) {\n\n    _position += 3;\n\n    ch = state.input.charCodeAt(_position);\n\n    if (ch === 0 || is_WS_OR_EOL(ch)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction writeFoldedLines(state, count) {\n  if (count === 1) {\n    state.result += ' ';\n  } else if (count > 1) {\n    state.result += common.repeat('\\n', count - 1);\n  }\n}\n\n\nfunction readPlainScalar(state, nodeIndent, withinFlowCollection) {\n  var preceding,\n      following,\n      captureStart,\n      captureEnd,\n      hasPendingContent,\n      _line,\n      _lineStart,\n      _lineIndent,\n      _kind = state.kind,\n      _result = state.result,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (is_WS_OR_EOL(ch)      ||\n      is_FLOW_INDICATOR(ch) ||\n      ch === 0x23/* # */    ||\n      ch === 0x26/* & */    ||\n      ch === 0x2A/* * */    ||\n      ch === 0x21/* ! */    ||\n      ch === 0x7C/* | */    ||\n      ch === 0x3E/* > */    ||\n      ch === 0x27/* ' */    ||\n      ch === 0x22/* \" */    ||\n      ch === 0x25/* % */    ||\n      ch === 0x40/* @ */    ||\n      ch === 0x60/* ` */) {\n    return false;\n  }\n\n  if (ch === 0x3F/* ? */ || ch === 0x2D/* - */) {\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (is_WS_OR_EOL(following) ||\n        withinFlowCollection && is_FLOW_INDICATOR(following)) {\n      return false;\n    }\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  captureStart = captureEnd = state.position;\n  hasPendingContent = false;\n\n  while (ch !== 0) {\n    if (ch === 0x3A/* : */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following) ||\n          withinFlowCollection && is_FLOW_INDICATOR(following)) {\n        break;\n      }\n\n    } else if (ch === 0x23/* # */) {\n      preceding = state.input.charCodeAt(state.position - 1);\n\n      if (is_WS_OR_EOL(preceding)) {\n        break;\n      }\n\n    } else if ((state.position === state.lineStart && testDocumentSeparator(state)) ||\n               withinFlowCollection && is_FLOW_INDICATOR(ch)) {\n      break;\n\n    } else if (is_EOL(ch)) {\n      _line = state.line;\n      _lineStart = state.lineStart;\n      _lineIndent = state.lineIndent;\n      skipSeparationSpace(state, false, -1);\n\n      if (state.lineIndent >= nodeIndent) {\n        hasPendingContent = true;\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      } else {\n        state.position = captureEnd;\n        state.line = _line;\n        state.lineStart = _lineStart;\n        state.lineIndent = _lineIndent;\n        break;\n      }\n    }\n\n    if (hasPendingContent) {\n      captureSegment(state, captureStart, captureEnd, false);\n      writeFoldedLines(state, state.line - _line);\n      captureStart = captureEnd = state.position;\n      hasPendingContent = false;\n    }\n\n    if (!is_WHITE_SPACE(ch)) {\n      captureEnd = state.position + 1;\n    }\n\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  captureSegment(state, captureStart, captureEnd, false);\n\n  if (state.result) {\n    return true;\n  }\n\n  state.kind = _kind;\n  state.result = _result;\n  return false;\n}\n\nfunction readSingleQuotedScalar(state, nodeIndent) {\n  var ch,\n      captureStart, captureEnd;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x27/* ' */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x27/* ' */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (ch === 0x27/* ' */) {\n        captureStart = state.position;\n        state.position++;\n        captureEnd = state.position;\n      } else {\n        return true;\n      }\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a single quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a single quoted scalar');\n}\n\nfunction readDoubleQuotedScalar(state, nodeIndent) {\n  var captureStart,\n      captureEnd,\n      hexLength,\n      hexResult,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x22/* \" */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x22/* \" */) {\n      captureSegment(state, captureStart, state.position, true);\n      state.position++;\n      return true;\n\n    } else if (ch === 0x5C/* \\ */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (is_EOL(ch)) {\n        skipSeparationSpace(state, false, nodeIndent);\n\n        // TODO: rework to inline fn with no type cast?\n      } else if (ch < 256 && simpleEscapeCheck[ch]) {\n        state.result += simpleEscapeMap[ch];\n        state.position++;\n\n      } else if ((tmp = escapedHexLen(ch)) > 0) {\n        hexLength = tmp;\n        hexResult = 0;\n\n        for (; hexLength > 0; hexLength--) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if ((tmp = fromHexCode(ch)) >= 0) {\n            hexResult = (hexResult << 4) + tmp;\n\n          } else {\n            throwError(state, 'expected hexadecimal character');\n          }\n        }\n\n        state.result += charFromCodepoint(hexResult);\n\n        state.position++;\n\n      } else {\n        throwError(state, 'unknown escape sequence');\n      }\n\n      captureStart = captureEnd = state.position;\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a double quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a double quoted scalar');\n}\n\nfunction readFlowCollection(state, nodeIndent) {\n  var readNext = true,\n      _line,\n      _lineStart,\n      _pos,\n      _tag     = state.tag,\n      _result,\n      _anchor  = state.anchor,\n      following,\n      terminator,\n      isPair,\n      isExplicitPair,\n      isMapping,\n      overridableKeys = Object.create(null),\n      keyNode,\n      keyTag,\n      valueNode,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x5B/* [ */) {\n    terminator = 0x5D;/* ] */\n    isMapping = false;\n    _result = [];\n  } else if (ch === 0x7B/* { */) {\n    terminator = 0x7D;/* } */\n    isMapping = true;\n    _result = {};\n  } else {\n    return false;\n  }\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  while (ch !== 0) {\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === terminator) {\n      state.position++;\n      state.tag = _tag;\n      state.anchor = _anchor;\n      state.kind = isMapping ? 'mapping' : 'sequence';\n      state.result = _result;\n      return true;\n    } else if (!readNext) {\n      throwError(state, 'missed comma between flow collection entries');\n    } else if (ch === 0x2C/* , */) {\n      // \"flow collection entries can never be completely empty\", as per YAML 1.2, section 7.4\n      throwError(state, \"expected the node content, but found ','\");\n    }\n\n    keyTag = keyNode = valueNode = null;\n    isPair = isExplicitPair = false;\n\n    if (ch === 0x3F/* ? */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following)) {\n        isPair = isExplicitPair = true;\n        state.position++;\n        skipSeparationSpace(state, true, nodeIndent);\n      }\n    }\n\n    _line = state.line; // Save the current line.\n    _lineStart = state.lineStart;\n    _pos = state.position;\n    composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n    keyTag = state.tag;\n    keyNode = state.result;\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((isExplicitPair || state.line === _line) && ch === 0x3A/* : */) {\n      isPair = true;\n      ch = state.input.charCodeAt(++state.position);\n      skipSeparationSpace(state, true, nodeIndent);\n      composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n      valueNode = state.result;\n    }\n\n    if (isMapping) {\n      storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _line, _lineStart, _pos);\n    } else if (isPair) {\n      _result.push(storeMappingPair(state, null, overridableKeys, keyTag, keyNode, valueNode, _line, _lineStart, _pos));\n    } else {\n      _result.push(keyNode);\n    }\n\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === 0x2C/* , */) {\n      readNext = true;\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      readNext = false;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a flow collection');\n}\n\nfunction readBlockScalar(state, nodeIndent) {\n  var captureStart,\n      folding,\n      chomping       = CHOMPING_CLIP,\n      didReadContent = false,\n      detectedIndent = false,\n      textIndent     = nodeIndent,\n      emptyLines     = 0,\n      atMoreIndented = false,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x7C/* | */) {\n    folding = false;\n  } else if (ch === 0x3E/* > */) {\n    folding = true;\n  } else {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n\n  while (ch !== 0) {\n    ch = state.input.charCodeAt(++state.position);\n\n    if (ch === 0x2B/* + */ || ch === 0x2D/* - */) {\n      if (CHOMPING_CLIP === chomping) {\n        chomping = (ch === 0x2B/* + */) ? CHOMPING_KEEP : CHOMPING_STRIP;\n      } else {\n        throwError(state, 'repeat of a chomping mode identifier');\n      }\n\n    } else if ((tmp = fromDecimalCode(ch)) >= 0) {\n      if (tmp === 0) {\n        throwError(state, 'bad explicit indentation width of a block scalar; it cannot be less than one');\n      } else if (!detectedIndent) {\n        textIndent = nodeIndent + tmp - 1;\n        detectedIndent = true;\n      } else {\n        throwError(state, 'repeat of an indentation width identifier');\n      }\n\n    } else {\n      break;\n    }\n  }\n\n  if (is_WHITE_SPACE(ch)) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (is_WHITE_SPACE(ch));\n\n    if (ch === 0x23/* # */) {\n      do { ch = state.input.charCodeAt(++state.position); }\n      while (!is_EOL(ch) && (ch !== 0));\n    }\n  }\n\n  while (ch !== 0) {\n    readLineBreak(state);\n    state.lineIndent = 0;\n\n    ch = state.input.charCodeAt(state.position);\n\n    while ((!detectedIndent || state.lineIndent < textIndent) &&\n           (ch === 0x20/* Space */)) {\n      state.lineIndent++;\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (!detectedIndent && state.lineIndent > textIndent) {\n      textIndent = state.lineIndent;\n    }\n\n    if (is_EOL(ch)) {\n      emptyLines++;\n      continue;\n    }\n\n    // End of the scalar.\n    if (state.lineIndent < textIndent) {\n\n      // Perform the chomping.\n      if (chomping === CHOMPING_KEEP) {\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n      } else if (chomping === CHOMPING_CLIP) {\n        if (didReadContent) { // i.e. only if the scalar is not empty.\n          state.result += '\\n';\n        }\n      }\n\n      // Break this `while` cycle and go to the funciton's epilogue.\n      break;\n    }\n\n    // Folded style: use fancy rules to handle line breaks.\n    if (folding) {\n\n      // Lines starting with white space characters (more-indented lines) are not folded.\n      if (is_WHITE_SPACE(ch)) {\n        atMoreIndented = true;\n        // except for the first content line (cf. Example 8.1)\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n\n      // End of more-indented block.\n      } else if (atMoreIndented) {\n        atMoreIndented = false;\n        state.result += common.repeat('\\n', emptyLines + 1);\n\n      // Just one line break - perceive as the same line.\n      } else if (emptyLines === 0) {\n        if (didReadContent) { // i.e. only if we have already read some scalar content.\n          state.result += ' ';\n        }\n\n      // Several line breaks - perceive as different lines.\n      } else {\n        state.result += common.repeat('\\n', emptyLines);\n      }\n\n    // Literal style: just add exact number of line breaks between content lines.\n    } else {\n      // Keep all line breaks except the header line break.\n      state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n    }\n\n    didReadContent = true;\n    detectedIndent = true;\n    emptyLines = 0;\n    captureStart = state.position;\n\n    while (!is_EOL(ch) && (ch !== 0)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    captureSegment(state, captureStart, state.position, false);\n  }\n\n  return true;\n}\n\nfunction readBlockSequence(state, nodeIndent) {\n  var _line,\n      _tag      = state.tag,\n      _anchor   = state.anchor,\n      _result   = [],\n      following,\n      detected  = false,\n      ch;\n\n  // there is a leading tab before this token, so it can't be a block sequence/mapping;\n  // it can still be flow sequence/mapping or a scalar\n  if (state.firstTabInLine !== -1) return false;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    if (state.firstTabInLine !== -1) {\n      state.position = state.firstTabInLine;\n      throwError(state, 'tab characters must not be used in indentation');\n    }\n\n    if (ch !== 0x2D/* - */) {\n      break;\n    }\n\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (!is_WS_OR_EOL(following)) {\n      break;\n    }\n\n    detected = true;\n    state.position++;\n\n    if (skipSeparationSpace(state, true, -1)) {\n      if (state.lineIndent <= nodeIndent) {\n        _result.push(null);\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      }\n    }\n\n    _line = state.line;\n    composeNode(state, nodeIndent, CONTEXT_BLOCK_IN, false, true);\n    _result.push(state.result);\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {\n      throwError(state, 'bad indentation of a sequence entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'sequence';\n    state.result = _result;\n    return true;\n  }\n  return false;\n}\n\nfunction readBlockMapping(state, nodeIndent, flowIndent) {\n  var following,\n      allowCompact,\n      _line,\n      _keyLine,\n      _keyLineStart,\n      _keyPos,\n      _tag          = state.tag,\n      _anchor       = state.anchor,\n      _result       = {},\n      overridableKeys = Object.create(null),\n      keyTag        = null,\n      keyNode       = null,\n      valueNode     = null,\n      atExplicitKey = false,\n      detected      = false,\n      ch;\n\n  // there is a leading tab before this token, so it can't be a block sequence/mapping;\n  // it can still be flow sequence/mapping or a scalar\n  if (state.firstTabInLine !== -1) return false;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    if (!atExplicitKey && state.firstTabInLine !== -1) {\n      state.position = state.firstTabInLine;\n      throwError(state, 'tab characters must not be used in indentation');\n    }\n\n    following = state.input.charCodeAt(state.position + 1);\n    _line = state.line; // Save the current line.\n\n    //\n    // Explicit notation case. There are two separate blocks:\n    // first for the key (denoted by \"?\") and second for the value (denoted by \":\")\n    //\n    if ((ch === 0x3F/* ? */ || ch === 0x3A/* : */) && is_WS_OR_EOL(following)) {\n\n      if (ch === 0x3F/* ? */) {\n        if (atExplicitKey) {\n          storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n          keyTag = keyNode = valueNode = null;\n        }\n\n        detected = true;\n        atExplicitKey = true;\n        allowCompact = true;\n\n      } else if (atExplicitKey) {\n        // i.e. 0x3A/* : */ === character after the explicit key.\n        atExplicitKey = false;\n        allowCompact = true;\n\n      } else {\n        throwError(state, 'incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line');\n      }\n\n      state.position += 1;\n      ch = following;\n\n    //\n    // Implicit notation case. Flow-style node as the key first, then \":\", and the value.\n    //\n    } else {\n      _keyLine = state.line;\n      _keyLineStart = state.lineStart;\n      _keyPos = state.position;\n\n      if (!composeNode(state, flowIndent, CONTEXT_FLOW_OUT, false, true)) {\n        // Neither implicit nor explicit notation.\n        // Reading is done. Go to the epilogue.\n        break;\n      }\n\n      if (state.line === _line) {\n        ch = state.input.charCodeAt(state.position);\n\n        while (is_WHITE_SPACE(ch)) {\n          ch = state.input.charCodeAt(++state.position);\n        }\n\n        if (ch === 0x3A/* : */) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if (!is_WS_OR_EOL(ch)) {\n            throwError(state, 'a whitespace character is expected after the key-value separator within a block mapping');\n          }\n\n          if (atExplicitKey) {\n            storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n            keyTag = keyNode = valueNode = null;\n          }\n\n          detected = true;\n          atExplicitKey = false;\n          allowCompact = false;\n          keyTag = state.tag;\n          keyNode = state.result;\n\n        } else if (detected) {\n          throwError(state, 'can not read an implicit mapping pair; a colon is missed');\n\n        } else {\n          state.tag = _tag;\n          state.anchor = _anchor;\n          return true; // Keep the result of `composeNode`.\n        }\n\n      } else if (detected) {\n        throwError(state, 'can not read a block mapping entry; a multiline key may not be an implicit key');\n\n      } else {\n        state.tag = _tag;\n        state.anchor = _anchor;\n        return true; // Keep the result of `composeNode`.\n      }\n    }\n\n    //\n    // Common reading code for both explicit and implicit notations.\n    //\n    if (state.line === _line || state.lineIndent > nodeIndent) {\n      if (atExplicitKey) {\n        _keyLine = state.line;\n        _keyLineStart = state.lineStart;\n        _keyPos = state.position;\n      }\n\n      if (composeNode(state, nodeIndent, CONTEXT_BLOCK_OUT, true, allowCompact)) {\n        if (atExplicitKey) {\n          keyNode = state.result;\n        } else {\n          valueNode = state.result;\n        }\n      }\n\n      if (!atExplicitKey) {\n        storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _keyLine, _keyLineStart, _keyPos);\n        keyTag = keyNode = valueNode = null;\n      }\n\n      skipSeparationSpace(state, true, -1);\n      ch = state.input.charCodeAt(state.position);\n    }\n\n    if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {\n      throwError(state, 'bad indentation of a mapping entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  //\n  // Epilogue.\n  //\n\n  // Special case: last mapping's node contains only the key in explicit notation.\n  if (atExplicitKey) {\n    storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n  }\n\n  // Expose the resulting mapping.\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'mapping';\n    state.result = _result;\n  }\n\n  return detected;\n}\n\nfunction readTagProperty(state) {\n  var _position,\n      isVerbatim = false,\n      isNamed    = false,\n      tagHandle,\n      tagName,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x21/* ! */) return false;\n\n  if (state.tag !== null) {\n    throwError(state, 'duplication of a tag property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  if (ch === 0x3C/* < */) {\n    isVerbatim = true;\n    ch = state.input.charCodeAt(++state.position);\n\n  } else if (ch === 0x21/* ! */) {\n    isNamed = true;\n    tagHandle = '!!';\n    ch = state.input.charCodeAt(++state.position);\n\n  } else {\n    tagHandle = '!';\n  }\n\n  _position = state.position;\n\n  if (isVerbatim) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (ch !== 0 && ch !== 0x3E/* > */);\n\n    if (state.position < state.length) {\n      tagName = state.input.slice(_position, state.position);\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      throwError(state, 'unexpected end of the stream within a verbatim tag');\n    }\n  } else {\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n\n      if (ch === 0x21/* ! */) {\n        if (!isNamed) {\n          tagHandle = state.input.slice(_position - 1, state.position + 1);\n\n          if (!PATTERN_TAG_HANDLE.test(tagHandle)) {\n            throwError(state, 'named tag handle cannot contain such characters');\n          }\n\n          isNamed = true;\n          _position = state.position + 1;\n        } else {\n          throwError(state, 'tag suffix cannot contain exclamation marks');\n        }\n      }\n\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    tagName = state.input.slice(_position, state.position);\n\n    if (PATTERN_FLOW_INDICATORS.test(tagName)) {\n      throwError(state, 'tag suffix cannot contain flow indicator characters');\n    }\n  }\n\n  if (tagName && !PATTERN_TAG_URI.test(tagName)) {\n    throwError(state, 'tag name cannot contain such characters: ' + tagName);\n  }\n\n  try {\n    tagName = decodeURIComponent(tagName);\n  } catch (err) {\n    throwError(state, 'tag name is malformed: ' + tagName);\n  }\n\n  if (isVerbatim) {\n    state.tag = tagName;\n\n  } else if (_hasOwnProperty.call(state.tagMap, tagHandle)) {\n    state.tag = state.tagMap[tagHandle] + tagName;\n\n  } else if (tagHandle === '!') {\n    state.tag = '!' + tagName;\n\n  } else if (tagHandle === '!!') {\n    state.tag = 'tag:yaml.org,2002:' + tagName;\n\n  } else {\n    throwError(state, 'undeclared tag handle \"' + tagHandle + '\"');\n  }\n\n  return true;\n}\n\nfunction readAnchorProperty(state) {\n  var _position,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x26/* & */) return false;\n\n  if (state.anchor !== null) {\n    throwError(state, 'duplication of an anchor property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an anchor node must contain at least one character');\n  }\n\n  state.anchor = state.input.slice(_position, state.position);\n  return true;\n}\n\nfunction readAlias(state) {\n  var _position, alias,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x2A/* * */) return false;\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an alias node must contain at least one character');\n  }\n\n  alias = state.input.slice(_position, state.position);\n\n  if (!_hasOwnProperty.call(state.anchorMap, alias)) {\n    throwError(state, 'unidentified alias \"' + alias + '\"');\n  }\n\n  state.result = state.anchorMap[alias];\n  skipSeparationSpace(state, true, -1);\n  return true;\n}\n\nfunction composeNode(state, parentIndent, nodeContext, allowToSeek, allowCompact) {\n  var allowBlockStyles,\n      allowBlockScalars,\n      allowBlockCollections,\n      indentStatus = 1, // 1: this>parent, 0: this=parent, -1: this<parent\n      atNewLine  = false,\n      hasContent = false,\n      typeIndex,\n      typeQuantity,\n      typeList,\n      type,\n      flowIndent,\n      blockIndent;\n\n  if (state.listener !== null) {\n    state.listener('open', state);\n  }\n\n  state.tag    = null;\n  state.anchor = null;\n  state.kind   = null;\n  state.result = null;\n\n  allowBlockStyles = allowBlockScalars = allowBlockCollections =\n    CONTEXT_BLOCK_OUT === nodeContext ||\n    CONTEXT_BLOCK_IN  === nodeContext;\n\n  if (allowToSeek) {\n    if (skipSeparationSpace(state, true, -1)) {\n      atNewLine = true;\n\n      if (state.lineIndent > parentIndent) {\n        indentStatus = 1;\n      } else if (state.lineIndent === parentIndent) {\n        indentStatus = 0;\n      } else if (state.lineIndent < parentIndent) {\n        indentStatus = -1;\n      }\n    }\n  }\n\n  if (indentStatus === 1) {\n    while (readTagProperty(state) || readAnchorProperty(state)) {\n      if (skipSeparationSpace(state, true, -1)) {\n        atNewLine = true;\n        allowBlockCollections = allowBlockStyles;\n\n        if (state.lineIndent > parentIndent) {\n          indentStatus = 1;\n        } else if (state.lineIndent === parentIndent) {\n          indentStatus = 0;\n        } else if (state.lineIndent < parentIndent) {\n          indentStatus = -1;\n        }\n      } else {\n        allowBlockCollections = false;\n      }\n    }\n  }\n\n  if (allowBlockCollections) {\n    allowBlockCollections = atNewLine || allowCompact;\n  }\n\n  if (indentStatus === 1 || CONTEXT_BLOCK_OUT === nodeContext) {\n    if (CONTEXT_FLOW_IN === nodeContext || CONTEXT_FLOW_OUT === nodeContext) {\n      flowIndent = parentIndent;\n    } else {\n      flowIndent = parentIndent + 1;\n    }\n\n    blockIndent = state.position - state.lineStart;\n\n    if (indentStatus === 1) {\n      if (allowBlockCollections &&\n          (readBlockSequence(state, blockIndent) ||\n           readBlockMapping(state, blockIndent, flowIndent)) ||\n          readFlowCollection(state, flowIndent)) {\n        hasContent = true;\n      } else {\n        if ((allowBlockScalars && readBlockScalar(state, flowIndent)) ||\n            readSingleQuotedScalar(state, flowIndent) ||\n            readDoubleQuotedScalar(state, flowIndent)) {\n          hasContent = true;\n\n        } else if (readAlias(state)) {\n          hasContent = true;\n\n          if (state.tag !== null || state.anchor !== null) {\n            throwError(state, 'alias node should not have any properties');\n          }\n\n        } else if (readPlainScalar(state, flowIndent, CONTEXT_FLOW_IN === nodeContext)) {\n          hasContent = true;\n\n          if (state.tag === null) {\n            state.tag = '?';\n          }\n        }\n\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n      }\n    } else if (indentStatus === 0) {\n      // Special case: block sequences are allowed to have same indentation level as the parent.\n      // http://www.yaml.org/spec/1.2/spec.html#id2799784\n      hasContent = allowBlockCollections && readBlockSequence(state, blockIndent);\n    }\n  }\n\n  if (state.tag === null) {\n    if (state.anchor !== null) {\n      state.anchorMap[state.anchor] = state.result;\n    }\n\n  } else if (state.tag === '?') {\n    // Implicit resolving is not allowed for non-scalar types, and '?'\n    // non-specific tag is only automatically assigned to plain scalars.\n    //\n    // We only need to check kind conformity in case user explicitly assigns '?'\n    // tag, for example like this: \"!<?> [0]\"\n    //\n    if (state.result !== null && state.kind !== 'scalar') {\n      throwError(state, 'unacceptable node kind for !<?> tag; it should be \"scalar\", not \"' + state.kind + '\"');\n    }\n\n    for (typeIndex = 0, typeQuantity = state.implicitTypes.length; typeIndex < typeQuantity; typeIndex += 1) {\n      type = state.implicitTypes[typeIndex];\n\n      if (type.resolve(state.result)) { // `state.result` updated in resolver if matched\n        state.result = type.construct(state.result);\n        state.tag = type.tag;\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n        break;\n      }\n    }\n  } else if (state.tag !== '!') {\n    if (_hasOwnProperty.call(state.typeMap[state.kind || 'fallback'], state.tag)) {\n      type = state.typeMap[state.kind || 'fallback'][state.tag];\n    } else {\n      // looking for multi type\n      type = null;\n      typeList = state.typeMap.multi[state.kind || 'fallback'];\n\n      for (typeIndex = 0, typeQuantity = typeList.length; typeIndex < typeQuantity; typeIndex += 1) {\n        if (state.tag.slice(0, typeList[typeIndex].tag.length) === typeList[typeIndex].tag) {\n          type = typeList[typeIndex];\n          break;\n        }\n      }\n    }\n\n    if (!type) {\n      throwError(state, 'unknown tag !<' + state.tag + '>');\n    }\n\n    if (state.result !== null && type.kind !== state.kind) {\n      throwError(state, 'unacceptable node kind for !<' + state.tag + '> tag; it should be \"' + type.kind + '\", not \"' + state.kind + '\"');\n    }\n\n    if (!type.resolve(state.result, state.tag)) { // `state.result` updated in resolver if matched\n      throwError(state, 'cannot resolve a node with !<' + state.tag + '> explicit tag');\n    } else {\n      state.result = type.construct(state.result, state.tag);\n      if (state.anchor !== null) {\n        state.anchorMap[state.anchor] = state.result;\n      }\n    }\n  }\n\n  if (state.listener !== null) {\n    state.listener('close', state);\n  }\n  return state.tag !== null ||  state.anchor !== null || hasContent;\n}\n\nfunction readDocument(state) {\n  var documentStart = state.position,\n      _position,\n      directiveName,\n      directiveArgs,\n      hasDirectives = false,\n      ch;\n\n  state.version = null;\n  state.checkLineBreaks = state.legacy;\n  state.tagMap = Object.create(null);\n  state.anchorMap = Object.create(null);\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (state.lineIndent > 0 || ch !== 0x25/* % */) {\n      break;\n    }\n\n    hasDirectives = true;\n    ch = state.input.charCodeAt(++state.position);\n    _position = state.position;\n\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    directiveName = state.input.slice(_position, state.position);\n    directiveArgs = [];\n\n    if (directiveName.length < 1) {\n      throwError(state, 'directive name must not be less than one character in length');\n    }\n\n    while (ch !== 0) {\n      while (is_WHITE_SPACE(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      if (ch === 0x23/* # */) {\n        do { ch = state.input.charCodeAt(++state.position); }\n        while (ch !== 0 && !is_EOL(ch));\n        break;\n      }\n\n      if (is_EOL(ch)) break;\n\n      _position = state.position;\n\n      while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      directiveArgs.push(state.input.slice(_position, state.position));\n    }\n\n    if (ch !== 0) readLineBreak(state);\n\n    if (_hasOwnProperty.call(directiveHandlers, directiveName)) {\n      directiveHandlers[directiveName](state, directiveName, directiveArgs);\n    } else {\n      throwWarning(state, 'unknown document directive \"' + directiveName + '\"');\n    }\n  }\n\n  skipSeparationSpace(state, true, -1);\n\n  if (state.lineIndent === 0 &&\n      state.input.charCodeAt(state.position)     === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 1) === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 2) === 0x2D/* - */) {\n    state.position += 3;\n    skipSeparationSpace(state, true, -1);\n\n  } else if (hasDirectives) {\n    throwError(state, 'directives end mark is expected');\n  }\n\n  composeNode(state, state.lineIndent - 1, CONTEXT_BLOCK_OUT, false, true);\n  skipSeparationSpace(state, true, -1);\n\n  if (state.checkLineBreaks &&\n      PATTERN_NON_ASCII_LINE_BREAKS.test(state.input.slice(documentStart, state.position))) {\n    throwWarning(state, 'non-ASCII line breaks are interpreted as content');\n  }\n\n  state.documents.push(state.result);\n\n  if (state.position === state.lineStart && testDocumentSeparator(state)) {\n\n    if (state.input.charCodeAt(state.position) === 0x2E/* . */) {\n      state.position += 3;\n      skipSeparationSpace(state, true, -1);\n    }\n    return;\n  }\n\n  if (state.position < (state.length - 1)) {\n    throwError(state, 'end of the stream or a document separator is expected');\n  } else {\n    return;\n  }\n}\n\n\nfunction loadDocuments(input, options) {\n  input = String(input);\n  options = options || {};\n\n  if (input.length !== 0) {\n\n    // Add tailing `\\n` if not exists\n    if (input.charCodeAt(input.length - 1) !== 0x0A/* LF */ &&\n        input.charCodeAt(input.length - 1) !== 0x0D/* CR */) {\n      input += '\\n';\n    }\n\n    // Strip BOM\n    if (input.charCodeAt(0) === 0xFEFF) {\n      input = input.slice(1);\n    }\n  }\n\n  var state = new State(input, options);\n\n  var nullpos = input.indexOf('\\0');\n\n  if (nullpos !== -1) {\n    state.position = nullpos;\n    throwError(state, 'null byte is not allowed in input');\n  }\n\n  // Use 0 as string terminator. That significantly simplifies bounds check.\n  state.input += '\\0';\n\n  while (state.input.charCodeAt(state.position) === 0x20/* Space */) {\n    state.lineIndent += 1;\n    state.position += 1;\n  }\n\n  while (state.position < (state.length - 1)) {\n    readDocument(state);\n  }\n\n  return state.documents;\n}\n\n\nfunction loadAll(input, iterator, options) {\n  if (iterator !== null && typeof iterator === 'object' && typeof options === 'undefined') {\n    options = iterator;\n    iterator = null;\n  }\n\n  var documents = loadDocuments(input, options);\n\n  if (typeof iterator !== 'function') {\n    return documents;\n  }\n\n  for (var index = 0, length = documents.length; index < length; index += 1) {\n    iterator(documents[index]);\n  }\n}\n\n\nfunction load(input, options) {\n  var documents = loadDocuments(input, options);\n\n  if (documents.length === 0) {\n    /*eslint-disable no-undefined*/\n    return undefined;\n  } else if (documents.length === 1) {\n    return documents[0];\n  }\n  throw new YAMLException('expected a single document in the stream, but found more');\n}\n\n\nmodule.exports.loadAll = loadAll;\nmodule.exports.load    = load;\n","'use strict';\n\n/*eslint-disable max-len*/\n\nvar YAMLException = require('./exception');\nvar Type          = require('./type');\n\n\nfunction compileList(schema, name) {\n  var result = [];\n\n  schema[name].forEach(function (currentType) {\n    var newIndex = result.length;\n\n    result.forEach(function (previousType, previousIndex) {\n      if (previousType.tag === currentType.tag &&\n          previousType.kind === currentType.kind &&\n          previousType.multi === currentType.multi) {\n\n        newIndex = previousIndex;\n      }\n    });\n\n    result[newIndex] = currentType;\n  });\n\n  return result;\n}\n\n\nfunction compileMap(/* lists... */) {\n  var result = {\n        scalar: {},\n        sequence: {},\n        mapping: {},\n        fallback: {},\n        multi: {\n          scalar: [],\n          sequence: [],\n          mapping: [],\n          fallback: []\n        }\n      }, index, length;\n\n  function collectType(type) {\n    if (type.multi) {\n      result.multi[type.kind].push(type);\n      result.multi['fallback'].push(type);\n    } else {\n      result[type.kind][type.tag] = result['fallback'][type.tag] = type;\n    }\n  }\n\n  for (index = 0, length = arguments.length; index < length; index += 1) {\n    arguments[index].forEach(collectType);\n  }\n  return result;\n}\n\n\nfunction Schema(definition) {\n  return this.extend(definition);\n}\n\n\nSchema.prototype.extend = function extend(definition) {\n  var implicit = [];\n  var explicit = [];\n\n  if (definition instanceof Type) {\n    // Schema.extend(type)\n    explicit.push(definition);\n\n  } else if (Array.isArray(definition)) {\n    // Schema.extend([ type1, type2, ... ])\n    explicit = explicit.concat(definition);\n\n  } else if (definition && (Array.isArray(definition.implicit) || Array.isArray(definition.explicit))) {\n    // Schema.extend({ explicit: [ type1, type2, ... ], implicit: [ type1, type2, ... ] })\n    if (definition.implicit) implicit = implicit.concat(definition.implicit);\n    if (definition.explicit) explicit = explicit.concat(definition.explicit);\n\n  } else {\n    throw new YAMLException('Schema.extend argument should be a Type, [ Type ], ' +\n      'or a schema definition ({ implicit: [...], explicit: [...] })');\n  }\n\n  implicit.forEach(function (type) {\n    if (!(type instanceof Type)) {\n      throw new YAMLException('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n    }\n\n    if (type.loadKind && type.loadKind !== 'scalar') {\n      throw new YAMLException('There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.');\n    }\n\n    if (type.multi) {\n      throw new YAMLException('There is a multi type in the implicit list of a schema. Multi tags can only be listed as explicit.');\n    }\n  });\n\n  explicit.forEach(function (type) {\n    if (!(type instanceof Type)) {\n      throw new YAMLException('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n    }\n  });\n\n  var result = Object.create(Schema.prototype);\n\n  result.implicit = (this.implicit || []).concat(implicit);\n  result.explicit = (this.explicit || []).concat(explicit);\n\n  result.compiledImplicit = compileList(result, 'implicit');\n  result.compiledExplicit = compileList(result, 'explicit');\n  result.compiledTypeMap  = compileMap(result.compiledImplicit, result.compiledExplicit);\n\n  return result;\n};\n\n\nmodule.exports = Schema;\n","// Standard YAML's Core schema.\n// http://www.yaml.org/spec/1.2/spec.html#id2804923\n//\n// NOTE: JS-YAML does not support schema-specific tag resolution restrictions.\n// So, Core schema has no distinctions from JSON schema is JS-YAML.\n\n\n'use strict';\n\n\nmodule.exports = require('./json');\n","// JS-YAML's default schema for `safeLoad` function.\n// It is not described in the YAML specification.\n//\n// This schema is based on standard YAML's Core schema and includes most of\n// extra types described at YAML tag repository. (http://yaml.org/type/)\n\n\n'use strict';\n\n\nmodule.exports = require('./core').extend({\n  implicit: [\n    require('../type/timestamp'),\n    require('../type/merge')\n  ],\n  explicit: [\n    require('../type/binary'),\n    require('../type/omap'),\n    require('../type/pairs'),\n    require('../type/set')\n  ]\n});\n","// Standard YAML's Failsafe schema.\n// http://www.yaml.org/spec/1.2/spec.html#id2802346\n\n\n'use strict';\n\n\nvar Schema = require('../schema');\n\n\nmodule.exports = new Schema({\n  explicit: [\n    require('../type/str'),\n    require('../type/seq'),\n    require('../type/map')\n  ]\n});\n","// Standard YAML's JSON schema.\n// http://www.yaml.org/spec/1.2/spec.html#id2803231\n//\n// NOTE: JS-YAML does not support schema-specific tag resolution restrictions.\n// So, this schema is not such strict as defined in the YAML specification.\n// It allows numbers in binary notaion, use `Null` and `NULL` as `null`, etc.\n\n\n'use strict';\n\n\nmodule.exports = require('./failsafe').extend({\n  implicit: [\n    require('../type/null'),\n    require('../type/bool'),\n    require('../type/int'),\n    require('../type/float')\n  ]\n});\n","'use strict';\n\n\nvar common = require('./common');\n\n\n// get snippet for a single line, respecting maxLength\nfunction getLine(buffer, lineStart, lineEnd, position, maxLineLength) {\n  var head = '';\n  var tail = '';\n  var maxHalfLength = Math.floor(maxLineLength / 2) - 1;\n\n  if (position - lineStart > maxHalfLength) {\n    head = ' ... ';\n    lineStart = position - maxHalfLength + head.length;\n  }\n\n  if (lineEnd - position > maxHalfLength) {\n    tail = ' ...';\n    lineEnd = position + maxHalfLength - tail.length;\n  }\n\n  return {\n    str: head + buffer.slice(lineStart, lineEnd).replace(/\\t/g, '→') + tail,\n    pos: position - lineStart + head.length // relative position\n  };\n}\n\n\nfunction padStart(string, max) {\n  return common.repeat(' ', max - string.length) + string;\n}\n\n\nfunction makeSnippet(mark, options) {\n  options = Object.create(options || null);\n\n  if (!mark.buffer) return null;\n\n  if (!options.maxLength) options.maxLength = 79;\n  if (typeof options.indent      !== 'number') options.indent      = 1;\n  if (typeof options.linesBefore !== 'number') options.linesBefore = 3;\n  if (typeof options.linesAfter  !== 'number') options.linesAfter  = 2;\n\n  var re = /\\r?\\n|\\r|\\0/g;\n  var lineStarts = [ 0 ];\n  var lineEnds = [];\n  var match;\n  var foundLineNo = -1;\n\n  while ((match = re.exec(mark.buffer))) {\n    lineEnds.push(match.index);\n    lineStarts.push(match.index + match[0].length);\n\n    if (mark.position <= match.index && foundLineNo < 0) {\n      foundLineNo = lineStarts.length - 2;\n    }\n  }\n\n  if (foundLineNo < 0) foundLineNo = lineStarts.length - 1;\n\n  var result = '', i, line;\n  var lineNoLength = Math.min(mark.line + options.linesAfter, lineEnds.length).toString().length;\n  var maxLineLength = options.maxLength - (options.indent + lineNoLength + 3);\n\n  for (i = 1; i <= options.linesBefore; i++) {\n    if (foundLineNo - i < 0) break;\n    line = getLine(\n      mark.buffer,\n      lineStarts[foundLineNo - i],\n      lineEnds[foundLineNo - i],\n      mark.position - (lineStarts[foundLineNo] - lineStarts[foundLineNo - i]),\n      maxLineLength\n    );\n    result = common.repeat(' ', options.indent) + padStart((mark.line - i + 1).toString(), lineNoLength) +\n      ' | ' + line.str + '\\n' + result;\n  }\n\n  line = getLine(mark.buffer, lineStarts[foundLineNo], lineEnds[foundLineNo], mark.position, maxLineLength);\n  result += common.repeat(' ', options.indent) + padStart((mark.line + 1).toString(), lineNoLength) +\n    ' | ' + line.str + '\\n';\n  result += common.repeat('-', options.indent + lineNoLength + 3 + line.pos) + '^' + '\\n';\n\n  for (i = 1; i <= options.linesAfter; i++) {\n    if (foundLineNo + i >= lineEnds.length) break;\n    line = getLine(\n      mark.buffer,\n      lineStarts[foundLineNo + i],\n      lineEnds[foundLineNo + i],\n      mark.position - (lineStarts[foundLineNo] - lineStarts[foundLineNo + i]),\n      maxLineLength\n    );\n    result += common.repeat(' ', options.indent) + padStart((mark.line + i + 1).toString(), lineNoLength) +\n      ' | ' + line.str + '\\n';\n  }\n\n  return result.replace(/\\n$/, '');\n}\n\n\nmodule.exports = makeSnippet;\n","'use strict';\n\nvar YAMLException = require('./exception');\n\nvar TYPE_CONSTRUCTOR_OPTIONS = [\n  'kind',\n  'multi',\n  'resolve',\n  'construct',\n  'instanceOf',\n  'predicate',\n  'represent',\n  'representName',\n  'defaultStyle',\n  'styleAliases'\n];\n\nvar YAML_NODE_KINDS = [\n  'scalar',\n  'sequence',\n  'mapping'\n];\n\nfunction compileStyleAliases(map) {\n  var result = {};\n\n  if (map !== null) {\n    Object.keys(map).forEach(function (style) {\n      map[style].forEach(function (alias) {\n        result[String(alias)] = style;\n      });\n    });\n  }\n\n  return result;\n}\n\nfunction Type(tag, options) {\n  options = options || {};\n\n  Object.keys(options).forEach(function (name) {\n    if (TYPE_CONSTRUCTOR_OPTIONS.indexOf(name) === -1) {\n      throw new YAMLException('Unknown option \"' + name + '\" is met in definition of \"' + tag + '\" YAML type.');\n    }\n  });\n\n  // TODO: Add tag format check.\n  this.options       = options; // keep original options in case user wants to extend this type later\n  this.tag           = tag;\n  this.kind          = options['kind']          || null;\n  this.resolve       = options['resolve']       || function () { return true; };\n  this.construct     = options['construct']     || function (data) { return data; };\n  this.instanceOf    = options['instanceOf']    || null;\n  this.predicate     = options['predicate']     || null;\n  this.represent     = options['represent']     || null;\n  this.representName = options['representName'] || null;\n  this.defaultStyle  = options['defaultStyle']  || null;\n  this.multi         = options['multi']         || false;\n  this.styleAliases  = compileStyleAliases(options['styleAliases'] || null);\n\n  if (YAML_NODE_KINDS.indexOf(this.kind) === -1) {\n    throw new YAMLException('Unknown kind \"' + this.kind + '\" is specified for \"' + tag + '\" YAML type.');\n  }\n}\n\nmodule.exports = Type;\n","'use strict';\n\n/*eslint-disable no-bitwise*/\n\n\nvar Type = require('../type');\n\n\n// [ 64, 65, 66 ] -> [ padding, CR, LF ]\nvar BASE64_MAP = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\\n\\r';\n\n\nfunction resolveYamlBinary(data) {\n  if (data === null) return false;\n\n  var code, idx, bitlen = 0, max = data.length, map = BASE64_MAP;\n\n  // Convert one by one.\n  for (idx = 0; idx < max; idx++) {\n    code = map.indexOf(data.charAt(idx));\n\n    // Skip CR/LF\n    if (code > 64) continue;\n\n    // Fail on illegal characters\n    if (code < 0) return false;\n\n    bitlen += 6;\n  }\n\n  // If there are any bits left, source was corrupted\n  return (bitlen % 8) === 0;\n}\n\nfunction constructYamlBinary(data) {\n  var idx, tailbits,\n      input = data.replace(/[\\r\\n=]/g, ''), // remove CR/LF & padding to simplify scan\n      max = input.length,\n      map = BASE64_MAP,\n      bits = 0,\n      result = [];\n\n  // Collect by 6*4 bits (3 bytes)\n\n  for (idx = 0; idx < max; idx++) {\n    if ((idx % 4 === 0) && idx) {\n      result.push((bits >> 16) & 0xFF);\n      result.push((bits >> 8) & 0xFF);\n      result.push(bits & 0xFF);\n    }\n\n    bits = (bits << 6) | map.indexOf(input.charAt(idx));\n  }\n\n  // Dump tail\n\n  tailbits = (max % 4) * 6;\n\n  if (tailbits === 0) {\n    result.push((bits >> 16) & 0xFF);\n    result.push((bits >> 8) & 0xFF);\n    result.push(bits & 0xFF);\n  } else if (tailbits === 18) {\n    result.push((bits >> 10) & 0xFF);\n    result.push((bits >> 2) & 0xFF);\n  } else if (tailbits === 12) {\n    result.push((bits >> 4) & 0xFF);\n  }\n\n  return new Uint8Array(result);\n}\n\nfunction representYamlBinary(object /*, style*/) {\n  var result = '', bits = 0, idx, tail,\n      max = object.length,\n      map = BASE64_MAP;\n\n  // Convert every three bytes to 4 ASCII characters.\n\n  for (idx = 0; idx < max; idx++) {\n    if ((idx % 3 === 0) && idx) {\n      result += map[(bits >> 18) & 0x3F];\n      result += map[(bits >> 12) & 0x3F];\n      result += map[(bits >> 6) & 0x3F];\n      result += map[bits & 0x3F];\n    }\n\n    bits = (bits << 8) + object[idx];\n  }\n\n  // Dump tail\n\n  tail = max % 3;\n\n  if (tail === 0) {\n    result += map[(bits >> 18) & 0x3F];\n    result += map[(bits >> 12) & 0x3F];\n    result += map[(bits >> 6) & 0x3F];\n    result += map[bits & 0x3F];\n  } else if (tail === 2) {\n    result += map[(bits >> 10) & 0x3F];\n    result += map[(bits >> 4) & 0x3F];\n    result += map[(bits << 2) & 0x3F];\n    result += map[64];\n  } else if (tail === 1) {\n    result += map[(bits >> 2) & 0x3F];\n    result += map[(bits << 4) & 0x3F];\n    result += map[64];\n    result += map[64];\n  }\n\n  return result;\n}\n\nfunction isBinary(obj) {\n  return Object.prototype.toString.call(obj) ===  '[object Uint8Array]';\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:binary', {\n  kind: 'scalar',\n  resolve: resolveYamlBinary,\n  construct: constructYamlBinary,\n  predicate: isBinary,\n  represent: representYamlBinary\n});\n","'use strict';\n\nvar Type = require('../type');\n\nfunction resolveYamlBoolean(data) {\n  if (data === null) return false;\n\n  var max = data.length;\n\n  return (max === 4 && (data === 'true' || data === 'True' || data === 'TRUE')) ||\n         (max === 5 && (data === 'false' || data === 'False' || data === 'FALSE'));\n}\n\nfunction constructYamlBoolean(data) {\n  return data === 'true' ||\n         data === 'True' ||\n         data === 'TRUE';\n}\n\nfunction isBoolean(object) {\n  return Object.prototype.toString.call(object) === '[object Boolean]';\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:bool', {\n  kind: 'scalar',\n  resolve: resolveYamlBoolean,\n  construct: constructYamlBoolean,\n  predicate: isBoolean,\n  represent: {\n    lowercase: function (object) { return object ? 'true' : 'false'; },\n    uppercase: function (object) { return object ? 'TRUE' : 'FALSE'; },\n    camelcase: function (object) { return object ? 'True' : 'False'; }\n  },\n  defaultStyle: 'lowercase'\n});\n","'use strict';\n\nvar common = require('../common');\nvar Type   = require('../type');\n\nvar YAML_FLOAT_PATTERN = new RegExp(\n  // 2.5e4, 2.5 and integers\n  '^(?:[-+]?(?:[0-9][0-9_]*)(?:\\\\.[0-9_]*)?(?:[eE][-+]?[0-9]+)?' +\n  // .2e4, .2\n  // special case, seems not from spec\n  '|\\\\.[0-9_]+(?:[eE][-+]?[0-9]+)?' +\n  // .inf\n  '|[-+]?\\\\.(?:inf|Inf|INF)' +\n  // .nan\n  '|\\\\.(?:nan|NaN|NAN))$');\n\nfunction resolveYamlFloat(data) {\n  if (data === null) return false;\n\n  if (!YAML_FLOAT_PATTERN.test(data) ||\n      // Quick hack to not allow integers end with `_`\n      // Probably should update regexp & check speed\n      data[data.length - 1] === '_') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlFloat(data) {\n  var value, sign;\n\n  value  = data.replace(/_/g, '').toLowerCase();\n  sign   = value[0] === '-' ? -1 : 1;\n\n  if ('+-'.indexOf(value[0]) >= 0) {\n    value = value.slice(1);\n  }\n\n  if (value === '.inf') {\n    return (sign === 1) ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;\n\n  } else if (value === '.nan') {\n    return NaN;\n  }\n  return sign * parseFloat(value, 10);\n}\n\n\nvar SCIENTIFIC_WITHOUT_DOT = /^[-+]?[0-9]+e/;\n\nfunction representYamlFloat(object, style) {\n  var res;\n\n  if (isNaN(object)) {\n    switch (style) {\n      case 'lowercase': return '.nan';\n      case 'uppercase': return '.NAN';\n      case 'camelcase': return '.NaN';\n    }\n  } else if (Number.POSITIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '.inf';\n      case 'uppercase': return '.INF';\n      case 'camelcase': return '.Inf';\n    }\n  } else if (Number.NEGATIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '-.inf';\n      case 'uppercase': return '-.INF';\n      case 'camelcase': return '-.Inf';\n    }\n  } else if (common.isNegativeZero(object)) {\n    return '-0.0';\n  }\n\n  res = object.toString(10);\n\n  // JS stringifier can build scientific format without dots: 5e-100,\n  // while YAML requres dot: 5.e-100. Fix it with simple hack\n\n  return SCIENTIFIC_WITHOUT_DOT.test(res) ? res.replace('e', '.e') : res;\n}\n\nfunction isFloat(object) {\n  return (Object.prototype.toString.call(object) === '[object Number]') &&\n         (object % 1 !== 0 || common.isNegativeZero(object));\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:float', {\n  kind: 'scalar',\n  resolve: resolveYamlFloat,\n  construct: constructYamlFloat,\n  predicate: isFloat,\n  represent: representYamlFloat,\n  defaultStyle: 'lowercase'\n});\n","'use strict';\n\nvar common = require('../common');\nvar Type   = require('../type');\n\nfunction isHexCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) ||\n         ((0x41/* A */ <= c) && (c <= 0x46/* F */)) ||\n         ((0x61/* a */ <= c) && (c <= 0x66/* f */));\n}\n\nfunction isOctCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x37/* 7 */));\n}\n\nfunction isDecCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */));\n}\n\nfunction resolveYamlInteger(data) {\n  if (data === null) return false;\n\n  var max = data.length,\n      index = 0,\n      hasDigits = false,\n      ch;\n\n  if (!max) return false;\n\n  ch = data[index];\n\n  // sign\n  if (ch === '-' || ch === '+') {\n    ch = data[++index];\n  }\n\n  if (ch === '0') {\n    // 0\n    if (index + 1 === max) return true;\n    ch = data[++index];\n\n    // base 2, base 8, base 16\n\n    if (ch === 'b') {\n      // base 2\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (ch !== '0' && ch !== '1') return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n\n    if (ch === 'x') {\n      // base 16\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isHexCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n\n    if (ch === 'o') {\n      // base 8\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isOctCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n  }\n\n  // base 10 (except 0)\n\n  // value should not start with `_`;\n  if (ch === '_') return false;\n\n  for (; index < max; index++) {\n    ch = data[index];\n    if (ch === '_') continue;\n    if (!isDecCode(data.charCodeAt(index))) {\n      return false;\n    }\n    hasDigits = true;\n  }\n\n  // Should have digits and should not end with `_`\n  if (!hasDigits || ch === '_') return false;\n\n  return true;\n}\n\nfunction constructYamlInteger(data) {\n  var value = data, sign = 1, ch;\n\n  if (value.indexOf('_') !== -1) {\n    value = value.replace(/_/g, '');\n  }\n\n  ch = value[0];\n\n  if (ch === '-' || ch === '+') {\n    if (ch === '-') sign = -1;\n    value = value.slice(1);\n    ch = value[0];\n  }\n\n  if (value === '0') return 0;\n\n  if (ch === '0') {\n    if (value[1] === 'b') return sign * parseInt(value.slice(2), 2);\n    if (value[1] === 'x') return sign * parseInt(value.slice(2), 16);\n    if (value[1] === 'o') return sign * parseInt(value.slice(2), 8);\n  }\n\n  return sign * parseInt(value, 10);\n}\n\nfunction isInteger(object) {\n  return (Object.prototype.toString.call(object)) === '[object Number]' &&\n         (object % 1 === 0 && !common.isNegativeZero(object));\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:int', {\n  kind: 'scalar',\n  resolve: resolveYamlInteger,\n  construct: constructYamlInteger,\n  predicate: isInteger,\n  represent: {\n    binary:      function (obj) { return obj >= 0 ? '0b' + obj.toString(2) : '-0b' + obj.toString(2).slice(1); },\n    octal:       function (obj) { return obj >= 0 ? '0o'  + obj.toString(8) : '-0o'  + obj.toString(8).slice(1); },\n    decimal:     function (obj) { return obj.toString(10); },\n    /* eslint-disable max-len */\n    hexadecimal: function (obj) { return obj >= 0 ? '0x' + obj.toString(16).toUpperCase() :  '-0x' + obj.toString(16).toUpperCase().slice(1); }\n  },\n  defaultStyle: 'decimal',\n  styleAliases: {\n    binary:      [ 2,  'bin' ],\n    octal:       [ 8,  'oct' ],\n    decimal:     [ 10, 'dec' ],\n    hexadecimal: [ 16, 'hex' ]\n  }\n});\n","'use strict';\n\nvar Type = require('../type');\n\nmodule.exports = new Type('tag:yaml.org,2002:map', {\n  kind: 'mapping',\n  construct: function (data) { return data !== null ? data : {}; }\n});\n","'use strict';\n\nvar Type = require('../type');\n\nfunction resolveYamlMerge(data) {\n  return data === '<<' || data === null;\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:merge', {\n  kind: 'scalar',\n  resolve: resolveYamlMerge\n});\n","'use strict';\n\nvar Type = require('../type');\n\nfunction resolveYamlNull(data) {\n  if (data === null) return true;\n\n  var max = data.length;\n\n  return (max === 1 && data === '~') ||\n         (max === 4 && (data === 'null' || data === 'Null' || data === 'NULL'));\n}\n\nfunction constructYamlNull() {\n  return null;\n}\n\nfunction isNull(object) {\n  return object === null;\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:null', {\n  kind: 'scalar',\n  resolve: resolveYamlNull,\n  construct: constructYamlNull,\n  predicate: isNull,\n  represent: {\n    canonical: function () { return '~';    },\n    lowercase: function () { return 'null'; },\n    uppercase: function () { return 'NULL'; },\n    camelcase: function () { return 'Null'; },\n    empty:     function () { return '';     }\n  },\n  defaultStyle: 'lowercase'\n});\n","'use strict';\n\nvar Type = require('../type');\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\nvar _toString       = Object.prototype.toString;\n\nfunction resolveYamlOmap(data) {\n  if (data === null) return true;\n\n  var objectKeys = [], index, length, pair, pairKey, pairHasKey,\n      object = data;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n    pairHasKey = false;\n\n    if (_toString.call(pair) !== '[object Object]') return false;\n\n    for (pairKey in pair) {\n      if (_hasOwnProperty.call(pair, pairKey)) {\n        if (!pairHasKey) pairHasKey = true;\n        else return false;\n      }\n    }\n\n    if (!pairHasKey) return false;\n\n    if (objectKeys.indexOf(pairKey) === -1) objectKeys.push(pairKey);\n    else return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlOmap(data) {\n  return data !== null ? data : [];\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:omap', {\n  kind: 'sequence',\n  resolve: resolveYamlOmap,\n  construct: constructYamlOmap\n});\n","'use strict';\n\nvar Type = require('../type');\n\nvar _toString = Object.prototype.toString;\n\nfunction resolveYamlPairs(data) {\n  if (data === null) return true;\n\n  var index, length, pair, keys, result,\n      object = data;\n\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n\n    if (_toString.call(pair) !== '[object Object]') return false;\n\n    keys = Object.keys(pair);\n\n    if (keys.length !== 1) return false;\n\n    result[index] = [ keys[0], pair[keys[0]] ];\n  }\n\n  return true;\n}\n\nfunction constructYamlPairs(data) {\n  if (data === null) return [];\n\n  var index, length, pair, keys, result,\n      object = data;\n\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n\n    keys = Object.keys(pair);\n\n    result[index] = [ keys[0], pair[keys[0]] ];\n  }\n\n  return result;\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:pairs', {\n  kind: 'sequence',\n  resolve: resolveYamlPairs,\n  construct: constructYamlPairs\n});\n","'use strict';\n\nvar Type = require('../type');\n\nmodule.exports = new Type('tag:yaml.org,2002:seq', {\n  kind: 'sequence',\n  construct: function (data) { return data !== null ? data : []; }\n});\n","'use strict';\n\nvar Type = require('../type');\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction resolveYamlSet(data) {\n  if (data === null) return true;\n\n  var key, object = data;\n\n  for (key in object) {\n    if (_hasOwnProperty.call(object, key)) {\n      if (object[key] !== null) return false;\n    }\n  }\n\n  return true;\n}\n\nfunction constructYamlSet(data) {\n  return data !== null ? data : {};\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:set', {\n  kind: 'mapping',\n  resolve: resolveYamlSet,\n  construct: constructYamlSet\n});\n","'use strict';\n\nvar Type = require('../type');\n\nmodule.exports = new Type('tag:yaml.org,2002:str', {\n  kind: 'scalar',\n  construct: function (data) { return data !== null ? data : ''; }\n});\n","'use strict';\n\nvar Type = require('../type');\n\nvar YAML_DATE_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9])'                    + // [2] month\n  '-([0-9][0-9])$');                   // [3] day\n\nvar YAML_TIMESTAMP_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9]?)'                   + // [2] month\n  '-([0-9][0-9]?)'                   + // [3] day\n  '(?:[Tt]|[ \\\\t]+)'                 + // ...\n  '([0-9][0-9]?)'                    + // [4] hour\n  ':([0-9][0-9])'                    + // [5] minute\n  ':([0-9][0-9])'                    + // [6] second\n  '(?:\\\\.([0-9]*))?'                 + // [7] fraction\n  '(?:[ \\\\t]*(Z|([-+])([0-9][0-9]?)' + // [8] tz [9] tz_sign [10] tz_hour\n  '(?::([0-9][0-9]))?))?$');           // [11] tz_minute\n\nfunction resolveYamlTimestamp(data) {\n  if (data === null) return false;\n  if (YAML_DATE_REGEXP.exec(data) !== null) return true;\n  if (YAML_TIMESTAMP_REGEXP.exec(data) !== null) return true;\n  return false;\n}\n\nfunction constructYamlTimestamp(data) {\n  var match, year, month, day, hour, minute, second, fraction = 0,\n      delta = null, tz_hour, tz_minute, date;\n\n  match = YAML_DATE_REGEXP.exec(data);\n  if (match === null) match = YAML_TIMESTAMP_REGEXP.exec(data);\n\n  if (match === null) throw new Error('Date resolve error');\n\n  // match: [1] year [2] month [3] day\n\n  year = +(match[1]);\n  month = +(match[2]) - 1; // JS month starts with 0\n  day = +(match[3]);\n\n  if (!match[4]) { // no hour\n    return new Date(Date.UTC(year, month, day));\n  }\n\n  // match: [4] hour [5] minute [6] second [7] fraction\n\n  hour = +(match[4]);\n  minute = +(match[5]);\n  second = +(match[6]);\n\n  if (match[7]) {\n    fraction = match[7].slice(0, 3);\n    while (fraction.length < 3) { // milli-seconds\n      fraction += '0';\n    }\n    fraction = +fraction;\n  }\n\n  // match: [8] tz [9] tz_sign [10] tz_hour [11] tz_minute\n\n  if (match[9]) {\n    tz_hour = +(match[10]);\n    tz_minute = +(match[11] || 0);\n    delta = (tz_hour * 60 + tz_minute) * 60000; // delta in mili-seconds\n    if (match[9] === '-') delta = -delta;\n  }\n\n  date = new Date(Date.UTC(year, month, day, hour, minute, second, fraction));\n\n  if (delta) date.setTime(date.getTime() - delta);\n\n  return date;\n}\n\nfunction representYamlTimestamp(object /*, style*/) {\n  return object.toISOString();\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:timestamp', {\n  kind: 'scalar',\n  resolve: resolveYamlTimestamp,\n  construct: constructYamlTimestamp,\n  instanceOf: Date,\n  represent: representYamlTimestamp\n});\n","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","const EventEmitter = require('events');\nconst RobotView = require('./robot-view');\nconst createHoldButton = require('./hold-button');\n\nclass AITrainingView {\n  constructor(ai, robotView) {\n    this.ai = ai;\n    this.robotView = robotView;\n    this.running = false;\n    this.turboDown = false;\n    this.timer = 0;\n    this.robotIdle = true;\n    this.robotView.events.on('idle', () => {\n      if (this.running || this.turboDown) {\n        this.ai.step();\n      } else {\n        this.robotIdle = true;\n      }\n    });\n    this.events = new EventEmitter();\n\n    this.$element = $('<div></div>')\n      .addClass('ai-training-view');\n\n    this.$runButton = this.buildButton({\n        id: 'run',\n        icon: 'static/fa/play-solid.svg',\n        title: 'Run / Pause',\n      })\n      .on('i.pointerclick', () => {\n        if (this.running) {\n          this.$runButton.css({ backgroundImage: 'url(\"static/fa/play-solid.svg\")' });\n          this.$runButton.removeClass('active');\n          this.running = false;\n        } else if (this.robotIdle) {\n          this.$runButton.css({ backgroundImage: 'url(\"static/fa/pause-solid.svg\")' });\n          this.$runButton.addClass('active');\n          this.running = true;\n          this.robotIdle = false;\n          this.ai.step();\n        }\n      })\n      .appendTo(this.$element);\n\n    this.$turboButton = this.buildButton({\n        id: 'turbo',\n        icon: 'static/fa/forward-solid.svg',\n        title: 'Hold to speed up',\n      })\n      .on('i.pointerdown', () => {\n        this.$turboButton.addClass('active');\n        this.robotView.speed = RobotView.Speed.TURBO;\n        this.turboDown = true;\n        if (this.robotIdle) {\n          this.ai.step();\n        }\n      })\n      .on('i.pointerup', () => {\n        this.$turboButton.removeClass('active');\n        this.robotView.speed = RobotView.Speed.DEFAULT;\n        this.turboDown = false;\n      })\n      .appendTo(this.$element);\n\n    this.$stepButton = this.buildButton({\n        id: 'step',\n        icon: 'static/fa/step-forward-solid.svg',\n        title: 'Step',\n      })\n      .on('i.pointerclick', () => {\n        if (this.robotIdle) {\n          this.robotIdle = false;\n          this.ai.step();\n        }\n      })\n      .appendTo(this.$element);\n\n    this.$viewPolicyButton = this.buildButton({\n        id: 'view-policy',\n        icon: 'static/icons/eye-regular.svg',\n        title: 'View Policy',\n      })\n      .on('i.pointerdown', () => {\n        this.$viewPolicyButton.addClass('active');\n        this.events.emit('policy-show');\n      })\n      .on('i.pointerup', () => {\n        this.$viewPolicyButton.removeClass('active');\n        this.events.emit('policy-hide');\n      })\n      .appendTo(this.$element);\n\n    this.$explorationRateSlider = this.buildSlider({\n      id: 'exploration-rate',\n      title: 'Exploration rate',\n      options: { min: 0, max: 1, step: 0.1 },\n      limitLabels: ['Exploit', 'Explore'],\n      initialValue: this.ai.exploreRate,\n      changeCallback: (value) => {\n        this.ai.exploreRate = value;\n      },\n    }).appendTo(this.$element);\n\n    this.$learningRateSlider = this.buildSlider({\n      id: 'learning-rate',\n      title: 'Learning rate',\n      options: { min: 0, max: 1, step: 0.1 },\n      initialValue: this.ai.learningRate,\n      changeCallback: (value) => {\n        this.ai.learningRate = value;\n      },\n    }).appendTo(this.$element);\n\n    this.$discountFactorSlider = this.buildSlider({\n      id: 'discount-factor',\n      title: 'Discount factor',\n      options: { min: 0, max: 1, step: 0.1 },\n      initialValue: this.ai.discountFactor,\n      changeCallback: (value) => {\n        this.ai.discountFactor = value;\n      },\n    }).appendTo(this.$element);\n\n    this.$clearButton = createHoldButton({\n      id: 'clear',\n      title: 'Clear',\n      holdTime: 2000,\n    })\n      .addClass([\n        'ai-training-view-button',\n        'ai-training-view-button-clear',\n      ])\n      .on('hold', () => {\n        this.ai.clear();\n      })\n      .appendTo(this.$element);\n\n    this.$clearButton\n      .find('.text')\n      .attr({\n        'data-i18n-text': 'ai-training-view-button-clear',\n      });\n  }\n\n  buildButton(props) {\n    const button = $('<button></button>')\n      .attr({\n        type: 'button',\n        title: props.title,\n        'data-i18n-text': `ai-training-view-button-${props.id}`,\n      })\n      .addClass([\n        'btn',\n        'ai-training-view-button',\n        `ai-training-view-button-${props.id}`,\n      ])\n      .html(props.icon ? '&nbsp;' : props.title || '')\n      .pointerclick();\n\n    if (props.icon) {\n      button.css({\n        backgroundImage: `url(${props.icon})`,\n      });\n      button.addClass('round');\n    }\n\n    return button;\n  }\n\n  buildSlider(props) {\n    const {\n      id, title, options, initialValue, changeCallback,\n    } = props;\n\n    const $element = $('<div></div>')\n      .addClass([\n        'slider',\n        'ai-training-view-slider',\n        `ai-training-view-slider-${id}`,\n      ]);\n\n    const $text = $('<div class=\"slider-text\"></div>')\n      .appendTo($element);\n    const $input = $('<div class=\"slider-input\"></div>')\n      .appendTo($element);\n    const $exploreValue = $('<span></span>')\n      .text(initialValue);\n    $('<label></label>')\n      .html(`${title}: `)\n      .append($exploreValue)\n      .appendTo($text);\n\n    if (props.limitLabels) {\n      const [minLabel, maxLabel] = props.limitLabels;\n      $('<span></span>')\n        .addClass(['slider-limit', 'slider-limit-min'])\n        .text(minLabel)\n        .attr('data-i18n-text', `ai-training-view-slider-${id}-limit-min`)\n        .appendTo($text);\n      $('<span></span>')\n        .addClass(['slider-limit', 'slider-limit-max'])\n        .text(maxLabel)\n        .attr('data-i18n-text', `ai-training-view-slider-${id}-limit-max`)\n        .appendTo($text);\n    }\n\n    const $exploreSlider = $('<input type=\"range\"></input>')\n      .addClass('form-control-range')\n      .attr(options)\n      .on('change', () => {\n        changeCallback(Number($exploreSlider.val()));\n        $exploreValue.text(Number($exploreSlider.val()));\n      })\n      .val(initialValue)\n      .appendTo($input);\n\n    return $element;\n  }\n}\n\nmodule.exports = AITrainingView;\n","class CfgLoader {\n  constructor(cfgReader, cfgParser) {\n    this.reader = cfgReader;\n    this.parser = cfgParser;\n  }\n\n  async load(files) {\n    const segments = [];\n    const promises = [];\n\n    files.forEach((file, i) => {\n      promises.push(\n        this.reader(file)\n          .then(cfgText => this.parser(cfgText))\n          .then((cfgSegment) => {\n            // We keep the segments in order\n            segments[i] = cfgSegment;\n          })\n      );\n    });\n\n    return Promise.all(promises).then(() => Object.assign({}, ...segments));\n  }\n}\n\nmodule.exports = CfgLoader;\n","function CfgReaderFetch(filename) {\n  return fetch(filename, { cache: 'no-store' })\n    .then(response => response.status === 200? response.text() : '');\n}\n\nmodule.exports = CfgReaderFetch;\n","const Maze = require('../maze.js');\n\nclass MazeBrowser {\n  constructor($element, config, mazeStore, saveMode = false) {\n    this.$element = $element;\n    this.config = config;\n    this.$selectedButton = null;\n    this.selectedData = null;\n\n    this.$element.addClass('maze-browser');\n\n    const setSelection = (button) => {\n      if (this.$selectedButton) {\n        this.$selectedButton.removeClass('selected');\n      }\n      this.$selectedButton = $(button);\n      this.$selectedButton.addClass('selected');\n    };\n\n    const buttons = Object.entries(\n      saveMode ? mazeStore.getAllUserObjects() : mazeStore.getAllObjects()\n    ).map(([id, mazeJSON]) => $('<div></div>')\n      .addClass(['col-6', 'col-md-2', 'mb-3'])\n      .append(\n        $('<button></button>')\n          .addClass('maze-browser-item')\n          .append(this.createPreviewImage(mazeJSON))\n          .pointerclick()\n          .on('i.pointerclick', (ev) => {\n            setSelection(ev.currentTarget);\n            this.selectedData = id;\n          })\n      ));\n\n    if (saveMode) {\n      buttons.unshift($('<div></div>')\n        .addClass(['col-6', 'col-md-2', 'mb-3'])\n        .append($('<button></button>')\n          .addClass('maze-browser-item-new')\n          .on('click', (ev) => {\n            setSelection(ev.currentTarget);\n            this.selectedData = 'new';\n          })));\n    }\n\n    this.$element.append($('<div class=\"row\"></div>').append(buttons));\n  }\n\n  createPreviewImage(mazeJSON) {\n    const maze = Maze.fromJSON(mazeJSON);\n    const $canvas = $('<canvas class=\"maze-browser-item-preview\"></canvas>')\n      .attr({\n        width: maze.map.width,\n        height: maze.map.height,\n      });\n    const ctx = $canvas[0].getContext('2d');\n    maze.map.allCells().forEach(([i, j, value]) => {\n      ctx.fillStyle = (this.config.tileTypes && this.config.tileTypes[value].color) || '#000000';\n      ctx.fillRect(i, j, 1, 1);\n    });\n\n    return $canvas;\n  }\n}\n\nmodule.exports = MazeBrowser;\n","const Maze = require('../maze.js');\nconst MazeView = require('../maze-view.js');\nconst ModalLoad = require('./modal-load.js');\nconst ModalSave = require('./modal-save.js');\nconst ModalExport = require('./modal-export.js');\nconst ModalImport = require('./modal-import.js');\nconst ObjectStore = require('./object-store.js');\n\nclass MazeEditor {\n  constructor($element, maze, palette, config, textures) {\n    this.$element = $element;\n    this.maze = maze;\n    this.palette = palette;\n    this.config = config;\n\n    this.mazeView = new MazeView(maze, config, textures, true);\n    this.displayObject = this.mazeView.displayObject;\n\n    const tools = {\n      start: (x, y) => {\n        if (this.maze.robots.length > 0) {\n          this.maze.robots[0].setPosition(x, y);\n        }\n      },\n      erase: (x, y) => {\n        const item = this.maze.getItem(x, y);\n        if (item && item.erasable) {\n          this.maze.removeItem(x, y);\n        }\n      },\n      tile: (tileType, x, y) => {\n        if (this.maze.startPosition[0] === x && this.maze.startPosition[1] === y) {\n          return;\n        }\n        this.maze.removeItem(x, y);\n        this.maze.map.set(x, y, tileType);\n        if (this.config.tileTypes[tileType].item !== undefined) {\n          this.maze.placeItem(this.config.tileTypes[tileType].item, x, y, false);\n        }\n      },\n      item: (itemType, x, y) => {\n        if (this.maze.isWalkable(x, y)) {\n          this.maze.placeItem(itemType, x, y);\n        }\n      },\n    };\n\n    this.toolHandler = null;\n    this.palette.events.on('change', (tool, type = null) => {\n      if (type !== null) {\n        this.toolHandler = tools[tool].bind(this, type);\n      } else {\n        this.toolHandler = tools[tool].bind(this);\n      }\n    });\n\n    this.palette.events.on('action', (id) => {\n      if (this.actionHandlers[id]) {\n        this.actionHandlers[id]();\n      }\n    });\n\n    let lastEdit = null;\n    this.mazeView.events.on('action', ([x, y], props) => {\n      if (this.toolHandler !== null) {\n        if (lastEdit && props.shiftKey) {\n          const [lastX, lastY] = lastEdit;\n          for (let i = Math.min(lastX, x); i <= Math.max(lastX, x); i += 1) {\n            for (let j = Math.min(lastY, y); j <= Math.max(lastY, y); j += 1) {\n              this.toolHandler(i, j);\n            }\n          }\n        } else {\n          this.toolHandler(x, y);\n        }\n        lastEdit = [x, y];\n      }\n    });\n\n    this.objectStore = new ObjectStore();\n    this.actionHandlers = {\n      load: () => {\n        const modal = new ModalLoad(this.config, this.objectStore);\n        modal.show().then((id) => {\n          const jsonMaze = id && this.objectStore.get(id);\n          if (jsonMaze) {\n            this.maze.copy(Maze.fromJSON(jsonMaze));\n          }\n        });\n      },\n      save: () => {\n        const modal = new ModalSave(this.config, this.objectStore);\n        modal.show().then((id) => {\n          if (id) {\n            this.objectStore.set(id === 'new' ? null : id, this.maze.toJSON());\n          }\n        });\n      },\n      import: () => {\n        const modal = new ModalImport();\n        modal.show().then((importedData) => {\n          if (importedData) {\n            this.maze.copy(Maze.fromJSON(importedData));\n          }\n        });\n      },\n      export: () => {\n        const modal = new ModalExport(JSON.stringify(this.maze));\n        modal.show();\n      },\n      reset: () => {\n        this.maze.reset();\n      },\n    };\n  }\n\n  animate(time) {\n    this.mazeView.animate(time);\n  }\n\n  getRobotView() {\n    return this.mazeView.robotView;\n  }\n}\n\nmodule.exports = MazeEditor;\n","const Modal = require('../modal.js');\n\nclass ModalExport extends Modal {\n  constructor(exportData) {\n    super({\n      title: 'Export maze',\n    });\n\n    this.$dataContainer = $('<textarea class=\"form-control\"></textarea>')\n      .attr({\n        rows: 10,\n      })\n      .text(exportData)\n      .appendTo(this.$body);\n\n    this.$copyButton = $('<button></button>')\n      .addClass(['btn', 'btn-outline-dark', 'btn-copy', 'mt-2'])\n      .text('Copy to clipboard')\n      .on('click', () => {\n        this.$dataContainer[0].select();\n        document.execCommand('copy');\n        this.hide();\n      })\n      .appendTo(this.$footer);\n  }\n}\n\nmodule.exports = ModalExport;\n","const Modal = require('../modal.js');\n\nclass ModalImport extends Modal {\n  constructor() {\n    super({\n      title: 'Import maze',\n    });\n\n    this.$dataContainer = $('<textarea class=\"form-control\"></textarea>')\n      .attr({\n        rows: 10,\n        placeholder: 'Paste the JSON object here.',\n      })\n      .appendTo(this.$body);\n\n    // noinspection JSUnusedGlobalSymbols\n    this.$errorText = $('<p class=\"text-danger\"></p>')\n      .appendTo(this.$footer)\n      .hide();\n\n    // noinspection JSUnusedGlobalSymbols\n    this.$copyButton = $('<button></button>')\n      .addClass(['btn', 'btn-primary'])\n      .text('Import')\n      .on('click', () => {\n        try {\n          const imported = JSON.parse(this.$dataContainer.val());\n          this.hide(imported);\n        } catch (err) {\n          this.showError(err.message);\n        }\n      })\n      .appendTo(this.$footer);\n  }\n\n  showError(errorText) {\n    this.$errorText.html(errorText);\n    this.$errorText.show();\n  }\n}\n\nmodule.exports = ModalImport;\n","const Modal = require('../modal.js');\nconst CityBrowser = require('./maze-browser.js');\n\nclass ModalLoad extends Modal {\n  constructor(config, mazeStore) {\n    super({\n      title: 'Load maze',\n      size: 'lg',\n    });\n\n    this.$browserContainer = $('<div></div>')\n      .appendTo(this.$body);\n    this.browser = new CityBrowser(this.$browserContainer, config, mazeStore);\n\n    // noinspection JSUnusedGlobalSymbols\n    this.$cancelButton = $('<button></button>')\n      .addClass(['btn', 'btn-secondary'])\n      .text('Cancel')\n      .on('click', () => {\n        this.hide(null);\n      })\n      .appendTo(this.$footer);\n\n    // noinspection JSUnusedGlobalSymbols\n    this.$loadButton = $('<button></button>')\n      .addClass(['btn', 'btn-primary'])\n      .text('Load')\n      .on('click', () => {\n        try {\n          this.hide(this.browser.selectedData);\n        } catch (err) {\n          this.showError(err.message);\n        }\n      })\n      .appendTo(this.$footer);\n  }\n\n  showError(errorText) {\n    this.$errorText.html(errorText);\n    this.$errorText.show();\n  }\n}\n\nmodule.exports = ModalLoad;\n","const Modal = require('../modal.js');\nconst MazeBrowser = require('./maze-browser.js');\n\nclass ModalSave extends Modal {\n  constructor(config, mazeStore) {\n    super({\n      title: 'Save maze',\n      size: 'lg',\n    });\n\n    this.$browserContainer = $('<div></div>')\n      .appendTo(this.$body);\n    this.browser = new MazeBrowser(this.$browserContainer, config, mazeStore, true);\n\n    // noinspection JSUnusedGlobalSymbols\n    this.$cancelButton = $('<button></button>')\n      .addClass(['btn', 'btn-secondary'])\n      .text('Cancel')\n      .on('click', () => {\n        this.hide(null);\n      })\n      .appendTo(this.$footer);\n\n    // noinspection JSUnusedGlobalSymbols\n    this.$saveButton = $('<button></button>')\n      .addClass(['btn', 'btn-primary'])\n      .text('Save')\n      .on('click', () => {\n        try {\n          this.hide(this.browser.selectedData);\n        } catch (err) {\n          this.showError(err.message);\n        }\n      })\n      .appendTo(this.$footer);\n  }\n\n  showError(errorText) {\n    this.$errorText.html(errorText);\n    this.$errorText.show();\n  }\n}\n\nmodule.exports = ModalSave;\n","class ObjectStore {\n  constructor(fixedObjectsPath = null) {\n    this.fixedObjects = [];\n    this.userObjects = [];\n\n    this.loadUserObjects();\n    if (fixedObjectsPath) {\n      this.loadFixedObjects(fixedObjectsPath);\n    }\n  }\n\n  async loadFixedObjects(path) {\n    fetch(path, { cache: 'no-store' })\n      .then(response => response.json())\n      .then((data) => {\n        this.fixedObjects = data.mazes;\n      });\n  }\n\n  loadUserObjects() {\n    const userObjects = JSON.parse(localStorage.getItem('reinforcementLearning2.mazeStore.mazes'));\n    if (userObjects) {\n      this.userObjects = userObjects;\n    }\n  }\n\n  saveLocal() {\n    localStorage.setItem('reinforcementLearning2.mazeStore.mazes', JSON.stringify(this.userObjects));\n  }\n\n  getAllObjects() {\n    return Object.assign(\n      {},\n      this.getAllUserObjects(),\n      this.getAllFixedObjects(),\n    );\n  }\n\n  getAllFixedObjects() {\n    return Object.fromEntries(this.fixedObjects.map((obj, i) => [\n      `F${i}`,\n      obj,\n    ]));\n  }\n\n  getAllUserObjects() {\n    return Object.fromEntries(this.userObjects.map((obj, i) => [\n      `L${i}`,\n      obj,\n    ]).reverse());\n  }\n\n  get(id) {\n    if (id[0] === 'F') {\n      return this.fixedObjects[id.substr(1)];\n    }\n    return this.userObjects[id.substr(1)];\n  }\n\n  set(id, obj) {\n    if (id === null || this.userObjects[id.substr(1)] === undefined) {\n      this.userObjects.push(obj);\n    } else {\n      this.userObjects[id.substr(1)] = obj;\n    }\n    this.saveLocal();\n  }\n}\n\nmodule.exports = ObjectStore;\n","const EventEmitter = require('events');\nconst createHoldButton = require('../hold-button')\n\nclass ExhibitMazeEditorPalette {\n  constructor($container, config) {\n    this.$container = $container;\n    this.$element = $('<div></div>').appendTo(this.$container);\n    this.config = config;\n    this.activeButton = null;\n    this.tileId = null;\n    this.events = new EventEmitter();\n\n    this.$element.addClass(['maze-editor-palette', 'exhibit-maze-editor-palette']);\n    this.$bar1 = $('<div class=\"maze-editor-palette-bar\"></div>')\n      .appendTo(this.$element);\n\n    this.tileButtons = this.buildTileButtons(config);\n    this.$bar1.append(Object.values(this.tileButtons));\n\n    this.resetMapButton = createHoldButton({\n      holdTime: 2000,\n    })\n      .addClass([\n        'editor-palette-button',\n        'editor-palette-button-action',\n        'editor-palette-button-action-reset-map',\n      ])\n      .on('hold', () => {\n        this.events.emit('action', 'reset-map');\n      })\n      .appendTo(this.$element)\n      .find('.text')\n      .html('Reset map')\n      .attr({\n        title: 'Reset map',\n        'data-i18n-text': 'editor-palette-button-action-reset-map',\n      });\n  }\n\n  buildTileButtons(config) {\n    return Object.fromEntries(\n      Object.entries(config.tileTypes)\n        .filter(([, tileType]) => tileType.inPalette !== false)\n        .map(([id, typeCfg]) => [id, $('<div></div>')\n          .addClass(['item'])\n          .attr('data-tile-id', id)\n          .append($('<button></button>')\n            .attr({\n              type: 'button',\n              title: typeCfg.name,\n            })\n            .addClass([\n              'editor-palette-button',\n              'editor-palette-button-tile',\n              `editor-palette-button-tile-${id}`,\n            ])\n            .css({\n              backgroundColor: typeCfg.color,\n              backgroundImage: typeCfg.editorIcon ? `url(${typeCfg.editorIcon})` : 'none',\n            })\n            .pointerclick()\n            .on('i.pointerclick', (ev) => {\n              if (this.activeButton) {\n                this.activeButton.removeClass('active');\n              }\n              this.activeButton = $(ev.target);\n              this.activeButton.addClass('active');\n              this.tileId = Number(id);\n              this.events.emit('change', 'tile', Number(id));\n            }))\n          .append($('<div></div>')\n            .addClass('label')\n            .attr('data-i18n-text', `editor-palette-button-tile-${typeCfg.type}`))]));\n  }\n}\n\nmodule.exports = ExhibitMazeEditorPalette;\n","/* globals IMAGINARY */\n\nfunction getLanguage() {\n  return IMAGINARY.i18n.getLang();\n}\n\nfunction setLanguage(code) {\n  return IMAGINARY.i18n.setLang(code).then(() => {\n    $('[data-i18n-text]').each((i, element) => {\n      $(element).html(\n        IMAGINARY.i18n.t($(element).data('i18n-text'))\n      );\n    });\n  });\n}\n\nfunction init(config, initialLanguage) {\n  return IMAGINARY.i18n.init({\n    queryStringVariable: 'lang',\n    translationsDirectory: 'tr',\n    defaultLanguage: 'en',\n  })\n    .then(() => {\n      const languages = Object.keys(config.languages);\n      return Promise.all(languages.map(code => IMAGINARY.i18n.loadLang(code)));\n    })\n    .then(() => {\n      return setLanguage(initialLanguage);\n    });\n}\n\nmodule.exports = {\n  init,\n  getLanguage,\n  setLanguage,\n};\n","const Maze = require('../maze');\nconst maze1 = require('../../../data/mazes/explore-exploit.json');\nconst training = require('../../../data/training/explore-exploit.json');\nconst Robot = require('../robot');\nconst QLearningAI = require('../qlearning-ai');\nconst MazeView = require('../maze-view');\nconst AITrainingView = require('../ai-training-view');\nconst RobotView = require('../robot-view');\n\nclass ExploreExploitInteractive {\n  constructor(config, textures) {\n    const maze = Maze.fromJSON(maze1);\n    maze.config = config;\n    this.robot = new Robot();\n    maze.addRobot(this.robot);\n    this.ai = new QLearningAI(maze.robot);\n    this.ai.learningRate = 0;\n    this.ai.exploreRate = 0;\n    this.ai.q = training.q;\n\n    this.view = new MazeView(maze, config, textures);\n    this.ui = new AITrainingView(this.ai, this.view.robotView);\n    this.view.robotView.speed = RobotView.Speed.SLOW;\n    this.ui.running = true;\n    this.ui.robotIdle = false;\n    this.ai.step();\n  }\n\n  animate(time) {\n    this.view.animate(time);\n  }\n}\n\nmodule.exports = ExploreExploitInteractive;\n","const Maze = require('../maze');\nconst maze1 = require('../../../data/mazes/rewards.json');\nconst training = require('../../../data/training/rewards.json');\nconst Robot = require('../robot');\nconst QLearningAI = require('../qlearning-ai');\nconst MazeView = require('../maze-view');\nconst AITrainingView = require('../ai-training-view');\nconst RobotView = require('../robot-view');\n\nclass RewardsInteractive {\n  constructor(config, textures) {\n    const maze = Maze.fromJSON(maze1);\n    maze.config = config;\n    this.robot = new Robot();\n    maze.addRobot(this.robot);\n    this.ai = new QLearningAI(maze.robot);\n    this.ai.learningRate = 0;\n    this.ai.exploreRate = 0;\n    this.ai.q = training.q;\n\n    this.view = new MazeView(maze, config, textures);\n    this.ui = new AITrainingView(this.ai, this.view.robotView);\n    this.view.robotView.speed = RobotView.Speed.SLOW;\n\n    this.progress = 0;\n    this.$bar = $('<div></div>')\n      .addClass('progress-bar')\n      .attr({\n        role: 'progressbar',\n      });\n    this.$barContainer = $('<div></div>')\n      .addClass('bar-container')\n      .append($('<div></div>')\n        .addClass('label')\n        .attr({\n          'data-i18n-text': 'rewards-bar-label',\n        }))\n      .append($('<div></div>')\n        .addClass('progress')\n        .append(this.$bar));\n\n    this.view.robotView.events.on('resetEnd', () => {\n      this.setProgress(0, true);\n    });\n    this.setProgress(0);\n\n    this.robot.events.on('move', (direction, oldX, oldY, x, y, reward, tileType) => {\n      if (tileType === 'candy') {\n        this.setProgress(Math.min(this.getProgress() + 20, 100));\n      } else if (tileType === 'lava') {\n        this.setProgress(Math.max(this.getProgress() - 15, 0));\n      } else if (tileType === 'exit') {\n        this.setProgress(100);\n      }\n    });\n  }\n\n  animate(time) {\n    this.view.animate(time);\n  }\n\n  getProgress() {\n    return this.progress;\n  }\n\n  setProgress(percentage, isReset = false) {\n    if (percentage > this.progress || isReset) {\n      this.$barContainer.removeClass('decrease');\n    }\n    if (percentage < this.progress && !isReset) {\n      this.$barContainer.addClass('decrease');\n    }\n\n    this.progress = percentage;\n    this.$bar.css('width', `${percentage}%`);\n  }\n}\n\nmodule.exports = RewardsInteractive;\n","const EventEmitter = require('events');\nconst Array2D = require('./lib/array-2d.js');\n\n/**\n * Represents a 2D grid map that stores a single Number per cell\n */\nclass Grid {\n  /**\n   * Create a new grid\n   *\n   * @param {number} width\n   * @param {number} height\n   * @param {number[][]} cells\n   */\n  constructor(width, height, cells = null) {\n    this.width = width;\n    this.height = height;\n    this.cells = cells || Array2D.create(width, height, 0);\n    this.events = new EventEmitter();\n  }\n\n  /**\n   * Create a new Grid from a JSON string\n   *\n   * @param jsonObject {object} JSON object\n   * @return {Grid}\n   */\n  static fromJSON(jsonObject) {\n    const { width, height, cells } = jsonObject;\n    return new Grid(width, height, cells);\n  }\n\n  /**\n   * Serializes to a JSON object\n   * @return {{cells: number[][], width: number, height: number}}\n   */\n  toJSON() {\n    return {\n      width: this.width,\n      height: this.height,\n      cells: Array2D.clone(this.cells),\n    };\n  }\n\n  copy(grid) {\n    this.width = grid.width;\n    this.height = grid.height;\n    this.replace(grid.cells);\n  }\n\n  /**\n   * Retrieves the value at (x,y)\n   *\n   * @param {number} x\n   * @param {number} y\n   * @return {number}\n   */\n  get(x, y) {\n    return this.cells[y][x];\n  }\n\n  /**\n   * Set the value at (x, y)\n   *\n   * @fires Grid.events#update\n   *\n   * @param {number} x\n   * @param {number} y\n   * @param {number} value\n   */\n  set(x, y, value) {\n    this.cells[y][x] = value;\n\n    /**\n     * Update event.\n     *\n     * Argument is an array of updated cells. Each updated cell is represented\n     * by an array with three elements: [x, y, value]\n     *\n     * @event Grid.events#update\n     * @type {[[number, number, number]]}\n     */\n    this.events.emit('update', [[x, y, value]]);\n  }\n\n  /**\n   * Backwards compatibility function that maps (x, y) to a single index in a flat array\n   * @deprecated\n   * @param x {number}\n   * @param y {number}\n   * @return {number}\n   */\n  offset(x, y) {\n    return y * this.width + x;\n  }\n\n  replace(cells) {\n    Array2D.copy(cells, this.cells);\n    this.events.emit('update', this.allCells());\n  }\n\n  /**\n   * Returns true if (x, y) are valid coordinates within the grid's bounds.\n   *\n   * @param {number} x\n   * @param {number} y\n   * @return {boolean}\n   */\n  isValidCoords(x, y) {\n    return x >= 0 && y >= 0 && x < this.width && y < this.height;\n  }\n\n  /**\n   * Returns all cells, represented as [x, y, value] arrays.\n   *\n   * @return {[[number, number, number]]}\n   */\n  allCells() {\n    return Array2D.items(this.cells);\n  }\n\n  /**\n   * Get cells adjacent to the cell at (i, j).\n   *\n   * Each cell is represented by an array of the form [i, j, value]\n   * A cell has at most four adjacent cells, which share one side\n   * (diagonals are not adjacent).\n   *\n   * @param {number} i\n   * @param {number} j\n   * @return {[[number, number, number]]}\n   */\n  adjacentCells(i, j) {\n    return [[i, j - 1], [i + 1, j], [i, j + 1], [i - 1, j]]\n      .filter(([x, y]) => this.isValidCoords(x, y))\n      .map(([x, y]) => [x, y, this.get(x, y)]);\n  }\n\n  /**\n   * Returns the cells around the cell at (i, j).\n   *\n   * Each cells returned is represented as an array [i, j, value].\n   * Cells \"around\" are those reachable by no less than <distance> steps in\n   * any direction, including diagonals.\n   *\n   * @param {number} i\n   * @param {number} j\n   * @param {number} distance\n   * @return {[[number, number, number]]}\n   */\n  nearbyCells(i, j, distance = 1) {\n    const coords = [];\n    // Top\n    for (let x = i - distance; x < i + distance; x += 1) {\n      coords.push([x, j - distance]);\n    }\n    // Right\n    for (let y = j - distance; y < j + distance; y += 1) {\n      coords.push([i + distance, y]);\n    }\n    // Bottom\n    for (let x = i + distance; x > i - distance; x -= 1) {\n      coords.push([x, j + distance]);\n    }\n    // Left\n    for (let y = j + distance; y > j - distance; y -= 1) {\n      coords.push([i - distance, y]);\n    }\n\n    return coords\n      .filter(([x, y]) => this.isValidCoords(x, y))\n      .map(([x, y]) => [x, y, this.get(x, y)]);\n  }\n\n  stepDistance(x1, y1, x2, y2) {\n    return Math.abs(x1 - x2) + Math.abs(y1 - y2);\n  }\n}\n\nmodule.exports = Grid;\n","/**\n * props:\n *  - holdTime: time in ms to hold the button\n */\nfunction createHoldButton(props) {\n  const $button = $('<button></button>')\n    .attr({\n      type: 'button',\n    })\n    .addClass('hold-button')\n    .append(\n      $('<span class=\"progress\"></span>')\n        .css({\n          animationDuration: `${props.holdTime}ms`,\n        })\n    )\n    .append(\n      $('<span class=\"text\"></span>')\n    );\n\n  let trackedPointerId = null;\n  let holdTimeout = null;\n\n  function startHolding() {\n    if (holdTimeout !== null) {\n      clearTimeout(holdTimeout);\n      holdTimeout = null;\n    }\n\n    $button.addClass('held');\n    holdTimeout = setTimeout(() => {\n      holdTimeout = null;\n      trackedPointerId = null;\n      $button.trigger('hold');\n      $button.removeClass('held');\n    }, props.holdTime);\n  }\n\n  function abortHolding() {\n    if (holdTimeout !== null) {\n      clearTimeout(holdTimeout);\n      holdTimeout = null;\n    }\n    $button.removeClass('held');\n    trackedPointerId = null;\n  }\n\n  $(document)\n    .on('pointerup', (ev) => {\n      if (ev.pointerId === trackedPointerId) {\n        abortHolding();\n      }\n    })\n    .on('pointercancel', (ev) => {\n      if (ev.pointerId === trackedPointerId) {\n        abortHolding();\n      }\n    });\n\n  $button.on('pointerdown', (ev) => {\n    if (trackedPointerId === null) {\n      ev.preventDefault();\n      trackedPointerId = ev.pointerId;\n      // On touch, apparently, the pointer is automatically captured by pointerdown\n      ev.delegateTarget.releasePointerCapture(ev.pointerId);\n      startHolding();\n    }\n  });\n\n  return $button;\n}\n\nmodule.exports = createHoldButton;\n","/**\n * This jQuery plugin adds an 'i.pointerclick' event that is fired on pointerdown followed by\n * a pointerup within the area of the original element.\n *\n * Install it by calling pointerclick() on a jQuery object:\n *\n * $('#my-element')\n *  .pointerclick()\n *  .on('i.pointerclick', function(event) {\n *    // do something\n *  });\n *\n *  This plugin was motivated because on multi-touch devices, the click event is not fired if a\n *  different part of the screen is being touched at the time.\n */\n(function initPlugins($) {\n  $.fn.pointerclick = function pointerClickHandler() {\n    return this.each(function pointerClickElementHandler() {\n      let trackedPointerId = null;\n\n      $(document)\n        .on('pointerup', (ev) => {\n          if (ev.pointerId === trackedPointerId) {\n            trackedPointerId = null;\n            $(this).trigger('i.pointerup', ev);\n          }\n        })\n        .on('pointercancel', (ev) => {\n          if (ev.pointerId === trackedPointerId) {\n            trackedPointerId = null;\n            $(this).trigger('i.pointerup', ev);\n          }\n        });\n\n      $(this)\n        .on('pointerdown', (ev) => {\n          ev.preventDefault();\n          trackedPointerId = ev.pointerId;\n          // On touch, apparently, the pointer is automatically captured by pointerdown\n          ev.delegateTarget.releasePointerCapture(ev.pointerId);\n          $(this).trigger('i.pointerdown', ev);\n        })\n        .on('pointerup', (ev) => {\n          ev.preventDefault();\n          if (ev.pointerId === trackedPointerId) {\n            trackedPointerId = null;\n            $(this).trigger('i.pointerup', ev);\n            $(this).trigger('i.pointerclick', ev);\n          }\n        });\n    });\n  };\n}(jQuery));\n","function setupKeyControls(robot) {\n  const keyMap = {\n    ArrowLeft: () => { robot.go('w'); },\n    ArrowRight: () => { robot.go('e'); },\n    ArrowUp: () => { robot.go('n'); },\n    ArrowDown: () => { robot.go('s'); },\n  };\n\n  window.addEventListener('keydown', (ev) => {\n    if (keyMap[ev.code]) {\n      keyMap[ev.code]();\n      ev.preventDefault();\n    }\n  });\n}\n\nmodule.exports = setupKeyControls;\n","/**\n * This class provides helper functions to work with 2D arrays.\n * (arrays of arrays)\n */\nclass Array2D {\n  /**\n   * Create and initialize a 2D Array\n   *\n   * @param width {number} Number of columns (inner arrays size)\n   * @param height {number} Number of rows (outer array size)\n   * @param initValue {any} Initial value for inner array items\n   * @return {any[][]}\n   */\n  static create(width, height, initValue = 0) {\n    const rows = [];\n    for (let i = 0; i < height; i += 1) {\n      const row = [];\n      for (let j = 0; j < width; j += 1) {\n        row[j] = initValue;\n      }\n      rows.push(row);\n    }\n    return rows;\n  }\n\n  /**\n   * Creates a 2D array from a 1D array in cells[y * width + x] format\n   *\n   * @param width {number}\n   * @param height {number}\n   * @param cells {any[]}\n   */\n  static fromFlat(width, height, cells) {\n    const answer = Array2D.create(width, height);\n    for (let x = 0; x < width; x += 1) {\n      for (let y = 0; y < height; y += 1) {\n        answer[y][x] = cells[y * width + x];\n      }\n    }\n    return answer;\n  }\n\n  /**\n   * Returns a 1D array with the flattened contents of the 2D array\n   * @return {*[]}\n   */\n  static flatten(a) {\n    const items = [];\n    for (let y = 0; y < a.length; y += 1) {\n      for (let x = 0; x < a[y].length; x += 1) {\n        items.push(a[y][x]);\n      }\n    }\n    return items;\n  }\n\n  /**\n   * Returns true if the argument is an array of arrays and every inner\n   * array has the same length.\n   *\n   * @param a {any[][]}\n   * @return {boolean}\n   */\n  static isValid(a) {\n    return Array.isArray(a) && a.length > 0\n      && Array.isArray(a[0]) && a[0].length > 0\n      && a.every(row => row.length === a[0].length);\n  }\n\n  /**\n   * Returns the size of a 2D array as [width, height]\n   *\n   * Assumes the argument is a valid 2D Array.\n   *\n   * @param a {any[][]}\n   * @return {number[]}\n   */\n  static size(a) {\n    return [a[0].length, a.length];\n  }\n\n  /**\n   * Clones the 2D Array.\n   *\n   * Assumes the argument is a valid 2D Array. The items in the 2D\n   * array are not deep copied, only the outer and inner arrays.\n   *\n   * @param a {any[][]}\n   * @return {any[][]}\n   */\n  static clone(a) {\n    return a.map(row => Array.from(row));\n  }\n\n  /**\n   * Copies the contents of a 2D array into another.\n   *\n   * Assumes the arguments are valid 2D arrays with the same size.\n   *\n   * @param src {any[][]}\n   * @param dest {any[][]}\n   */\n  static copy(src, dest) {\n    for (let i = 0; i < src.length; i += 1) {\n      for (let j = 0; j < src[i].length; j += 1) {\n        // eslint-disable-next-line no-param-reassign\n        dest[i][j] = src[i][j];\n      }\n    }\n  }\n\n  /**\n   * Sets all cells to a fixed value\n   *\n   * @param a {any[][]}\n   * @param value {any}\n   */\n  static setAll(a, value) {\n    for (let y = 0; y < a.length; y += 1) {\n      for (let x = 0; x < a[y].length; x += 1) {\n        a[y][x] = value;\n      }\n    }\n  }\n\n  /**\n   * Returns all items as a flat array of [x, y, value] arrays.\n   *\n   * @param a {any[][]}\n   * @return {[number, number, any][]}\n   */\n  static items(a) {\n    const items = [];\n    for (let y = 0; y < a.length; y += 1) {\n      for (let x = 0; x < a[y].length; x += 1) {\n        items.push([x, y, a[y][x]]);\n      }\n    }\n    return items;\n  }\n\n  /**\n   * @callback coordinateCallback\n   * @param x {number}\n   * @param y {number}\n   * @return {any}\n   */\n  /**\n   * Fills the items in the array with the result of a callback\n   *\n   * @param a {any[][]}\n   * @param callback {coordinateCallback}\n   */\n  static fill(a, callback) {\n    for (let y = 0; y < a.length; y += 1) {\n      for (let x = 0; x < a[y].length; x += 1) {\n        a[y][x] = callback(x, y);\n      }\n    }\n  }\n\n  /**\n   * @callback reduceCallback\n   * @param accumulator {any}\n   * @param currentValue {any}\n   * @param x {number}\n   * @param y {number}\n   */\n  /**\n   *\n   * @param a {any[][]}\n   * @param callback {reduceCallback}\n   * @param initialValue {any}\n   * @return {any}\n   */\n  static reduce(a, callback, initialValue) {\n    let accumulator = initialValue;\n    for (let y = 0; y < a.length; y += 1) {\n      for (let x = 0; x < a[y].length; x += 1) {\n        accumulator = callback(accumulator, a[y][x], x, y);\n      }\n    }\n    return accumulator;\n  }\n\n  static forEach(a, callback) {\n    for (let y = 0; y < a.length; y += 1) {\n      for (let x = 0; x < a[y].length; x += 1) {\n        callback(a[y][x], x, y);\n      }\n    }\n  }\n\n  static zip(a, b, callback) {\n    const yMax = Math.min(a.length, b.length);\n    for (let y = 0; y < yMax; y += 1) {\n      const xMax = Math.min(a[y].length, b[y].length);\n      for (let x = 0; x < xMax; x += 1) {\n        callback(a[y][x], b[y][x], x, y);\n      }\n    }\n  }\n}\n\nmodule.exports = Array2D;\n","function showFatalError(text, error) {\n  $('<div></div>')\n    .addClass('fatal-error')\n    .append($('<div></div>')\n      .addClass('fatal-error-text')\n      .html(text))\n    .append($('<div></div>')\n      .addClass('fatal-error-details')\n      .html(error.message))\n    .appendTo('body');\n\n  $('html').addClass('with-fatal-error');\n}\n\nmodule.exports = showFatalError;\n","function shuffleArray(unshuffled) {\n  return unshuffled\n    .map(value => ({ value, sort: Math.random() }))\n    .sort((a, b) => a.sort - b.sort)\n    .map(({ value }) => value);\n}\n\nmodule.exports = { shuffleArray };\n","/* globals PIXI */\nconst MazeView = require('./maze-view.js');\n\nconst ARROW_TEXTURE_SCALE = 0.25;\n\nclass MazeViewPolicyOverlay {\n  constructor(mazeView, ai, arrowTexture) {\n    this.view = mazeView;\n    this.ai = ai;\n    this.arrowTexture = arrowTexture;\n    this.fontSize = 22;\n    this.padding = 18;\n\n    this.visible = false;\n    this.displayObject = new PIXI.Container();\n    this.displayObject.visible = this.visible;\n\n    this.backgrounds = [];\n    this.arrows = [];\n    this.texts = [];\n\n    this.createBackgrounds();\n    this.createArrows();\n    this.createTexts();\n\n    this.update();\n\n    this.ai.events.on('update', () => {\n      this.update();\n    });\n\n    this.ai.robot.maze.map.events.on('update', () => {\n      this.update();\n    });\n  }\n\n  toggle() {\n    if (this.visible) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n\n  show() {\n    this.visible = true;\n    this.displayObject.visible = true;\n  }\n\n  hide() {\n    this.visible = false;\n    this.displayObject.visible = false;\n  }\n\n  createBackground(x, y) {\n    const background = new PIXI.Graphics();\n\n    background\n      .clear()\n      .beginFill(0xffffff, 0.75)\n      .drawRect(0, 0, MazeView.TILE_SIZE, MazeView.TILE_SIZE)\n      .endFill();\n\n    background.x = MazeView.TILE_SIZE * x;\n    background.y = MazeView.TILE_SIZE * y;\n\n    this.displayObject.addChild(background);\n    return background;\n  }\n\n  createBackgrounds() {\n    const { height, width } = this.view.maze.map;\n\n    for (let y = 0; y < height; y += 1) {\n      this.backgrounds[y] = new Array(width);\n      for (let x = 0; x < width; x += 1) {\n        this.backgrounds[y][x] = this.createBackground(x, y);\n      }\n    }\n  }\n\n  createArrow(x, y, rotation) {\n    const sprite = new PIXI.Sprite();\n    sprite.texture = this.arrowTexture;\n    sprite.roundPixels = true;\n    sprite.width = MazeView.TILE_SIZE * ARROW_TEXTURE_SCALE;\n    sprite.height = MazeView.TILE_SIZE * ARROW_TEXTURE_SCALE;\n    sprite.anchor.set(0.5, 1);\n\n    sprite.x = Math.round(MazeView.TILE_SIZE * (x + 0.5));\n    sprite.y = Math.round(MazeView.TILE_SIZE * (y + 0.35));\n    sprite.rotation = rotation;\n\n    this.displayObject.addChild(sprite);\n\n    return sprite;\n  }\n\n  createArrows() {\n    const { height, width } = this.view.maze.map;\n\n    for (let y = 0; y < height; y += 1) {\n      this.arrows[y] = new Array(width);\n      for (let x = 0; x < width; x += 1) {\n        this.arrows[y][x] = {\n          n: this.createArrow(x, y, MazeViewPolicyOverlay.Angles.n),\n          e: this.createArrow(x, y, MazeViewPolicyOverlay.Angles.e),\n          s: this.createArrow(x, y, MazeViewPolicyOverlay.Angles.s),\n          w: this.createArrow(x, y, MazeViewPolicyOverlay.Angles.w),\n        };\n      }\n    }\n  }\n\n  createTexts() {\n    const { height, width } = this.view.maze.map;\n    const options = { fontFamily: 'Arial', fontSize: this.fontSize, align: 'center' };\n\n    for (let y = 0; y < height; y += 1) {\n      this.texts[y] = new Array(width);\n      for (let x = 0; x < width; x += 1) {\n        const text = new PIXI.Text('', options);\n        text.x = MazeView.TILE_SIZE * (x + 0.5) - text.width / 2;\n        text.y = MazeView.TILE_SIZE * (y + 1) - (this.fontSize + this.padding);\n        this.texts[y][x] = text;\n        this.displayObject.addChild(text);\n      }\n    }\n  }\n\n  update() {\n    const { robot } = this.ai;\n    const { maze } = robot;\n\n    for (let y = 0; y < this.arrows.length; y += 1) {\n      for (let x = 0; x < this.arrows[y].length; x += 1) {\n        const background = this.backgrounds[y][x];\n        const arrows = this.arrows[y][x];\n        const text = this.texts[y][x];\n        if (maze.isWalkable(x, y)) {\n          const validActions = Object.entries(this.ai.q[y][x])\n            .filter((([d]) => robot.availableDirectionsAt(x, y).includes(d)));\n          if (validActions.length) {\n            // Get all the actions with the highest Q value\n            const maxQ = Math.max(...validActions.map((([d, q]) => q)));\n            const bestActions = validActions.filter(([, v]) => v === maxQ);\n            const bestActionDirections = bestActions.map(([d]) => d);\n            Object.keys(arrows).forEach((d) => {\n              arrows[d].visible = bestActionDirections.includes(d);\n            });\n            text.text = this.ai.v[y][x].toFixed(2);\n            text.x = MazeView.TILE_SIZE * (x + 0.5) - text.width / 2;\n            background.visible = true;\n            text.visible = true;\n          } else {\n            background.visible = false;\n            text.visible = false;\n            Object.keys(arrows).forEach((d) => {\n              arrows[d].visible = false;\n            });\n          }\n        } else {\n          background.visible = false;\n          text.visible = false;\n          Object.keys(arrows).forEach((d) => {\n            arrows[d].visible = false;\n          });\n        }\n      }\n    }\n  }\n}\n\nMazeViewPolicyOverlay.Angles = {\n  n: 0,\n  e: Math.PI * 0.5,\n  s: Math.PI,\n  w: Math.PI * 1.5,\n};\n\nmodule.exports = MazeViewPolicyOverlay;\n","/* globals PIXI */\nconst MazeView = require('./maze-view.js');\n\nclass MazeViewQvalueOverlay {\n  constructor(mazeView, ai) {\n    this.view = mazeView;\n    this.ai = ai;\n    this.visible = false;\n    this.displayObject = new PIXI.Container();\n    this.displayObject.visible = this.visible;\n\n    this.fontSize = 18;\n    this.padding = 2;\n\n    this.texts = [];\n    this.createTexts();\n    this.update();\n\n    this.ai.events.on('update', (x, y, direction) => {\n      this.update();\n    });\n\n    this.ai.robot.maze.map.events.on('update', () => {\n      this.update();\n    });\n  }\n\n  toggle() {\n    if (this.visible) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n\n  show() {\n    this.visible = true;\n    this.displayObject.visible = true;\n  }\n\n  hide() {\n    this.visible = false;\n    this.displayObject.visible = false;\n  }\n\n  createTexts() {\n    const { height, width } = this.view.maze.map;\n    const options = { fontFamily: 'Arial', fontSize: this.fontSize };\n\n    const createText = (align) => {\n      const text = new PIXI.Text('', Object.assign({}, options, { align }));\n      this.displayObject.addChild(text);\n      return text;\n    };\n\n    for (let j = 0; j < height; j += 1) {\n      this.texts[j] = new Array(width);\n      for (let i = 0; i < width; i += 1) {\n        this.texts[j][i] = {\n          n: createText('center'),\n          s: createText('center'),\n          e: createText('right'),\n          w: createText('left'),\n        };\n      }\n    }\n  }\n\n  positionText(text, x, y, direction) {\n    switch (direction) {\n      case 'n':\n        text.x = MazeView.TILE_SIZE * (x + 0.5) - text.width / 2;\n        text.y = MazeView.TILE_SIZE * y + this.padding;\n        break;\n      case 's':\n        text.x = MazeView.TILE_SIZE * (x + 0.5) - text.width / 2;\n        text.y = MazeView.TILE_SIZE * (y + 1) - (this.fontSize + this.padding);\n        break;\n      case 'e':\n        text.x = MazeView.TILE_SIZE * (x + 1) - (text.width + this.padding);\n        text.y = MazeView.TILE_SIZE * (y + 0.5) - (this.fontSize * 0.5);\n        break;\n      case 'w':\n        text.x = MazeView.TILE_SIZE * x + this.padding;\n        text.y = MazeView.TILE_SIZE * (y + 0.5) - (this.fontSize * 0.5);\n        break;\n      default:\n        break;\n    }\n  }\n\n  update() {\n    const { robot } = this.ai;\n    const { maze } = robot;\n\n    for (let y = 0; y < this.texts.length; y += 1) {\n      for (let x = 0; x < this.texts[y].length; x += 1) {\n        const texts = this.texts[y][x];\n        if (maze.isWalkable(x, y)) {\n          const validActions = robot.availableDirectionsAt(x, y);\n\n          Object.keys(texts).forEach((direction) => {\n            if (validActions.includes(direction)) {\n              const textObject = texts[direction];\n              textObject.visible = true;\n              textObject.text = this.ai.q[y][x][direction].toFixed(2);\n              this.positionText(textObject, x, y, direction);\n            } else {\n              texts[direction].visible = false;\n            }\n          });\n        } else {\n          Object.keys(texts).forEach((direction) => {\n            texts[direction].visible = false;\n          });\n        }\n      }\n    }\n  }\n}\n\nmodule.exports = MazeViewQvalueOverlay;\n","/* globals PIXI */\nconst EventEmitter = require('events');\nconst PencilCursor = require('../../static/fa/pencil-alt-solid.svg');\nconst RobotView = require('./robot-view');\nconst Array2D = require('./lib/array-2d');\n\nclass MazeView {\n  constructor(maze, config, textures = { }, interactive = false) {\n    this.displayObject = new PIXI.Container();\n    this.tileLayer = new PIXI.Container();\n    this.textureLayer = new PIXI.Container();\n    this.itemLayer = new PIXI.Container();\n    this.overlayLayer = new PIXI.Container();\n    this.robotLayer = new PIXI.Container();\n    this.displayObject.addChild(this.tileLayer);\n    this.displayObject.addChild(this.textureLayer);\n    this.displayObject.addChild(this.itemLayer);\n    this.displayObject.addChild(this.overlayLayer);\n    this.displayObject.addChild(this.robotLayer);\n\n    this.maze = maze;\n    this.config = config;\n    this.textures = textures;\n    this.events = new EventEmitter();\n\n    this.floorTiles = Array2D.create(maze.map.width, maze.map.height, null);\n    this.floorTextures = Array2D.create(maze.map.width, maze.map.height, null);\n    this.visited = Array2D.create(maze.map.width, maze.map.height, false);\n\n    this.robotView = null;\n\n    const pointers = {};\n\n    this.maze.map.allCells().forEach(([x, y]) => {\n      const floorTile = new PIXI.Graphics();\n      floorTile.x = x * MazeView.TILE_SIZE;\n      floorTile.y = y * MazeView.TILE_SIZE;\n\n      if (interactive) {\n        floorTile.interactive = true;\n        floorTile.on('pointerdown', (ev) => {\n          pointers[ev.data.pointerId] = { lastTile: { x, y } };\n          this.events.emit('action', [x, y], {\n            shiftKey: ev.data.originalEvent.shiftKey,\n          });\n        });\n        floorTile.cursor = `url(${PencilCursor}) 0 20, auto`;\n      }\n      this.floorTiles[y][x] = floorTile;\n\n      const floorTexture = new PIXI.Sprite();\n      floorTexture.x = x * MazeView.TILE_SIZE;\n      floorTexture.y = y * MazeView.TILE_SIZE;\n      floorTexture.width = MazeView.TILE_SIZE;\n      floorTexture.height = MazeView.TILE_SIZE;\n      floorTexture.roundPixels = true;\n      this.floorTextures[y][x] = floorTexture;\n\n      this.renderCell(x, y);\n    });\n\n    if (interactive) {\n      this.tileLayer.interactive = true;\n      this.tileLayer.on('pointermove', (ev) => {\n        if (pointers[ev.data.pointerId] !== undefined) {\n          const tileCoords = this.getCoordsAtPosition(ev.data.global);\n          if (pointers[ev.data.pointerId].lastTile !== tileCoords) {\n            if (tileCoords) {\n              this.events.emit('action', [tileCoords.x, tileCoords.y], {\n                shiftKey: ev.data.originalEvent.shiftKey,\n              });\n            }\n            pointers[ev.data.pointerId].lastTile = tileCoords;\n          }\n        }\n      });\n\n      const onEndPointer = (ev) => {\n        delete pointers[ev.data.pointerId];\n      };\n\n      this.tileLayer.on('pointerup', onEndPointer);\n      this.tileLayer.on('pointerupoutside', onEndPointer);\n      this.tileLayer.on('pointercancel', onEndPointer);\n    }\n\n    this.tileLayer.addChild(...Array2D.flatten(this.floorTiles));\n    this.textureLayer.addChild(...Array2D.flatten(this.floorTextures));\n\n    this.maze.map.events.on('update', this.handleMazeUpdate.bind(this));\n    this.handleMazeUpdate(this.maze.map.allCells());\n\n    const { robot } = this.maze;\n    this.robotView = new RobotView(robot, MazeView.TILE_SIZE, this.textures.robot);\n\n    robot.events.on('move', (direction, x1, y1, x2, y2, reward, tileType) => {\n      if (direction) {\n        this.robotView.moveTo(x2, y2);\n      } else {\n        this.robotView.teleport(x2, y2);\n      }\n      const reaction = this.config.tileTypes[this.maze.map.get(x2, y2)].react;\n      if (reaction === 'always' || (reaction === 'once' && this.visited[y2][x2] === false)) {\n        this.robotView.react(tileType, x2, y2);\n      }\n      this.visited[y2][x2] = true;\n      this.renderCell(x2, y2);\n    });\n\n    robot.events.on('moveFailed', () => {\n      this.robotView.nop();\n    });\n\n    robot.events.on('exited', () => {\n      this.robotView.exitMaze();\n    });\n\n    robot.events.on('reset', () => {\n      this.robotView.reset();\n    });\n\n    this.robotView.events.on('resetEnd', () => {\n      this.maze.reset();\n    });\n\n    this.itemSprites = {};\n    this.maze.items.forEach((item) => { this.createItemSprite(item); });\n    this.maze.events.on('itemPlaced', (item) => {\n      this.createItemSprite(item);\n    });\n\n    this.maze.events.on('itemRemoved', (item) => {\n      this.removeItemSprite(item);\n    });\n\n    this.maze.events.on('itemPicked', (item) => {\n      this.handleItemPicked(item);\n    });\n\n    this.maze.events.on('itemReset', (item) => {\n      this.handleItemReset(item);\n    });\n\n    this.maze.events.on('reset', () => {\n      Array2D.setAll(this.visited, false);\n      this.handleMazeUpdate(this.maze.map.allCells());\n    });\n\n    this.robotLayer.addChild(this.robotView.sprite);\n  }\n\n  createItemSprite(item) {\n    const textureScale = 0.5;\n    const sprite = new PIXI.Sprite();\n    sprite.x = item.x * MazeView.TILE_SIZE + MazeView.TILE_SIZE * 0.25;\n    sprite.y = item.y * MazeView.TILE_SIZE + MazeView.TILE_SIZE * 0.25;\n    sprite.width = MazeView.TILE_SIZE * textureScale;\n    sprite.height = MazeView.TILE_SIZE * textureScale;\n    sprite.roundPixels = true;\n    sprite.texture = this.textures[`item-${item.type}`];\n\n    this.itemSprites[item.id] = sprite;\n\n    this.itemLayer.addChild(sprite);\n  }\n\n  removeItemSprite(item) {\n    if (this.itemSprites[item.id]) {\n      const sprite = this.itemSprites[item.id];\n      this.itemLayer.removeChild(sprite);\n      sprite.destroy();\n      delete this.itemSprites[item.id];\n    }\n  }\n\n  handleItemPicked(item) {\n    if (this.itemSprites[item.id]) {\n      this.itemSprites[item.id].visible = false;\n    }\n  }\n\n  handleItemReset(item) {\n    if (this.itemSprites[item.id]) {\n      this.itemSprites[item.id].visible = true;\n    }\n  }\n\n  getFloorTile(x, y) {\n    return this.floorTiles[y][x];\n  }\n\n  getFloorTexture(x, y) {\n    return this.floorTextures[y][x];\n  }\n\n  getCoordsAtPosition(globalPoint) {\n    if (this.origin === undefined) {\n      this.origin = new PIXI.Point();\n    }\n    this.origin = this.displayObject.getGlobalPosition(this.origin, false);\n\n    const x = Math.floor((globalPoint.x - this.origin.x)\n      / this.displayObject.scale.x / MazeView.TILE_SIZE);\n    const y = Math.floor((globalPoint.y - this.origin.y)\n      / this.displayObject.scale.y / MazeView.TILE_SIZE);\n\n    return (x >= 0 && x < this.maze.map.width && y >= 0 && y < this.maze.map.height)\n      ? { x, y } : null;\n  }\n\n  renderCell(i, j) {\n    if (this.maze.startPosition[0] === i && this.maze.startPosition[1] === j) {\n      this.renderStartCell(i, j);\n    } else {\n      this.renderFloor(i, j);\n    }\n  }\n\n  renderStartCell(i, j) {\n    this.getFloorTile(i, j)\n      .clear()\n      .lineStyle(10, 0x99ff99, 1)\n      .beginFill(0xffffff)\n      .drawRect(5, 5, MazeView.TILE_SIZE - 10, MazeView.TILE_SIZE - 10)\n      .endFill();\n  }\n\n  renderFloor(i, j) {\n    const tileTypeId = this.maze.map.get(i, j);\n    const tileType = this.config.tileTypes[tileTypeId] || null;\n    this.getFloorTile(i, j)\n      .clear()\n      .lineStyle(2, 0x0, 1)\n      .beginFill(tileType ? Number(`0x${tileType.color.substr(1)}`) : 0, 1)\n      .drawRect(0, 0, MazeView.TILE_SIZE, MazeView.TILE_SIZE)\n      .endFill();\n\n    if (tileType.texture !== undefined) {\n      this.getFloorTexture(i, j).texture = this.visited[j][i] && tileType.textureVisited\n        ? this.textures[`tile-${tileTypeId}-visited`] : this.textures[`tile-${tileTypeId}`];\n      this.getFloorTexture(i, j).visible = true;\n    } else {\n      this.getFloorTexture(i, j).visible = false;\n    }\n  }\n\n  handleMazeUpdate(updates) {\n    updates.forEach(([i, j]) => {\n      this.visited[j][i] = false;\n      this.renderCell(i, j);\n    });\n  }\n\n  addOverlay(displayObject) {\n    this.overlayLayer.addChild(displayObject);\n    this.overlayLayer.sortChildren();\n  }\n\n  animate(time) {\n    this.robotView.animate(time);\n  }\n\n  getRobotView() {\n    return this.robotView;\n  }\n}\n\nMazeView.TILE_SIZE = 120;\n\nmodule.exports = MazeView;\n","const EventEmitter = require('events');\nconst Grid = require('./grid.js');\nconst Array2D = require('./lib/array-2d.js');\n\nclass Maze {\n  constructor(width, height, cells = null, config) {\n    this.map = new Grid(width, height, cells);\n    this.config = config;\n    this.robot = null;\n    this.items = [];\n    this.lastItemId = 0;\n    this.startPosition = [0, height - 1];\n\n    this.events = new EventEmitter();\n  }\n\n  toJSON() {\n    const { map } = this;\n    return {\n      map: map.toJSON(),\n      items: this.items.map(({ type, x, y }) => ({ type, x, y })),\n    };\n  }\n\n  static fromJSON(jsonObject) {\n    const { map, items } = jsonObject;\n    const { width, height } = map;\n    const maze = new Maze(width, height, Array2D.clone(map.cells));\n    (items || []).forEach(({ type, x, y }) => {\n      maze.placeItem(type, x, y);\n    });\n    return maze;\n  }\n\n  copy(maze) {\n    this.map.copy(maze.map);\n    this.clearItems();\n    (maze.items || []).forEach(({ type, x, y }) => {\n      this.placeItem(type, x, y);\n    });\n    this.lastItemId = maze.lastItemId;\n  }\n\n  addRobot(robot) {\n    if (this.robot) {\n      throw new Error('Robot already exists');\n    }\n    this.robot = robot;\n    robot.maze = this;\n    // Put the robot in the lower left corner\n    const [startX, startY] = this.startPosition;\n    robot.x = startX;\n    robot.y = startY;\n  }\n\n  placeItem(type, x, y, erasable=true) {\n    this.removeItem(x, y);\n    this.lastItemId += 1;\n    const newItem = {\n      id: this.lastItemId,\n      type,\n      x,\n      y,\n      picked: false,\n      erasable,\n    };\n    this.items.push(newItem);\n    this.events.emit('itemPlaced', newItem);\n  }\n\n  getTileType(x, y) {\n    return this.config.tileTypes\n      && this.config.tileTypes[this.map.get(x, y)]\n      && this.config.tileTypes[this.map.get(x, y)].type;\n  }\n\n  getItem(x, y) {\n    const found = this.items.find(item => item.x === x && item.y === y);\n    return found;\n  }\n\n  removeItem(x, y) {\n    const item = this.getItem(x, y);\n    if (item) {\n      this.events.emit('itemRemoved', item);\n      this.items = this.items.filter(any => any.id !== item.id);\n    }\n  }\n\n  pickItem(x, y) {\n    const item = this.getItem(x, y);\n    if (item && !item.picked) {\n      this.events.emit('itemPicked', item);\n      item.picked = true;\n      return item;\n    }\n    return null;\n  }\n\n  clearItems() {\n    this.items.forEach((item) => {\n      this.events.emit('itemRemoved', item);\n    });\n    this.items = [];\n  }\n\n  isWalkable(x, y) {\n    return this.config.tileTypes\n      && this.config.tileTypes[this.map.get(x, y)]\n      && this.config.tileTypes[this.map.get(x, y)].walkable;\n  }\n\n  isExit(x, y) {\n    return this.config.tileTypes\n      && this.config.tileTypes[this.map.get(x, y)]\n      && this.config.tileTypes[this.map.get(x, y)].exit;\n  }\n\n  reset() {\n    this.items.forEach((item) => {\n      item.picked = false;\n      this.events.emit('itemReset', item);\n    });\n    this.events.emit('reset');\n  }\n\n  getItemReward(item) {\n    return (this.config.items[item.type] && this.config.items[item.type].reward) || 0;\n  }\n\n  getPositionReward(x, y) {\n    return (\n      this.config.tileTypes[this.map.get(x, y)]\n      && this.config.tileTypes[this.map.get(x, y)].reward\n    ) || 0;\n  }\n}\n\nmodule.exports = Maze;\n","class Modal {\n  /**\n   * @param {object} options\n   *  Modal dialog options\n   * @param {string} options.title\n   *  Dialog title.\n   * @param {string} options.size\n   *  Modal size (lg or sm).\n   * @param {boolean} options.showCloseButton\n   *  Shows a close button in the dialog if true.\n   * @param {boolean} options.showFooter\n   *  Adds a footer area to the dialog if true.\n   */\n  constructor(options) {\n    this.returnValue = null;\n\n    this.$element = $('<div class=\"modal fade\"></div>');\n    this.$dialog = $('<div class=\"modal-dialog\"></div>').appendTo(this.$element);\n    this.$content = $('<div class=\"modal-content\"></div>').appendTo(this.$dialog);\n    this.$header = $('<div class=\"modal-header\"></div>').appendTo(this.$content);\n    this.$body = $('<div class=\"modal-body\"></div>').appendTo(this.$content);\n    this.$footer = $('<div class=\"modal-footer\"></div>').appendTo(this.$content);\n\n    this.$closeButton = $('<button type=\"button\" class=\"close\" data-dismiss=\"modal\">')\n      .append($('<span>&times;</span>'))\n      .appendTo(this.$header);\n\n    if (options.title) {\n      $('<h5 class=\"modal-title\"></h5>')\n        .html(options.title)\n        .prependTo(this.$header);\n    }\n    if (options.size) {\n      this.$dialog.addClass(`modal-${options.size}`);\n    }\n\n    if (options.showCloseButton === false) {\n      this.$closeButton.remove();\n    }\n    if (options.showFooter === false) {\n      this.$footer.remove();\n    }\n  }\n\n  async show() {\n    return new Promise((resolve) => {\n      $('body').append(this.$element);\n      this.$element.modal();\n      this.$element.on('hidden.bs.modal', () => {\n        this.$element.remove();\n        resolve(this.returnValue);\n      });\n    });\n  }\n\n  hide(returnValue) {\n    this.returnValue = returnValue;\n    this.$element.modal('hide');\n  }\n}\n\nmodule.exports = Modal;\n","const EventEmitter = require('events');\nconst Robot = require('./robot.js');\nconst { shuffleArray } = require('./lib/shuffle');\n\nclass QLearningAI {\n  constructor(robot) {\n    this.robot = robot;\n    // Q-table: Q^*(x, y, a) -> Q-value\n    this.q = this.initQ();\n    // Estimation of the value function: V^*(x, y) -> v\n    this.v = this.initV();\n    // A table where we keep the last reward received: R^*(x, y) -> r\n    this.r = this.initR();\n\n    this.learningRate = 1;\n    this.discountFactor = 1;\n    this.exploreRate = 0.2;\n    this.learning = true;\n\n    this.events = new EventEmitter();\n\n    this.robot.events.on('move', (direction, x1, y1, x2, y2, reward) => {\n      if (this.learning && direction !== null) {\n        this.update(direction, x1, y1, x2, y2, reward);\n      }\n    });\n  }\n\n  initQ() {\n    const { height, width } = this.robot.maze.map;\n    const table = new Array(height);\n\n    for (let j = 0; j < height; j += 1) {\n      table[j] = new Array(width);\n      for (let i = 0; i < width; i += 1) {\n        table[j][i] = Object.fromEntries(\n          Object.keys(Robot.Directions).map(direction => [direction, 0])\n        );\n      }\n    }\n\n    return table;\n  }\n\n  initV() {\n    const { height, width } = this.robot.maze.map;\n    const table = new Array(height);\n    for (let j = 0; j < height; j += 1) {\n      table[j] = new Array(width);\n      for (let i = 0; i < width; i += 1) {\n        table[j][i] = 0;\n      }\n    }\n\n    return table;\n  }\n\n  initR() {\n    return this.initV();\n  }\n\n  clear() {\n    this.q = this.initQ();\n    this.v = this.initV();\n    this.r = this.initR();\n    this.events.emit('update');\n  }\n\n  greedyPolicy() {\n    const { x, y } = this.robot;\n    const directions = this.robot.availableDirections();\n    const dirValuePairs = Object.entries(this.q[y][x])\n      .filter(([direction]) => directions.includes(direction));\n    if (dirValuePairs.length > 0) {\n      return shuffleArray(dirValuePairs).sort(([, valA], [, valB]) => valA - valB)\n        .pop()[0];\n    }\n    return null;\n  }\n\n  randomPolicy() {\n    const directions = this.robot.availableDirections();\n    if (directions.length) {\n      return directions[Math.floor(Math.random() * directions.length)];\n    }\n    return null;\n  }\n\n  epsilonGreedyPolicy() {\n    if (Math.random() >= this.exploreRate) {\n      return this.greedyPolicy();\n    }\n    return this.randomPolicy();\n  }\n\n  step() {\n    const direction = this.epsilonGreedyPolicy();\n    if (direction) {\n      this.robot.go(direction);\n    } else {\n      this.robot.failMove();\n    }\n  }\n\n  maxQ(x, y) {\n    const directions = this.robot.availableDirectionsAt(x, y);\n    return directions.length > 0\n      ? Math.max(...Object.entries(this.q[y][x])\n        .filter(([direction]) => directions.includes(direction))\n        .map(([, value]) => value))\n      : 0;\n  }\n\n  minQ(x, y) {\n    const directions = this.robot.availableDirectionsAt(x, y);\n    return directions.length > 0\n      ? Math.min(...Object.entries(this.q[y][x])\n        .filter(([direction]) => directions.includes(direction))\n        .map(([, value]) => value))\n      : 0;\n  }\n\n  qUpperBound() {\n    let bound = 0;\n    for (let y = 0; y !== this.q.length; y += 1) {\n      for (let x = 0; x !== this.q[y].length; x += 1) {\n        bound = Math.max(bound, this.maxQ(x, y));\n      }\n    }\n    return bound;\n  }\n\n  qLowerBound() {\n    let bound = 0;\n    for (let y = 0; y !== this.q.length; y += 1) {\n      for (let x = 0; x !== this.q[y].length; x += 1) {\n        bound = Math.min(bound, this.minQ(x, y));\n      }\n    }\n    return bound;\n  }\n\n  update(direction, x1, y1, x2, y2, reward) {\n    this.q[y1][x1][direction] += this.learningRate\n      * (reward + this.discountFactor * this.maxQ(x2, y2) - this.q[y1][x1][direction]);\n\n    this.r[y2][x2] = reward;\n    // According to Tom Mitchell's book \"Machine Learning\" (1997), ch.13\n    // V^*(s) = max_a Q^*(s, a)\n    // See: https://datascience.stackexchange.com/a/16724\n    // this.v[y1][x1] = this.maxQ(x1, y1)\n    // However, the value function approximates what the expected return is from being in a\n    // state and following a policy. In the above formula, \"being\" in a state doesn't include\n    // the reward (or penalty) we received when we moved to said state.\n    // So, for a more \"illustrative\" value of how good or bad a state is, we could add the reward.\n    this.v[y1][x1] = this.maxQ(x1, y1) + this.r[y1][x1];\n    // The problem with this formula is that V no longer matches the policy we're following.\n    // There are cases where Q values for two actions are the same, thus the policy can choose\n    // either at random (which we display with a two-pointed arrow), but the V for the two\n    // states is different. This is maybe not wrong, but can appear counter-intuitive.\n\n    this.events.emit('update');\n  }\n}\n\nmodule.exports = QLearningAI;\n","class ReactionController {\n  constructor(container, config) {\n    this.container = container;\n    this.config = config;\n\n    this.reactions = Object.fromEntries(\n      Object.entries(this.config.tileTypes)\n        .filter(([, props]) => props.reaction)\n        .map(([, props]) => [props.type, props.reaction])\n    );\n  }\n\n  launchReaction(type, x, y) {\n    if (this.reactions[type]) {\n      const reaction = $('<div></div>')\n        .addClass(['reaction', `reaction-${type}`])\n        .css({\n          left: x,\n          top: y,\n          backgroundImage: `url(${this.reactions[type]})`,\n        })\n        .appendTo(this.container);\n      setTimeout(() => {\n        reaction.addClass('fading');\n      }, 0);\n      setTimeout(() => {\n        reaction.remove();\n      }, 1000);\n    }\n  }\n}\n\nmodule.exports = ReactionController;\n","class RewardBar {\n  constructor(robotView) {\n    this.robotView = robotView;\n\n    this.$element = $('<div></div>')\n      .attr('id', 'rewards-bar')\n      .addClass('reward-bar');\n\n    this.progress = 0;\n    this.$bar = $('<div></div>')\n      .addClass('progress-bar')\n      .attr({\n        role: 'progressbar',\n      });\n    this.$barContainer = $('<div></div>')\n      .addClass('bar-container')\n      .append($('<div></div>')\n        .addClass('label')\n        .attr({\n          'data-i18n-text': 'rewards-bar-label',\n        }))\n      .append($('<div></div>')\n        .addClass('progress')\n        .append(this.$bar))\n      .appendTo(this.$element);\n\n    this.robotView.events.on('resetEnd', () => {\n      this.setProgress(0, true);\n    });\n    this.setProgress(0);\n\n    this.robotView.robot.events.on('move', (direction, oldX, oldY, x, y, reward, tileType) => {\n      if (tileType === 'candy') {\n        this.setProgress(Math.min(this.getProgress() + 20, 100));\n      } else if (tileType === 'lava') {\n        this.setProgress(Math.max(this.getProgress() - 15, 0));\n      } else if (tileType === 'exit') {\n        this.setProgress(100);\n      }\n    });\n  }\n\n\n  getProgress() {\n    return this.progress;\n  }\n\n  setProgress(percentage, isReset = false) {\n    if (percentage > this.progress || isReset) {\n      this.$barContainer.removeClass('decrease');\n    }\n    if (percentage < this.progress && !isReset) {\n      this.$barContainer.addClass('decrease');\n    }\n\n    this.progress = percentage;\n    this.$bar.css('width', `${percentage}%`);\n  }\n}\n\nmodule.exports = RewardBar;\n","/* globals PIXI */\nconst EventEmitter = require('events');\n\nclass RobotView {\n  constructor(robot, tileSize, texture) {\n    this.robot = robot;\n    this.tileSize = tileSize;\n    this.events = new EventEmitter();\n\n    this.speed = RobotView.Speed.DEFAULT;\n\n    this.sprite = RobotView.createSprite(tileSize, texture);\n    this.sprite.x = this.robot.x * this.tileSize;\n    this.sprite.y = this.robot.y * this.tileSize;\n    this.defaultScale = {\n      x: this.sprite.scale.x,\n      y: this.sprite.scale.y,\n    };\n\n    this.animationQueue = [];\n  }\n\n  static createSprite(tileSize, texture) {\n    const sprite = new PIXI.Sprite();\n    sprite.width = tileSize;\n    sprite.height = tileSize;\n    sprite.roundPixels = true;\n    sprite.texture = texture;\n\n    return sprite;\n  }\n\n  teleport(x, y) {\n    this.animationQueue.push({ type: 'teleport', x, y });\n  }\n\n  moveTo(x, y) {\n    this.animationQueue.push({ type: 'move', x, y });\n  }\n\n  exitMaze() {\n    this.animationQueue.push({ type: 'delay', time: 60 });\n  }\n\n  react(reaction, x, y) {\n    this.animationQueue.push({ type: 'react', reaction, x, y });\n    if (reaction === 'pit') {\n      this.animationQueue.push({ type: 'fall', x, y, time: 30 });\n    }\n  }\n\n  reset() {\n    this.animationQueue.push({ type: 'reset' });\n  }\n\n  nop() {\n    this.animationQueue.push({ type: 'delay', time: 20 });\n  }\n\n  animateReact(time, animation) {\n    animation.done = true;\n  }\n\n  animateTeleport(time, animation) {\n    this.sprite.x = animation.x * this.tileSize;\n    this.sprite.y = animation.y * this.tileSize;\n    animation.done = true;\n  }\n\n  animateMove(time, animation) {\n    const destX = animation.x * this.tileSize;\n    const destY = animation.y * this.tileSize;\n    const deltaX = destX - this.sprite.x;\n    const deltaY = destY - this.sprite.y;\n\n    this.sprite.x += Math.min(Math.abs(deltaX), time * this.speed) * Math.sign(deltaX);\n    this.sprite.y += Math.min(Math.abs(deltaY), time * this.speed) * Math.sign(deltaY);\n\n    if (this.sprite.x === destX && this.sprite.y === destY) {\n      animation.done = true;\n    }\n  }\n\n  animateFall(time, animation) {\n    if (animation.elapsed === undefined) {\n      animation.elapsed = 0;\n    }\n    animation.elapsed += (time) * (this.speed / RobotView.Speed.DEFAULT);\n    const progress = Math.min(animation.elapsed, animation.time) / animation.time;\n    this.sprite.scale.x = 0.8 * (1 - progress) + 0.2;\n    this.sprite.scale.y = 0.8 * (1 - progress) + 0.2;\n    this.sprite.x = animation.x * this.tileSize + (this.tileSize - this.sprite.width) / 2;\n    this.sprite.y = animation.y * this.tileSize + (this.tileSize - this.sprite.height) / 2;\n    this.sprite.alpha = 0.8 * (1 - progress) + 0.2;\n    if (animation.elapsed >= animation.time) {\n      animation.done = true;\n    }\n  }\n\n  animateDelay(time, animation) {\n    if (animation.elapsed === undefined) {\n      animation.elapsed = 0;\n    }\n    animation.elapsed += (time) * (this.speed / RobotView.Speed.DEFAULT);\n    if (animation.elapsed >= animation.time) {\n      animation.done = true;\n    }\n  }\n\n  animateReset(time, animation) {\n    this.sprite.alpha = 1;\n    this.sprite.scale.x = this.defaultScale.x;\n    this.sprite.scale.y = this.defaultScale.y;\n    animation.done = true;\n  }\n\n  animate(time) {\n    if (this.animationQueue.length !== 0) {\n      switch (this.animationQueue[0].type) {\n        case 'move':\n          this.animateMove(time, this.animationQueue[0]);\n          break;\n        case 'teleport':\n          this.animateTeleport(time, this.animationQueue[0]);\n          break;\n        case 'delay':\n          this.animateDelay(time, this.animationQueue[0]);\n          break;\n        case 'react':\n          this.animateReact(time, this.animationQueue[0]);\n          break;\n        case 'fall':\n          this.animateFall(time, this.animationQueue[0]);\n          break;\n        case 'reset':\n          this.animateReset(time, this.animationQueue[0]);\n          break;\n        default:\n          throw new Error(`Unknown animation type: ${this.animationQueue[0].type}`);\n      }\n\n      if (this.animationQueue[0].done) {\n        this.events.emit(`${this.animationQueue[0].type}End`, this.animationQueue[0]);\n        this.animationQueue.shift();\n      }\n\n      if (this.animationQueue.length === 0) {\n        this.events.emit('idle');\n      }\n    }\n  }\n}\n\nRobotView.Speed = {\n  SLOW: 5,\n  DEFAULT: 10,\n  TURBO: 30,\n};\n\nmodule.exports = RobotView;\n","const EventEmitter = require('events');\n\nclass Robot {\n  constructor() {\n    this.maze = null;\n    this.x = 0;\n    this.y = 0;\n    this.score = 0;\n    this.canMove = true;\n\n    this.events = new EventEmitter();\n  }\n\n  setPosition(x, y) {\n    const oldX = this.x;\n    const oldY = this.y;\n    this.x = x;\n    this.y = y;\n    this.onMoved(null, oldX, oldY, x, y);\n  }\n\n  canMoveTo(x, y) {\n    return this.canMove\n      && this.maze\n      && this.maze.map.isValidCoords(x, y)\n      && this.maze.isWalkable(x, y)\n      && this.maze.map.stepDistance(this.x, this.y, x, y) === 1;\n  }\n\n  canMoveFromTo(x1, y1, x2, y2) {\n    return this.maze.map.isValidCoords(x2, y2)\n      && this.maze.isWalkable(x2, y2)\n      && !this.maze.isExit(x1, y1)\n      && this.maze.map.stepDistance(x1, y1, x2, y2) === 1;\n  }\n\n  moveTo(direction, x, y) {\n    if (this.canMoveTo(x, y)) {\n      const oldX = this.x;\n      const oldY = this.y;\n      this.x = x;\n      this.y = y;\n      this.onMoved(direction, oldX, oldY, x, y);\n    } else {\n      this.onMoveFailed(direction, this.x, this.y, x, y);\n    }\n  }\n\n  failMove() {\n    this.onMoveFailed(null, this.x, this.y, null, null);\n  }\n\n  reset() {\n    const [x, y] = this.maze.startPosition;\n    this.resetScore();\n    this.setPosition(x, y);\n\n    this.events.emit('reset');\n  }\n\n  onMoved(direction, oldX, oldY, x, y) {\n    let reward = 0;\n    reward += this.maze.getPositionReward(x, y);\n    const item = this.maze.pickItem(x, y);\n    if (item) {\n      reward += this.maze.getItemReward(item);\n    }\n    this.events.emit('move', direction, oldX, oldY, x, y, reward, this.maze.getTileType(x, y));\n    this.addScore(reward);\n\n    if (this.maze.isExit(x, y)) {\n      this.onExit(x, y);\n    }\n  }\n\n  onMoveFailed(direction, oldX, oldY, x, y) {\n    this.events.emit('moveFailed', direction, oldX, oldY, x, y);\n  }\n\n  onExit(x, y) {\n    this.events.emit('exited', x, y);\n    this.reset();\n  }\n\n  availableDirections() {\n    return Object.keys(Robot.Directions)\n      .filter(dir => this.canMoveTo(\n        this.x + Robot.Directions[dir][0],\n        this.y + Robot.Directions[dir][1]\n      ));\n  }\n\n  availableDirectionsAt(x, y) {\n    return Object.keys(Robot.Directions)\n      .filter(dir => this.canMoveFromTo(\n        x,\n        y,\n        x + Robot.Directions[dir][0],\n        y + Robot.Directions[dir][1]\n      ));\n  }\n\n  go(direction) {\n    const [deltaX, deltaY] = Robot.Directions[direction];\n    this.moveTo(direction, this.x + deltaX, this.y + deltaY);\n  }\n\n  resetScore() {\n    this.score = 0;\n  }\n\n  addScore(amount) {\n    this.score += amount;\n    this.events.emit('scoreChanged', amount, this.score);\n  }\n}\n\nRobot.Directions = {\n  n: [0, -1],\n  s: [0, 1],\n  e: [1, 0],\n  w: [-1, 0],\n};\n\nmodule.exports = Robot;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","require('../sass/default.scss');\nrequire('../sass/exhibit.scss');\nrequire('../sass/embed.scss');\nrequire('./jquery-plugins/jquery.pointerclick');\nconst yaml = require('js-yaml');\nconst CfgLoader = require('./cfg-loader/cfg-loader');\nconst CfgReaderFetch = require('./cfg-loader/cfg-reader-fetch');\nconst I18n = require('./exhibit/i18n');\nconst showFatalError = require('./lib/show-fatal-error');\nconst Maze = require('./maze');\nconst maze1 = require('../../data/mazes/maze1.json');\nconst Robot = require('./robot');\nconst QLearningAI = require('./qlearning-ai');\nconst setupKeyControls = require('./keyboard-controller');\nconst ExhibitMazeEditorPalette = require('./exhibit/exhibit-maze-editor-palette');\nconst MazeEditor = require('./editor/maze-editor');\nconst MazeViewQvalueOverlay = require('./maze-view-qvalue-overlay');\nconst MazeViewPolicyOverlay = require('./maze-view-policy-overlay');\nconst AITrainingView = require('./ai-training-view');\nconst ExploreExploitInteractive = require('./exhibit/interactive-explore-exploit');\nconst RewardsInteractive = require('./exhibit/interactive-rewards');\nconst ReactionController = require('./reaction-controller');\nconst MazeView = require('./maze-view');\nconst training = require('../../data/training/explore-exploit.json');\nconst RobotView = require('./robot-view');\nconst RewardBar = require('./reward-bar');\n\nconst qs = new URLSearchParams(window.location.search);\n\nconst embedConfig = {\n  map: qs.get('map') || 'maze1',\n  training: qs.get('training') || '',\n  tiles: qs.has('tiles') ? qs.get('tiles').split(',') : [],\n  commands: qs.has('cmds') ? qs.get('cmds').split(',') : [],\n  exploreRate: qs.has('xr') ? Number(qs.get('xr')) : 0.2,\n  learningRate: qs.has('lr') ? Number(qs.get('lr')) : 1,\n  speed: qs.has('speed') ? Number(qs.get('speed')) : RobotView.Speed.DEFAULT,\n  mapEditable: qs.get('editmap') === 'true',\n  showQValues: qs.get('showqv') === 'true',\n  showPolicy: qs.get('showpolicy') === 'true',\n  autoRun: qs.get('autorun') === 'true',\n  rewardBar: qs.get('showrewardbar') === 'true',\n};\n\nconst configFiles = [\n  'config/tiles.yml',\n  'config/robot.yml',\n  'config/items.yml',\n  'config/i18n.yml',\n  'config/default-settings.yml',\n];\n\n// Validate the map identifier, which can only contain letters, numbers, and underscores.\nif (embedConfig.map.match(/^[a-zA-Z0-9_-]+$/)) {\n  configFiles.push(`data/mazes/${embedConfig.map}.json`);\n}\n\n// Validate the training identifier, which can only contain letters, numbers, and underscores.\nif (embedConfig.training.match(/^[a-zA-Z0-9_-]+$/)) {\n  configFiles.push(`data/training/${embedConfig.training}.json`);\n}\n\nconst cfgLoader = new CfgLoader(CfgReaderFetch, yaml.load);\ncfgLoader.load(configFiles)\n  .catch((err) => {\n    showFatalError('Error loading configuration', err);\n    console.error('Error loading configuration');\n    console.error(err);\n  })\n  .then(config => I18n.init(config, qs.get('lang') || config.defaultLanguage || 'en')\n    .then(() => config))\n  .then(config => IMAGINARY.i18n.init({\n      queryStringVariable: 'lang',\n      translationsDirectory: 'tr',\n      defaultLanguage: 'en',\n    })\n    .then(() => {\n      const languages = Object.keys(config.languages);\n      return Promise.all(languages.map(code => IMAGINARY.i18n.loadLang(code)));\n    })\n    .then(() => {\n      const defaultLanguage = qs.get('lang') || config.defaultLanguage || 'en';\n      return IMAGINARY.i18n.setLang(defaultLanguage);\n    })\n    .then(() => config)\n    .catch((err) => {\n      showFatalError('Error loading translations', err);\n      console.error('Error loading translations');\n      console.error(err);\n    }))\n  .then((config) => {\n    const app = new PIXI.Application({\n      width: 500,\n      height: 500,\n      backgroundColor: 0xffffff,\n    });\n    // CHAOS\n    const textures = {};\n    textures.robot = null;\n    app.loader.add('robot', config.robot.texture);\n    textures.arrow = null;\n    app.loader.add('arrow', 'static/icons/arrow.svg');\n    Object.entries(config.items).forEach(([id, props]) => {\n      if (props.texture) {\n        const textureId = `item-${id}`;\n        textures[textureId] = null;\n        app.loader.add(textureId, props.texture);\n      }\n    });\n    Object.entries(config.tileTypes).forEach(([id, props]) => {\n      if (props.texture) {\n        const textureId = `tile-${id}`;\n        textures[textureId] = null;\n        app.loader.add(textureId, props.texture);\n      }\n      if (props.textureVisited) {\n        const textureId = `tile-${id}-visited`;\n        textures[textureId] = null;\n        app.loader.add(textureId, props.textureVisited);\n      }\n    });\n\n    app.loader.load((loader, resources) => {\n      Object.keys(textures).forEach((id) => {\n        textures[id] = resources[id].texture;\n      });\n\n      // The ugliest hack\n      IMAGINARY.i18n.strings.de['ai-training-view-slider-exploration-rate-limit-min'] = 'Ausbeuten';\n\n      const maze = Maze.fromJSON({ map: config.map, items: config.mapItems } );\n      maze.config = config;\n      const robot = new Robot();\n      maze.addRobot(robot);\n      const ai = new QLearningAI(maze.robot);\n      setupKeyControls(robot);\n\n      ai.learningRate = embedConfig.learningRate;\n      ai.exploreRate = embedConfig.exploreRate;\n      if (config.q) {\n        ai.q = config.q;\n      }\n\n      const $body = $('body');\n\n      const mazeViewSize = 500;\n      const mazeWidth = (mazeViewSize / 8) * maze.map.width;\n      const mazeHeight = (mazeViewSize / 8) * maze.map.height;\n      const appMargin = 10;\n      app.renderer.resize(mazeWidth + appMargin * 2, mazeHeight + appMargin * 2)\n\n      const $rewardBarContainer = $('<div></div>').addClass('embed-reward-bar');\n\n      $body\n        .append($rewardBarContainer)\n        .append($('<div></div>').addClass('embed-app')\n          .append(app.view)\n        );\n\n      let topView;\n      let mazeView;\n      if (embedConfig.mapEditable) {\n        const mazeEditorPalette = new ExhibitMazeEditorPalette(\n          $('<div></div>').addClass('embed-palette').appendTo($body),\n          config\n        );\n        mazeEditorPalette.events.on('action', (type) => {\n          if (type === 'reset-map') {\n            maze.copy(Maze.fromJSON({ map: config.map, items: config.mapItems }));\n            maze.reset();\n            robot.reset();\n            ai.clear();\n          }\n        });\n\n        Object.entries(mazeEditorPalette.tileButtons).forEach(([id, button]) => {\n          if (!embedConfig.tiles.includes(id)) {\n            button.css({ display: 'none' });\n          }\n        });\n\n        if (!embedConfig.mapEditable) {\n          mazeEditorPalette.resetMapButton.css({ display: 'none' });\n        }\n\n        topView = new MazeEditor(\n          $('<div></div>').addClass('embed-maze').appendTo($body),\n          maze, mazeEditorPalette, config, textures\n        );\n        mazeView = topView.mazeView;\n      } else {\n        topView = new MazeView(maze, config, textures);\n        mazeView = topView;\n        $body.addClass('no-palette');\n      }\n\n      app.stage.addChild(topView.displayObject);\n      topView.displayObject.width = mazeWidth;\n      topView.displayObject.height = mazeHeight;\n      topView.displayObject.x = appMargin;\n      topView.displayObject.y = appMargin;\n\n      if (embedConfig.showQValues) {\n        const aiOverlay = new MazeViewQvalueOverlay(mazeView, ai);\n        mazeView.addOverlay(aiOverlay.displayObject);\n        aiOverlay.toggle();\n      }\n\n      const policyOverlay = new MazeViewPolicyOverlay(mazeView, ai, textures.arrow);\n      mazeView.addOverlay(policyOverlay.displayObject);\n      policyOverlay.hide();\n\n      if (embedConfig.showPolicy) {\n        policyOverlay.show();\n      }\n\n      app.ticker.add(time => topView.animate(time));\n\n      trainingView = new AITrainingView(ai, topView.getRobotView());\n      $('<div></div>')\n        .addClass('embed-training')\n        .appendTo($body)\n        .append(trainingView.$element);\n\n      trainingView.events\n        .on('policy-show', () => {\n          policyOverlay.show();\n        })\n        .on('policy-hide', () => {\n          policyOverlay.hide();\n        });\n\n      // run,turbo,clear,reset-map,xr,showqv\n      const commandButtonMap = {\n        run: trainingView.$runButton,\n        turbo: trainingView.$turboButton,\n        clear: trainingView.$clearButton,\n        step: trainingView.$stepButton,\n        xr: trainingView.$explorationRateSlider,\n        policy: trainingView.$viewPolicyButton,\n        \"reset-map\": null,\n        showqv: null,\n      };\n\n      Object.entries(commandButtonMap).forEach(([command, $button]) => {\n        if ($button && !embedConfig.commands.includes(command)) {\n          $button.css({ display: 'none' });\n        }\n      });\n\n      if (embedConfig.rewardBar) {\n        const rewardBar = new RewardBar(topView.getRobotView());\n        $rewardBarContainer.append(rewardBar.$element);\n      }\n\n      const reactionController = new ReactionController($body, config);\n      topView.getRobotView().events.on('reactEnd', (animation) => {\n        const bounds = topView.getRobotView().sprite.getBounds();\n        reactionController.launchReaction(animation.reaction, bounds.x, bounds.y - bounds.height / 2);\n      });\n\n      // Refresh language\n      I18n.setLanguage(I18n.getLanguage());\n\n      if (embedConfig.autoRun) {\n        trainingView.running = true;\n        trainingView.robotIdle = false;\n        ai.step();\n      }\n\n      topView.getRobotView().speed = RobotView.Speed.SLOW;\n    });\n  });\n\n// Disable context menu on long touch\n$(window).on('contextmenu', (event) => {\n  if (event.button !== 2 && !(event.clientX === event.clientY === 1)) {\n    event.preventDefault();\n  }\n});\n\n\n"],"sourceRoot":""}